!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(VERBOSE).SILENT	build/Makefile	/^$(VERBOSE).SILENT:$/;"	t
A	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  GLfloat R,G,B,A;$/;"	m	class:NDTVizGlutColor4f	typeref:typename:GLfloat
ARCHITECTURE_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
B	oru_minimal/include/ndt_map/ndt_cell.h	/^  float R,G,B; 			\/\/\/RGB values [0..1] - Special implementations for PointXYZRGB & PointXYZI$/;"	m	class:perception_oru::NDTCell	typeref:typename:float
B	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  GLfloat R,G,B,A;$/;"	m	class:NDTVizGlutColor4f	typeref:typename:GLfloat
Bin	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    double Bin(int n,double p,int r)$/;"	f	struct:TEventData	typeref:typename:double
BuildDirectory	build/CTestConfiguration.ini	/^BuildDirectory: \/home\/anestis\/workspace\/se_ndt\/build$/;"	k
BuildName	build/CTestConfiguration.ini	/^BuildName: $/;"	k
CATKIN_MARKER_FILE	build/atomic_configure/_setup_util.py	/^CATKIN_MARKER_FILE = '.catkin'$/;"	v
CATKIN_MARKER_FILE	build/catkin_generated/installspace/_setup_util.py	/^CATKIN_MARKER_FILE = '.catkin'$/;"	v
CATKIN_MARKER_FILE	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^CATKIN_MARKER_FILE = '.catkin'$/;"	v
CATKIN_MARKER_FILE	build/devel/_setup_util.py	/^CATKIN_MARKER_FILE = '.catkin'$/;"	v
CELL_UPDATE_MODE_COVARIANCE_INTERSECTION	oru_minimal/include/ndt_map/ndt_cell.h	/^#define CELL_UPDATE_MODE_COVARIANCE_INTERSECTION /;"	d
CELL_UPDATE_MODE_ERROR_REFINEMENT	oru_minimal/include/ndt_map/ndt_cell.h	/^#define CELL_UPDATE_MODE_ERROR_REFINEMENT	/;"	d
CELL_UPDATE_MODE_SAMPLE_VARIANCE	oru_minimal/include/ndt_map/ndt_cell.h	/^#define CELL_UPDATE_MODE_SAMPLE_VARIANCE /;"	d
CELL_UPDATE_MODE_SAMPLE_VARIANCE_SURFACE_ESTIMATION	oru_minimal/include/ndt_map/ndt_cell.h	/^#define CELL_UPDATE_MODE_SAMPLE_VARIANCE_SURFACE_ESTIMATION /;"	d
CELL_UPDATE_MODE_STUDENT_T	oru_minimal/include/ndt_map/ndt_cell.h	/^#define CELL_UPDATE_MODE_STUDENT_T /;"	d
CEVENT_COUNTER_DATA_H	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^#define CEVENT_COUNTER_DATA_H$/;"	d
CLEAR_MIN_NB_POINTS	oru_minimal/include/ndt_map/ndt_cell.h	/^  static bool   CLEAR_MIN_NB_POINTS;$/;"	m	class:perception_oru::NDTCell	typeref:typename:bool
CLEAR_MIN_NB_POINTS	oru_minimal/src/ndt_cell.cpp	/^bool NDTCell::CLEAR_MIN_NB_POINTS=false;$/;"	m	class:perception_oru::NDTCell	typeref:typename:bool
CMAKE_AR	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_AR	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/anestis\/workspace\/se_ndt\/build$/;"	m
CMAKE_BUILD_TYPE	CMakeLists.txt	/^  set(CMAKE_BUILD_TYPE Release)$/;"	v
CMAKE_C11_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")$/;"	v
CMAKE_C90_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")$/;"	v
CMAKE_C99_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMPILER_IS_CYGWIN	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_CYGWIN	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_GNUCC	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCC 1)$/;"	v
CMAKE_COMPILER_IS_GNUCXX	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX 1)$/;"	v
CMAKE_COMPILER_IS_MINGW	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_COMPILER_IS_MINGW	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_CROSSCOMPILING	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX20_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "\/usr\/bin\/c++")$/;"	v
CMAKE_CXX_COMPILER_ABI	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "ELF")$/;"	v
CMAKE_CXX_COMPILER_AR	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "\/usr\/bin\/gcc-ar")$/;"	v
CMAKE_CXX_COMPILER_ARG1	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/ndt_libs.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/ros_register.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/se_ndt.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/simple_registration.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_LOADED	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib")$/;"	v
CMAKE_CXX_COMPILER_VERSION	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "8.3.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_FLAGS	CMakeLists.txt	/^set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} -std=c++11")$/;"	v
CMAKE_CXX_FLAGS	CMakeLists.txt	/^set(CMAKE_CXX_FLAGS "-Wno-ignored-attributes -Wno-deprecated-declarations -Wno-narrowing")$/;"	v
CMAKE_CXX_FLAGS_DEBUG	CMakeLists.txt	/^set(CMAKE_CXX_FLAGS_DEBUG "-g")$/;"	v
CMAKE_CXX_FLAGS_DEBUG	pcl_find_sse.cmake	/^    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${SSE_FLAGS}")$/;"	v
CMAKE_CXX_FLAGS_RELEASE	CMakeLists.txt	/^set(CMAKE_CXX_FLAGS_RELEASE "-O3")$/;"	v
CMAKE_CXX_FLAGS_RELEASE	pcl_find_sse.cmake	/^    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${SSE_FLAGS}")$/;"	v
CMAKE_CXX_FLAGS_RELWITHDEBINFO	pcl_find_sse.cmake	/^    set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} ${SSE_FLAGS}")$/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/8.3.0\/include/;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/8.3.0;\/usr\/lib6/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Linux")$/;"	v
CMAKE_CXX_SIMULATE_ID	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;mm;CPP)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/CMakeFiles/ndt_libs.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/CMakeFiles/ros_register.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/CMakeFiles/se_ndt.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/CMakeFiles/simple_registration.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_ABI_COMPILED	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_ABI_COMPILED TRUE)$/;"	v
CMAKE_C_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_C_COMPILER	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER "\/usr\/bin\/cc")$/;"	v
CMAKE_C_COMPILER_ABI	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ABI "ELF")$/;"	v
CMAKE_C_COMPILER_AR	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_AR "\/usr\/bin\/gcc-ar")$/;"	v
CMAKE_C_COMPILER_ARG1	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARG1 "")$/;"	v
CMAKE_C_COMPILER_ENV_VAR	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ENV_VAR "CC")$/;"	v
CMAKE_C_COMPILER_ID	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID_RUN	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID_RUN 1)$/;"	v
CMAKE_C_COMPILER_LOADED	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LOADED 1)$/;"	v
CMAKE_C_COMPILER_RANLIB	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib")$/;"	v
CMAKE_C_COMPILER_VERSION	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION "8.3.0")$/;"	v
CMAKE_C_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_C_COMPILER_WORKS	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WORKS TRUE)$/;"	v
CMAKE_C_COMPILER_WRAPPER	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WRAPPER "")$/;"	v
CMAKE_C_COMPILE_FEATURES	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macr/;"	v
CMAKE_C_FLAGS	CMakeLists.txt	/^set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")$/;"	v
CMAKE_C_IGNORE_EXTENSIONS	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/8.3.0\/include;\//;"	v
CMAKE_C_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/8.3.0;\/usr\/lib64;/;"	v
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_C_LINKER_PREFERENCE	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_PREFERENCE 10)$/;"	v
CMAKE_C_PLATFORM_ID	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_PLATFORM_ID "Linux")$/;"	v
CMAKE_C_SIMULATE_ID	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_ID "")$/;"	v
CMAKE_C_SIMULATE_VERSION	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_VERSION "")$/;"	v
CMAKE_C_SIZEOF_DATA_PTR	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_C_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)$/;"	v
CMAKE_C_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/CMakeFiles/ndt_libs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/CMakeFiles/ros_register.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/CMakeFiles/se_ndt.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/CMakeFiles/simple_registration.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_GENERATOR	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/_catkin_empty_exported_target.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/actionlib_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/bond_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/bond_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/bond_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/bond_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/bond_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/clean_test_results.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/download_extra_data.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/doxygen.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/dynamic_reconfigure_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/dynamic_reconfigure_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/dynamic_reconfigure_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/dynamic_reconfigure_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/dynamic_reconfigure_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/geometry_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/geometry_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/geometry_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/geometry_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/geometry_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/ndt_libs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/nodelet_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/nodelet_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/nodelet_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/nodelet_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/nodelet_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/nodelet_topic_tools_gencfg.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/pcl_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/pcl_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/pcl_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/pcl_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/pcl_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/pcl_ros_gencfg.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/ros_register.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/roscpp_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/roscpp_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/roscpp_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/roscpp_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/roscpp_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/rosgraph_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/rosgraph_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/rosgraph_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/rosgraph_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/rosgraph_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/run_tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/se_ndt.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/sensor_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/sensor_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/sensor_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/sensor_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/sensor_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/simple_registration.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_srvs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_srvs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_srvs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_srvs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/std_srvs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf2_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf2_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf2_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf2_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf2_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/tf_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/topic_tools_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/topic_tools_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/topic_tools_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/topic_tools_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/topic_tools_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPEND_INFO_FILES	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPEND_INFO_FILES$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/_catkin_empty_exported_target.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/actionlib_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/bond_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/bond_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/bond_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/bond_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/bond_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/clean_test_results.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/download_extra_data.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/doxygen.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/dynamic_reconfigure_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/dynamic_reconfigure_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/dynamic_reconfigure_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/dynamic_reconfigure_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/dynamic_reconfigure_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/geometry_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/geometry_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/geometry_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/geometry_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/geometry_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/ndt_libs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/nodelet_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/nodelet_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/nodelet_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/nodelet_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/nodelet_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/nodelet_topic_tools_gencfg.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/pcl_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/pcl_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/pcl_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/pcl_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/pcl_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/pcl_ros_gencfg.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/ros_register.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/roscpp_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/roscpp_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/roscpp_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/roscpp_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/roscpp_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/rosgraph_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/rosgraph_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/rosgraph_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/rosgraph_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/rosgraph_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/run_tests.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/se_ndt.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/sensor_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/sensor_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/sensor_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/sensor_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/sensor_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/simple_registration.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_srvs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_srvs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_srvs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_srvs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/std_srvs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf2_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf2_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf2_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf2_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf2_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/tf_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/topic_tools_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/topic_tools_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/topic_tools_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/topic_tools_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/topic_tools_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_HOST_SYSTEM	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Linux-4.19.52-gentoo")$/;"	v
CMAKE_HOST_SYSTEM_NAME	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Linux")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "4.19.52-gentoo")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Release")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_MAKEFILE_DEPENDS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_DEPENDS$/;"	v
CMAKE_MAKEFILE_OUTPUTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_OUTPUTS$/;"	v
CMAKE_MAKEFILE_PRODUCTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_PRODUCTS$/;"	v
CMAKE_MODULE_PATH	CMakeLists.txt	/^set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}")$/;"	v
CMAKE_MT	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_MT	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_PREFIX_PATH	build/atomic_configure/_setup_util.py	/^            CMAKE_PREFIX_PATH = '\/opt\/ros\/kinetic'.split(';')$/;"	v
CMAKE_PREFIX_PATH	build/atomic_configure/_setup_util.py	/^        CMAKE_PREFIX_PATH = os.pathsep.join(CMAKE_PREFIX_PATH)$/;"	v
CMAKE_PREFIX_PATH	build/catkin_generated/installspace/_setup_util.py	/^            CMAKE_PREFIX_PATH = '\/opt\/ros\/kinetic'.split(';')$/;"	v
CMAKE_PREFIX_PATH	build/catkin_generated/installspace/_setup_util.py	/^        CMAKE_PREFIX_PATH = os.pathsep.join(CMAKE_PREFIX_PATH)$/;"	v
CMAKE_PREFIX_PATH	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^            CMAKE_PREFIX_PATH = '\/opt\/ros\/kinetic'.split(';')$/;"	v
CMAKE_PREFIX_PATH	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^        CMAKE_PREFIX_PATH = os.pathsep.join(CMAKE_PREFIX_PATH)$/;"	v
CMAKE_PREFIX_PATH	build/devel/_setup_util.py	/^            CMAKE_PREFIX_PATH = '\/opt\/ros\/kinetic'.split(';')$/;"	v
CMAKE_PREFIX_PATH	build/devel/_setup_util.py	/^        CMAKE_PREFIX_PATH = os.pathsep.join(CMAKE_PREFIX_PATH)$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/anestis\/workspace\/se_ndt\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/anestis\/workspace\/se_ndt")$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^          set(CMAKE_REQUIRED_FLAGS "-msse")$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^          set(CMAKE_REQUIRED_FLAGS "-msse2")$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^          set(CMAKE_REQUIRED_FLAGS "-msse3")$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^          set(CMAKE_REQUIRED_FLAGS "-msse4.1")$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^          set(CMAKE_REQUIRED_FLAGS "\/arch:SSE")$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^          set(CMAKE_REQUIRED_FLAGS "\/arch:SSE2")$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^      set(CMAKE_REQUIRED_FLAGS "-msse4.1")$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^      set(CMAKE_REQUIRED_FLAGS)$/;"	v
CMAKE_REQUIRED_FLAGS	pcl_find_sse.cmake	/^  set(CMAKE_REQUIRED_FLAGS)$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/anestis\/workspace\/se_ndt$/;"	m
CMAKE_SYSTEM	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Linux-4.19.52-gentoo")$/;"	v
CMAKE_SYSTEM_LOADED	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Linux")$/;"	v
CMAKE_SYSTEM_PROCESSOR	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_SYSTEM_VERSION	build/CMakeFiles/3.14.6/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "4.19.52-gentoo")$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	build/CMakeFiles/ndt_libs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	build/CMakeFiles/ros_register.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	build/CMakeFiles/se_ndt.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_DEFINITIONS_CXX	build/CMakeFiles/simple_registration.dir/DependInfo.cmake	/^set(CMAKE_TARGET_DEFINITIONS_CXX$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/_catkin_empty_exported_target.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/actionlib_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/bond_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/bond_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/bond_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/bond_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/bond_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/clean_test_results.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/download_extra_data.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/doxygen.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/dynamic_reconfigure_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/dynamic_reconfigure_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/dynamic_reconfigure_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/dynamic_reconfigure_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/dynamic_reconfigure_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/geometry_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/geometry_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/geometry_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/geometry_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/geometry_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/ndt_libs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/nodelet_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/nodelet_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/nodelet_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/nodelet_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/nodelet_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/nodelet_topic_tools_gencfg.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/pcl_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/pcl_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/pcl_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/pcl_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/pcl_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/pcl_ros_gencfg.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/ros_register.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/roscpp_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/roscpp_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/roscpp_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/roscpp_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/roscpp_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/rosgraph_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/rosgraph_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/rosgraph_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/rosgraph_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/rosgraph_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/run_tests.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/se_ndt.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/sensor_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/sensor_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/sensor_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/sensor_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/sensor_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/simple_registration.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_srvs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_srvs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_srvs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_srvs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/std_srvs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tests.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf2_msgs_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf2_msgs_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf2_msgs_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf2_msgs_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf2_msgs_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/tf_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/topic_tools_generate_messages_cpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/topic_tools_generate_messages_eus.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/topic_tools_generate_messages_lisp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/topic_tools_generate_messages_nodejs.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/topic_tools_generate_messages_py.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMyEllipsoid	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			CMyEllipsoid() : m_eigVal(),m_eigVec(),m_prevComputedCov(),$/;"	f	class:mrpt::opengl::CMyEllipsoid
CMyEllipsoid	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^		class OPENGL_IMPEXP CMyEllipsoid : public CRenderizableDisplayList$/;"	c	namespace:mrpt::opengl
CMyEllipsoid	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^		class OPENGL_IMPEXP CMyEllipsoid;$/;"	v	namespace:mrpt::opengl	typeref:class:OPENGL_IMPEXP
COMPILER_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COND_SCORE	src/se_ndt.cpp	/^#define COND_SCORE /;"	d	file:
CROSS_ENTROPY	src/ndt_histogram.cpp	/^#define CROSS_ENTROPY$/;"	d	file:
CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE	build/CTestCustom.cmake	/^set(CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE 0)$/;"	v
CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE	build/CTestCustom.cmake	/^set(CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE 0)$/;"	v
CTestSubmitRetryCount	build/CTestConfiguration.ini	/^CTestSubmitRetryCount: $/;"	k
CTestSubmitRetryDelay	build/CTestConfiguration.ini	/^CTestSubmitRetryDelay: $/;"	k
CVSCommand	build/CTestConfiguration.ini	/^CVSCommand: $/;"	k
CVSUpdateOptions	build/CTestConfiguration.ini	/^CVSUpdateOptions: $/;"	k
CXX_STD	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD /;"	d	file:
CYGWIN	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
CYGWIN	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
C_DIALECT	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT /;"	d	file:
C_DIALECT	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT$/;"	d	file:
C_DIALECT	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define C_DIALECT /;"	d	file:
CellClass	oru_minimal/include/ndt_map/ndt_cell.h	/^  enum CellClass {HORIZONTAL=0, VERTICAL, INCLINED, ROUGH, UNKNOWN};$/;"	g	class:perception_oru::NDTCell
CellPtrVector	oru_minimal/include/ndt_map/spatial_index.h	/^    typedef std::set<NDTCell*> CellPtrVector;$/;"	t	class:perception_oru::SpatialIndex	typeref:typename:std::set<NDTCell * >
CellVector	oru_minimal/include/ndt_map/cell_vector.h	/^class CellVector : public SpatialIndex$/;"	c	namespace:perception_oru
CellVector	oru_minimal/src/cell_vector.cpp	/^CellVector::CellVector():mp(new pcl::PointCloud<pcl::PointXYZ>())$/;"	f	class:perception_oru::CellVector
CellVector	oru_minimal/src/cell_vector.cpp	/^CellVector::CellVector(NDTCell* cellPrototype):mp(new pcl::PointCloud<pcl::PointXYZ>())$/;"	f	class:perception_oru::CellVector
CellVector	oru_minimal/src/cell_vector.cpp	/^CellVector::CellVector(const CellVector& other):protoType(NULL)$/;"	f	class:perception_oru::CellVector
CellVector3d	oru_minimal/include/ndt_map/lazy_grid.h	/^  CellVector3d(size_t x=0, size_t y=0, size_t z=0,  NDTCell* init_val=NULL) :$/;"	f	class:perception_oru::CellVector3d
CellVector3d	oru_minimal/include/ndt_map/lazy_grid.h	/^class CellVector3d {$/;"	c	namespace:perception_oru
CellVectorConstItr	oru_minimal/include/ndt_map/spatial_index.h	/^    typedef typename CellPtrVector::const_iterator CellVectorConstItr;$/;"	t	class:perception_oru::SpatialIndex	typeref:typename:CellPtrVector::const_iterator
CellVectorItr	oru_minimal/include/ndt_map/spatial_index.h	/^    typedef typename CellPtrVector::iterator CellVectorItr;$/;"	t	class:perception_oru::SpatialIndex	typeref:typename:CellPtrVector::iterator
Compiler	build/CTestConfiguration.ini	/^Compiler: \/usr\/bin\/c++$/;"	k
CompilerVersion	build/CTestConfiguration.ini	/^CompilerVersion: 8.3.0$/;"	k
ConfigureCommand	build/CTestConfiguration.ini	/^ConfigureCommand: "\/usr\/bin\/cmake" "\/home\/anestis\/workspace\/se_ndt"$/;"	k
CostDataFile	build/CTestConfiguration.ini	/^CostDataFile: $/;"	k
CoverageCommand	build/CTestConfiguration.ini	/^CoverageCommand: $/;"	k
CoverageExtraFlags	build/CTestConfiguration.ini	/^CoverageExtraFlags: $/;"	k
CurlOptions	build/CTestConfiguration.ini	/^CurlOptions: $/;"	k
D1	include/se_ndt/ndt_histogram.h	/^    double D1, D2; $/;"	m	class:perception_oru::NDTHistogram	typeref:typename:double
D1	oru_minimal/include/ndt_map/ndt_histogram.h	/^    double D1, D2;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:double
D2	include/se_ndt/ndt_histogram.h	/^    double D1, D2; $/;"	m	class:perception_oru::NDTHistogram	typeref:typename:double
D2	oru_minimal/include/ndt_map/ndt_histogram.h	/^    double D1, D2;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:double
DEC	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DELTA_SCORE	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    double DELTA_SCORE;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:double
DELTA_SCORE	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    double DELTA_SCORE;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:double
Darray	oru_minimal/include/ndt_map/lazy_grid.h	/^        Darray(): array(NULL), size{}{}$/;"	f	struct:perception_oru::LazyGrid::Darray
Darray	oru_minimal/include/ndt_map/lazy_grid.h	/^    struct Darray$/;"	s	class:perception_oru::LazyGrid
DefaultCTestConfigurationType	build/CTestConfiguration.ini	/^DefaultCTestConfigurationType: $/;"	k
ENTROPY	include/se_ndt/ndt_histogram.h	/^    double ENTROPY;$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:double
ENV_VAR_SUBFOLDERS	build/atomic_configure/_setup_util.py	/^ENV_VAR_SUBFOLDERS = {$/;"	v
ENV_VAR_SUBFOLDERS	build/catkin_generated/installspace/_setup_util.py	/^ENV_VAR_SUBFOLDERS = {$/;"	v
ENV_VAR_SUBFOLDERS	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^ENV_VAR_SUBFOLDERS = {$/;"	v
ENV_VAR_SUBFOLDERS	build/devel/_setup_util.py	/^ENV_VAR_SUBFOLDERS = {$/;"	v
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
ET	include/se_ndt/se_ndt.hpp	/^typedef Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMajor> ET;$/;"	t	typeref:typename:Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMajor>
EVAL_FACTOR	oru_minimal/include/ndt_map/ndt_cell.h	/^  static double EVAL_FACTOR;													\/\/ ???$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
EVAL_FACTOR	oru_minimal/src/ndt_cell.cpp	/^double NDTCell::EVAL_FACTOR=0;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
EVAL_ROUGH_THR	oru_minimal/include/ndt_map/ndt_cell.h	/^  static double EVAL_ROUGH_THR;		\/\/ = 0.1;								\/\/ ???$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
EVAL_ROUGH_THR	oru_minimal/src/ndt_cell.cpp	/^double NDTCell::EVAL_ROUGH_THR=0;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
EVEC_INCLINED_THR	oru_minimal/include/ndt_map/ndt_cell.h	/^  static double EVEC_INCLINED_THR; 	\/\/ = cos(8*M_PI\/18);\/\/10 degree slope;	\/\/ ???$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
EVEC_INCLINED_THR	oru_minimal/src/ndt_cell.cpp	/^double NDTCell::EVEC_INCLINED_THR=0;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
EVENTMAP_FREE	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^#define EVENTMAP_FREE /;"	d
EVENTMAP_NUMBER_OF_EVENTS_STORED	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^#define EVENTMAP_NUMBER_OF_EVENTS_STORED /;"	d
EVENTMAP_OBSERVATION_LIMIT	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^#define EVENTMAP_OBSERVATION_LIMIT /;"	d
EVENTMAP_OCCU	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^#define EVENTMAP_OCCU /;"	d
EVENTMAP_UNKNOWN	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^#define EVENTMAP_UNKNOWN /;"	d
EVENTMAP_USE_RECENCY_FILTERING	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^#define EVENTMAP_USE_RECENCY_FILTERING$/;"	d
FIND_G2O_LIBRARY	FindG2O.cmake	/^MACRO(FIND_G2O_LIBRARY MYLIBRARY MYLIBRARYNAME)$/;"	m
G	oru_minimal/include/ndt_map/ndt_cell.h	/^  float R,G,B; 			\/\/\/RGB values [0..1] - Special implementations for PointXYZRGB & PointXYZI$/;"	m	class:perception_oru::NDTCell	typeref:typename:float
G	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  GLfloat R,G,B,A;$/;"	m	class:NDTVizGlutColor4f	typeref:typename:GLfloat
G2O_FOUND	FindG2O.cmake	/^  SET(G2O_FOUND "YES")$/;"	v
G2O_FOUND	FindG2O.cmake	/^SET(G2O_FOUND "NO")$/;"	v
G2O_SOLVERS_FOUND	FindG2O.cmake	/^  SET(G2O_SOLVERS_FOUND "YES")$/;"	v
G2O_SOLVERS_FOUND	FindG2O.cmake	/^SET(G2O_SOLVERS_FOUND "NO")$/;"	v
GITCommand	build/CTestConfiguration.ini	/^GITCommand: $/;"	k
GITInitSubmodules	build/CTestConfiguration.ini	/^GITInitSubmodules: $/;"	k
GITUpdateCustom	build/CTestConfiguration.ini	/^GITUpdateCustom: $/;"	k
GITUpdateOptions	build/CTestConfiguration.ini	/^GITUpdateOptions: $/;"	k
GLEW_STATIC	oru_minimal/include/ndt_visualisation/opengl_internals.h	/^#define GLEW_STATIC$/;"	d
GL_GLEXT_PROTOTYPES	oru_minimal/include/ndt_visualisation/opengl_internals.h	/^#define GL_GLEXT_PROTOTYPES /;"	d
GetDataString	oru_minimal/src/lazy_grid.cpp	/^std::string LazyGrid::GetDataString()$/;"	f	class:perception_oru::LazyGrid	typeref:typename:std::string
GetVal	oru_minimal/include/ndt_map/lazy_grid.h	/^  NDTCell* GetVal(size_t i, size_t j, size_t k)  {$/;"	f	class:perception_oru::CellVector3d	typeref:typename:NDTCell *
GetVal	oru_minimal/include/ndt_map/lazy_grid.h	/^  NDTCell* GetVal(size_t i, size_t j, size_t k, bool &successfull)  {$/;"	f	class:perception_oru::CellVector3d	typeref:typename:NDTCell *
HEX	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
HIST_ACCURATE_DISTANCE	src/se_ndt.cpp	/^#define  HIST_ACCURATE_DISTANCE /;"	d	file:
HIST_BINS1	src/se_ndt.cpp	/^#define HIST_BINS1 /;"	d	file:
HIST_BINS2	src/se_ndt.cpp	/^#define HIST_BINS2 /;"	d	file:
HIST_FREQ_METER	src/se_ndt.cpp	/^#define HIST_FREQ_METER /;"	d	file:
HORIZONTAL	oru_minimal/include/ndt_map/ndt_cell.h	/^  enum CellClass {HORIZONTAL=0, VERTICAL, INCLINED, ROUGH, UNKNOWN};$/;"	e	enum:perception_oru::NDTCell::CellClass
HessianF	include/se_ndt/ndt_matcher_d2d_se.h	/^	Eigen::Matrix<double,6,6> HessianF;$/;"	m	class:perception_oru::NDTMatcherD2D_SE	typeref:typename:Eigen::Matrix<double,6,6>
Hest	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,18,6> Hest;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,18,6>
Hest	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,9,3> Hest;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,9,3>
Hest	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Matrix<double,18,6> Hest;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Matrix<double,18,6>
ID_VOID_MAIN	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
IMPLEMENTS_SERIALIZABLE	oru_minimal/src/CMyEllipsoid.cpp	/^IMPLEMENTS_SERIALIZABLE( CMyEllipsoid, CRenderizableDisplayList, mrpt::opengl )$/;"	f
INCLINED	oru_minimal/include/ndt_map/ndt_cell.h	/^  enum CellClass {HORIZONTAL=0, VERTICAL, INCLINED, ROUGH, UNKNOWN};$/;"	e	enum:perception_oru::NDTCell::CellClass
IS_DARWIN	build/atomic_configure/_setup_util.py	/^IS_DARWIN = (system == 'Darwin')$/;"	v
IS_DARWIN	build/catkin_generated/installspace/_setup_util.py	/^IS_DARWIN = (system == 'Darwin')$/;"	v
IS_DARWIN	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^IS_DARWIN = (system == 'Darwin')$/;"	v
IS_DARWIN	build/devel/_setup_util.py	/^IS_DARWIN = (system == 'Darwin')$/;"	v
IS_WINDOWS	build/atomic_configure/_setup_util.py	/^IS_WINDOWS = (system == 'Windows')$/;"	v
IS_WINDOWS	build/catkin_generated/installspace/_setup_util.py	/^IS_WINDOWS = (system == 'Windows')$/;"	v
IS_WINDOWS	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^IS_WINDOWS = (system == 'Windows')$/;"	v
IS_WINDOWS	build/devel/_setup_util.py	/^IS_WINDOWS = (system == 'Windows')$/;"	v
ITR_MAX	include/se_ndt/ndt_matcher_p2d_se.h	/^    int ITR_MAX;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:int
ITR_MAX	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    int ITR_MAX;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:int
ITR_MAX	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    int ITR_MAX;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:int
ITR_MAX	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    int ITR_MAX;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:int
InitializeDefaultValues	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::InitializeDefaultValues(){$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
InitializeVariables	oru_minimal/include/ndt_map/ndt_cell.h	/^  void InitializeVariables(){$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
JFFERR	oru_minimal/include/ndt_map/ndt_cell.h	/^#define JFFERR(/;"	d
JFFERR	oru_minimal/src/lazy_grid.cpp	/^#define JFFERR(/;"	d	file:
JFFERR	src/lazy_grid_improved.cpp	/^#define JFFERR(/;"	d	file:
Jest	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,6> Jest;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,6>
Jest	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,3> Jest;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,3>
Jest	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Matrix<double,3,6> Jest;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Matrix<double,3,6>
JtBJ	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,6,6> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,6,6>
JtBJ	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,3> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,3>
KEEP_POINTS	oru_minimal/include/ndt_map/ndt_cell.h	/^#define KEEP_POINTS$/;"	d
L	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    double L()$/;"	f	struct:TEventData	typeref:typename:double
LSL_CELL_VECTOR_HH	oru_minimal/include/ndt_map/cell_vector.h	/^#define LSL_CELL_VECTOR_HH$/;"	d
LSL_LAZZY_GRID_HH	oru_minimal/include/ndt_map/lazy_grid.h	/^#define LSL_LAZZY_GRID_HH$/;"	d
LSL_POINT_CLOUD_UTILS	oru_minimal/include/ndt_map/pointcloud_utils.h	/^#define LSL_POINT_CLOUD_UTILS$/;"	d
LabelsForSubprojects	build/CTestConfiguration.ini	/^LabelsForSubprojects: $/;"	k
LazyGrid	oru_minimal/include/ndt_map/lazy_grid.h	/^    LazyGrid(){InitializeDefaultValues();}$/;"	f	class:perception_oru::LazyGrid
LazyGrid	oru_minimal/include/ndt_map/lazy_grid.h	/^class LazyGrid : public SpatialIndex$/;"	c	namespace:perception_oru
LazyGrid	oru_minimal/src/lazy_grid.cpp	/^  LazyGrid::LazyGrid(double cellSizeX_, double cellSizeY_, double cellSizeZ_)$/;"	f	class:perception_oru::LazyGrid
LazyGrid	oru_minimal/src/lazy_grid.cpp	/^LazyGrid::LazyGrid(LazyGrid *prot)$/;"	f	class:perception_oru::LazyGrid
LazyGrid	oru_minimal/src/lazy_grid.cpp	/^LazyGrid::LazyGrid(double _sizeXmeters, double _sizeYmeters, double _sizeZmeters,$/;"	f	class:perception_oru::LazyGrid
LazyGrid	oru_minimal/src/lazy_grid.cpp	/^LazyGrid::LazyGrid(double cellSize)  : protoType(NULL)$/;"	f	class:perception_oru::LazyGrid
LazyGrid	src/lazy_grid_improved.cpp	/^LazyGrid::LazyGrid(LazyGrid *prot)$/;"	f	class:lslgeneric::LazyGrid
LazyGrid	src/lazy_grid_improved.cpp	/^LazyGrid::LazyGrid(double _sizeXmeters, double _sizeYmeters, double _sizeZmeters,$/;"	f	class:lslgeneric::LazyGrid
LazyGrid	src/lazy_grid_improved.cpp	/^LazyGrid::LazyGrid(double cellSize) $/;"	f	class:lslgeneric::LazyGrid
MGFEAT	src/se_ndt.cpp	/^#define MGFEAT /;"	d	file:
MINGW	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^  set(MINGW 1)$/;"	v
MINGW	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^  set(MINGW 1)$/;"	v
MIN_NB_POINTS_FOR_GAUSSIAN	oru_minimal/include/ndt_map/ndt_cell.h	/^  static int    MIN_NB_POINTS_FOR_GAUSSIAN;$/;"	m	class:perception_oru::NDTCell	typeref:typename:int
MIN_NB_POINTS_FOR_GAUSSIAN	oru_minimal/src/ndt_cell.cpp	/^int NDTCell::MIN_NB_POINTS_FOR_GAUSSIAN=0;$/;"	m	class:perception_oru::NDTCell	typeref:typename:int
MIN_NB_POINTS_SET_UNIFORM	oru_minimal/include/ndt_map/ndt_cell.h	/^  static bool   MIN_NB_POINTS_SET_UNIFORM;$/;"	m	class:perception_oru::NDTCell	typeref:typename:bool
MIN_NB_POINTS_SET_UNIFORM	oru_minimal/src/ndt_cell.cpp	/^bool NDTCell::MIN_NB_POINTS_SET_UNIFORM=false;$/;"	m	class:perception_oru::NDTCell	typeref:typename:bool
MakeCommand	build/CTestConfiguration.ini	/^MakeCommand: $/;"	k
MapLoader	src/loader_test.cpp	/^        MapLoader(ros::NodeHandle& nh):$/;"	f	class:MapLoader	file:
MapLoader	src/loader_test.cpp	/^class MapLoader{$/;"	c	file:
MemoryCheckCommand	build/CTestConfiguration.ini	/^MemoryCheckCommand: $/;"	k
MemoryCheckCommandOptions	build/CTestConfiguration.ini	/^MemoryCheckCommandOptions: $/;"	k
MemoryCheckSanitizerOptions	build/CTestConfiguration.ini	/^MemoryCheckSanitizerOptions: $/;"	k
MemoryCheckSuppressionFile	build/CTestConfiguration.ini	/^MemoryCheckSuppressionFile: $/;"	k
MemoryCheckType	build/CTestConfiguration.ini	/^MemoryCheckType: $/;"	k
MoreThuente	include/se_ndt/ndt_matcher_p2d_se.h	/^    struct MoreThuente$/;"	s	class:perception_oru::NDTMatcherP2D_SE
MoreThuente	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    struct MoreThuente$/;"	s	class:perception_oru::NDTMatcherD2D
MoreThuente	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    struct MoreThuente$/;"	s	class:perception_oru::NDTMatcherD2D_2D
MoreThuente	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    struct MoreThuente$/;"	s	class:lslgeneric::NDTMatcherP2D
N	oru_minimal/include/ndt_map/ndt_cell.h	/^  unsigned int N; 	\/\/\/Number of points used for Normal distribution estimation so far$/;"	m	class:perception_oru::NDTCell	typeref:typename:unsigned int
NDTCell	oru_minimal/include/ndt_map/ndt_cell.h	/^  NDTCell()$/;"	f	class:perception_oru::NDTCell
NDTCell	oru_minimal/include/ndt_map/ndt_cell.h	/^  NDTCell(const NDTCell& other)$/;"	f	class:perception_oru::NDTCell
NDTCell	oru_minimal/include/ndt_map/ndt_cell.h	/^  NDTCell(pcl::PointXYZ &center, double &xsize, double &ysize, double &zsize)$/;"	f	class:perception_oru::NDTCell
NDTCell	oru_minimal/include/ndt_map/ndt_cell.h	/^class NDTCell \/\/: public Cell<PointT>$/;"	c	namespace:perception_oru
NDTFuserHMT_SE	include/se_ndt/ndt_fuser_hmt_se.h	/^class NDTFuserHMT_SE : NDTMatch_SE{$/;"	c	namespace:perception_oru
NDTFuserHMT_SE	src/ndt_fuser_hmt_se.cpp	/^NDTFuserHMT_SE::NDTFuserHMT_SE(Eigen::Affine3d a,initializer_list<float> b,initializer_list<int>/;"	f	class:perception_oru::NDTFuserHMT_SE
NDTHistogram	include/se_ndt/ndt_histogram.h	/^  class NDTHistogram{$/;"	c	namespace:perception_oru
NDTHistogram	oru_minimal/include/ndt_map/ndt_histogram.h	/^  class NDTHistogram{$/;"	c	namespace:lslgeneric
NDTHistogram	src/ndt_histogram.cpp	/^  NDTHistogram::NDTHistogram (NDTMap **map,$/;"	f	class:perception_oru::NDTHistogram
NDTHistogram	src/ndt_histogram.cpp	/^  NDTHistogram::NDTHistogram (const NDTHistogram& other){$/;"	f	class:perception_oru::NDTHistogram
NDTHistogram	src/ndt_histogram.cpp	/^  NDTHistogram::NDTHistogram (int linear_classes,$/;"	f	class:perception_oru::NDTHistogram
NDTMATCHERFEATUREF2F_HH	oru_minimal/include/ndt_registration/ndt_matcher_d2d_feature.h	/^#define NDTMATCHERFEATUREF2F_HH$/;"	d
NDTMap	oru_minimal/include/ndt_map/ndt_map.h	/^  NDTMap()$/;"	f	class:perception_oru::NDTMap
NDTMap	oru_minimal/include/ndt_map/ndt_map.h	/^  NDTMap(SpatialIndex *idx, bool dealloc = false)$/;"	f	class:perception_oru::NDTMap
NDTMap	oru_minimal/include/ndt_map/ndt_map.h	/^  NDTMap(const NDTMap& other)$/;"	f	class:perception_oru::NDTMap
NDTMap	oru_minimal/include/ndt_map/ndt_map.h	/^class NDTMap$/;"	c	namespace:perception_oru
NDTMapHMT	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    NDTMapHMT(const NDTMapHMT& other)$/;"	f	class:perception_oru::NDTMapHMT
NDTMapHMT	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    NDTMapHMT(double resolution_, float cenx, float ceny, float cenz, float sizex, float sizey, /;"	f	class:perception_oru::NDTMapHMT
NDTMapHMT	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^class NDTMapHMT : public NDTMap$/;"	c	namespace:perception_oru
NDTMatch_SE	include/se_ndt/se_ndt.hpp	/^		NDTMatch_SE(): NDTMatch_SE({4,0.8},{0,1},{80,80,80},8,50){ };$/;"	f	class:NDTMatch_SE
NDTMatch_SE	include/se_ndt/se_ndt.hpp	/^		NDTMatch_SE(int nIn): NDTMatch_SE({4,0.8},{0,1},{80,80,80},nIn,50){ };$/;"	f	class:NDTMatch_SE
NDTMatch_SE	include/se_ndt/se_ndt.hpp	/^class NDTMatch_SE{$/;"	c
NDTMatch_SE	src/se_ndt.cpp	/^NDTMatch_SE::NDTMatch_SE(initializer_list<float> b,initializer_list<int> c,initializer_list<floa/;"	f	class:NDTMatch_SE
NDTMatcherD2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    NDTMatcherD2D()$/;"	f	class:perception_oru::NDTMatcherD2D
NDTMatcherD2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    NDTMatcherD2D(bool _isIrregularGrid,$/;"	f	class:perception_oru::NDTMatcherD2D
NDTMatcherD2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    NDTMatcherD2D(const NDTMatcherD2D& other)$/;"	f	class:perception_oru::NDTMatcherD2D
NDTMatcherD2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^class NDTMatcherD2D$/;"	c	namespace:perception_oru
NDTMatcherD2D_2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    NDTMatcherD2D_2D()$/;"	f	class:perception_oru::NDTMatcherD2D_2D
NDTMatcherD2D_2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    NDTMatcherD2D_2D(bool _isIrregularGrid,$/;"	f	class:perception_oru::NDTMatcherD2D_2D
NDTMatcherD2D_2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    NDTMatcherD2D_2D(const NDTMatcherD2D_2D& other)$/;"	f	class:perception_oru::NDTMatcherD2D_2D
NDTMatcherD2D_2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^class NDTMatcherD2D_2D$/;"	c	namespace:perception_oru
NDTMatcherD2D_SE	include/se_ndt/ndt_matcher_d2d_se.h	/^class NDTMatcherD2D_SE: public NDTMatcherD2D$/;"	c	namespace:perception_oru
NDTMatcherFeatureD2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d_feature.h	/^    NDTMatcherFeatureD2D(const std::vector<std::pair<int, int> > &corr, double trimFactor = 1.) /;"	f	class:lslgeneric::NDTMatcherFeatureD2D
NDTMatcherFeatureD2D	oru_minimal/include/ndt_registration/ndt_matcher_d2d_feature.h	/^class NDTMatcherFeatureD2D : public lslgeneric::NDTMatcherD2D$/;"	c	namespace:lslgeneric
NDTMatcherP2D	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    NDTMatcherP2D()$/;"	f	class:lslgeneric::NDTMatcherP2D
NDTMatcherP2D	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    NDTMatcherP2D(const NDTMatcherP2D& other)$/;"	f	class:lslgeneric::NDTMatcherP2D
NDTMatcherP2D	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    NDTMatcherP2D(std::vector<double> _resolutions)$/;"	f	class:lslgeneric::NDTMatcherP2D
NDTMatcherP2D	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^class NDTMatcherP2D$/;"	c	namespace:lslgeneric
NDTMatcherP2D_SE	include/se_ndt/ndt_matcher_p2d_se.h	/^    NDTMatcherP2D_SE()$/;"	f	class:perception_oru::NDTMatcherP2D_SE
NDTMatcherP2D_SE	include/se_ndt/ndt_matcher_p2d_se.h	/^class NDTMatcherP2D_SE	$/;"	c	namespace:perception_oru
NDTVIZGLUT_HH	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^#define NDTVIZGLUT_HH$/;"	d
NDTViz	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	NDTViz(bool allocate_new_window=true)$/;"	f	class:NDTViz
NDTViz	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^class NDTViz {$/;"	c
NDTVizGlut	CMakeLists.txt	/^    add_library(NDTVizGlut oru_minimal\/src\/NDTVizGlut.cc)$/;"	t
NDTVizGlut	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlut {$/;"	c
NDTVizGlut	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::NDTVizGlut()$/;"	f	class:NDTVizGlut
NDTVizGlutCamera	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutCamera {$/;"	c
NDTVizGlutColor4f	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutColor4f {$/;"	c
NDTVizGlutColorPoint	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutColorPoint() { }$/;"	f	class:NDTVizGlutColorPoint
NDTVizGlutColorPoint	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutColorPoint(float x, float y, float z, float R, float G, float B) {$/;"	f	class:NDTVizGlutColorPoint
NDTVizGlutColorPoint	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutColorPoint {$/;"	c
NDTVizGlutEllipsoid	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutEllipsoid() {$/;"	f	class:NDTVizGlutEllipsoid
NDTVizGlutEllipsoid	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutEllipsoid(float quantiles, float lineWidth, bool drawSolid, int segments) {$/;"	f	class:NDTVizGlutEllipsoid
NDTVizGlutEllipsoid	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutEllipsoid : public NDTVizGlutObject$/;"	c
NDTVizGlutEllipsoids	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutEllipsoids : public NDTVizGlutObject {$/;"	c
NDTVizGlutFixedCamera	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutFixedCamera() {$/;"	f	class:NDTVizGlutFixedCamera
NDTVizGlutFixedCamera	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutFixedCamera : public NDTVizGlutCamera {$/;"	c
NDTVizGlutLine	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutLine() { }$/;"	f	class:NDTVizGlutLine
NDTVizGlutLine	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutLine(float x1, float y1, float z1, float x2, float y2, float z2) {$/;"	f	class:NDTVizGlutLine
NDTVizGlutLine	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutLine {$/;"	c
NDTVizGlutObject	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutObject$/;"	c
NDTVizGlutPointCloudColor	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutPointCloudColor() {$/;"	f	class:NDTVizGlutPointCloudColor
NDTVizGlutPointCloudColor	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutPointCloudColor : public NDTVizGlutObject$/;"	c
NDTVizGlutSetOfLines	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutSetOfLines() {$/;"	f	class:NDTVizGlutSetOfLines
NDTVizGlutSetOfLines	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutSetOfLines : public NDTVizGlutObject$/;"	c
NDTVizGlutText	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutText(float oc):occupancy(oc){};$/;"	f	class:NDTVizGlutText
NDTVizGlutText	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class  NDTVizGlutText: public NDTVizGlutObject$/;"	c
NDTVizGlutXYOrbitCamera	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutXYOrbitCamera() {$/;"	f	class:NDTVizGlutXYOrbitCamera
NDTVizGlutXYOrbitCamera	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^class NDTVizGlutXYOrbitCamera : public NDTVizGlutCamera {$/;"	c
NDT_CELL_HH	oru_minimal/include/ndt_map/ndt_cell.h	/^#define NDT_CELL_HH$/;"	d
NDT_FUSER_HMT_SE_HH	include/se_ndt/ndt_fuser_hmt_se.h	/^#define NDT_FUSER_HMT_SE_HH$/;"	d
NDT_HISTOGRAM_HH	include/se_ndt/ndt_histogram.h	/^#define NDT_HISTOGRAM_HH$/;"	d
NDT_HISTOGRAM_HH	oru_minimal/include/ndt_map/ndt_histogram.h	/^#define NDT_HISTOGRAM_HH$/;"	d
NDT_LIB_SRCS	CMakeLists.txt	/^set (NDT_LIB_SRCS$/;"	v
NDT_MAP_HH	oru_minimal/include/ndt_map/ndt_map.h	/^#define NDT_MAP_HH$/;"	d
NDT_MAP_HMT_HH	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^#define NDT_MAP_HMT_HH$/;"	d
NDT_MATCHER_D2D_2D_HH	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^#define NDT_MATCHER_D2D_2D_HH$/;"	d
NDT_MATCHER_D2D_HH	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^#define NDT_MATCHER_D2D_HH$/;"	d
NDT_MATCHER_D2D_SE_HH	include/se_ndt/ndt_matcher_d2d_se.h	/^#define NDT_MATCHER_D2D_SE_HH$/;"	d
NDT_MATCHER_HH	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^#define NDT_MATCHER_HH$/;"	d
NDT_MATCHER_P2D_SE_HH	include/se_ndt/ndt_matcher_p2d_se.h	/^#define NDT_MATCHER_P2D_SE_HH$/;"	d
NDT_VIZ_HH	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^#define NDT_VIZ_HH$/;"	d
NO_LOOP_CLOSE	src/se_ndt.cpp	/^       #define NO_LOOP_CLOSE$/;"	d	file:
NO_NDT_VIZ	include/se_ndt/ndt_fuser_hmt_se.h	/^#define NO_NDT_VIZ /;"	d
NUMBER_OF_ACTIVE_CELLS	include/se_ndt/ndt_matcher_p2d_se.h	/^    int NUMBER_OF_ACTIVE_CELLS;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:int
NUMBER_OF_ACTIVE_CELLS	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    int NUMBER_OF_ACTIVE_CELLS;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:int
NUMBER_OF_ACTIVE_CELLS	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    int NUMBER_OF_ACTIVE_CELLS;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:int
NUMBER_OF_ACTIVE_CELLS	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    int NUMBER_OF_ACTIVE_CELLS;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:int
NUMBER_OF_POINTS	include/se_ndt/ndt_matcher_p2d_se.h	/^    int NUMBER_OF_POINTS;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:int
NUMBER_OF_POINTS	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    int NUMBER_OF_POINTS;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:int
NUMBER_OF_POINTS	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    int NUMBER_OF_POINTS;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:int
NUMBER_OF_POINTS	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    int NUMBER_OF_POINTS;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:int
NUM_MAX	src/ndt_matcher_d2d_se.cpp	/^#define NUM_MAX /;"	d	file:
NUM_MAX	src/ndt_matcher_p2d_se.cpp	/^#define NUM_MAX /;"	d	file:
N_CLASSES	include/se_ndt/ndt_histogram.h	/^    int N_CLASSES;$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:int
N_FLAT_BINS	include/se_ndt/ndt_histogram.h	/^    int N_FLAT_BINS; \/\/\/< Number of flat bins to use.$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:int
N_FLAT_BINS	oru_minimal/include/ndt_map/ndt_histogram.h	/^    int N_FLAT_BINS;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:int
N_LINE_BINS	include/se_ndt/ndt_histogram.h	/^    int N_LINE_BINS; \/\/\/< Number of linear bins to use.$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:int
N_LINE_BINS	oru_minimal/include/ndt_map/ndt_histogram.h	/^    int N_LINE_BINS;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:int
N_SPHERE_BINS	include/se_ndt/ndt_histogram.h	/^    int N_SPHERE_BINS; \/\/\/< Number of spherical bins to use.$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:int
N_SPHERE_BINS	oru_minimal/include/ndt_map/ndt_histogram.h	/^    int N_SPHERE_BINS;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:int
N_THREADS_2D	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^#define N_THREADS_2D /;"	d	file:
NightlyStartTime	build/CTestConfiguration.ini	/^NightlyStartTime: $/;"	k
NumInputs	include/se_ndt/ndt_fuser_hmt_se.h	/^		unsigned int NumInputs;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:unsigned int
NumInputs	include/se_ndt/ndt_matcher_d2d_se.h	/^	int NumInputs;$/;"	m	class:perception_oru::NDTMatcherD2D_SE	typeref:typename:int
NumInputs	include/se_ndt/ndt_matcher_p2d_se.h	/^	int NumInputs;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:int
NumInputs	include/se_ndt/se_ndt.hpp	/^        unsigned int NumInputs;$/;"	m	class:NDTMatch_SE	typeref:typename:unsigned int
NumSem	include/rviz_ndt.h	/^    int NumSem;$/;"	m	class:ndt_rviz	typeref:typename:int
P4Client	build/CTestConfiguration.ini	/^P4Client: $/;"	k
P4Command	build/CTestConfiguration.ini	/^P4Command: $/;"	k
P4Options	build/CTestConfiguration.ini	/^P4Options: $/;"	k
P4UpdateCustom	build/CTestConfiguration.ini	/^P4UpdateCustom: $/;"	k
P4UpdateOptions	build/CTestConfiguration.ini	/^P4UpdateOptions: $/;"	k
PATH_TO_ADD_SUFFIX	build/atomic_configure/_setup_util.py	/^PATH_TO_ADD_SUFFIX = ['bin']$/;"	v
PATH_TO_ADD_SUFFIX	build/catkin_generated/installspace/_setup_util.py	/^PATH_TO_ADD_SUFFIX = ['bin']$/;"	v
PATH_TO_ADD_SUFFIX	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^PATH_TO_ADD_SUFFIX = ['bin']$/;"	v
PATH_TO_ADD_SUFFIX	build/devel/_setup_util.py	/^PATH_TO_ADD_SUFFIX = ['bin']$/;"	v
PCL_CHECK_FOR_SSE	pcl_find_sse.cmake	/^macro(PCL_CHECK_FOR_SSE)$/;"	m
PCL_CHECK_FOR_SSE4_1	pcl_find_sse.cmake	/^macro(PCL_CHECK_FOR_SSE4_1)$/;"	m
PLATFORM_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
PROFILER_H	include/profiler.hpp	/^#define PROFILER_H$/;"	d
Profiler	include/profiler.hpp	/^class Profiler {$/;"	c
PurifyCommand	build/CTestConfiguration.ini	/^PurifyCommand: $/;"	k
Q	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,6,1> xtBJ, xtBZBx, Q;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,6,1>
Q	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,1> xtBJ, xtBZBx, Q;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,1>
R	oru_minimal/include/ndt_map/ndt_cell.h	/^  float R,G,B; 			\/\/\/RGB values [0..1] - Special implementations for PointXYZRGB & PointXYZI$/;"	m	class:perception_oru::NDTCell	typeref:typename:float
R	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  GLfloat R,G,B,A;$/;"	m	class:NDTVizGlutColor4f	typeref:typename:GLfloat
RANGE1	src/se_ndt.cpp	/^#define RANGE1 /;"	d	file:
RANGE2	src/se_ndt.cpp	/^#define RANGE2 /;"	d	file:
REFACTORED	oru_minimal/include/ndt_map/ndt_cell.h	/^#define REFACTORED$/;"	d
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ROS_REQUIRED_DIRS	CMakeLists.txt	/^    set(ROS_REQUIRED_DIRS$/;"	v
ROS_REQUIRED_LIBS	CMakeLists.txt	/^    set(ROS_REQUIRED_LIBS$/;"	v
ROUGH	oru_minimal/include/ndt_map/ndt_cell.h	/^  enum CellClass {HORIZONTAL=0, VERTICAL, INCLINED, ROUGH, UNKNOWN};$/;"	e	enum:perception_oru::NDTCell::CellClass
RVIZ_NDT_H	include/rviz_ndt.h	/^#define RVIZ_NDT_H$/;"	d
Registration	src/ros_register.cpp	/^        Registration(ros::NodeHandle& nh, bool use_gfeat=false):$/;"	f	class:Registration	file:
Registration	src/ros_register.cpp	/^class Registration{$/;"	c	file:
Registration	src/ros_register_d2d_ndt.cpp	/^        Registration(ros::Publisher& pub_):matcher({2},{0},{200,200,200},{'*'},{0},0.01,5)$/;"	f	class:Registration	file:
Registration	src/ros_register_d2d_ndt.cpp	/^class Registration{$/;"	c	file:
Reset	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    void Reset()$/;"	f	struct:TEventData	typeref:typename:void
RvizShow	src/ros_receive_tf.cpp	/^        RvizShow(ros::NodeHandle& nh): rvNDT(nh, 1)$/;"	f	class:RvizShow	file:
RvizShow	src/ros_receive_tf.cpp	/^class RvizShow{$/;"	c	file:
SE_NDT	include/se_ndt/se_ndt.hpp	/^#define SE_NDT$/;"	d
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMILARITY_THRESHOLD	src/se_ndt.cpp	/^#define SIMILARITY_THRESHOLD /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SPATIAL_INDEX_HH	oru_minimal/include/ndt_map/spatial_index.h	/^#define SPATIAL_INDEX_HH$/;"	d
SSE_FLAGS	pcl_find_sse.cmake	/^              SET(SSE_FLAGS "${SSE_FLAGS} -msse -mfpmath=sse")$/;"	v
SSE_FLAGS	pcl_find_sse.cmake	/^              SET(SSE_FLAGS "${SSE_FLAGS} -msse2 -mfpmath=sse")$/;"	v
SSE_FLAGS	pcl_find_sse.cmake	/^              SET(SSE_FLAGS "${SSE_FLAGS} -msse3 -mfpmath=sse")$/;"	v
SSE_FLAGS	pcl_find_sse.cmake	/^              SET(SSE_FLAGS "${SSE_FLAGS} -msse4.1 -mfpmath=sse")$/;"	v
SSE_FLAGS	pcl_find_sse.cmake	/^              SET(SSE_FLAGS "${SSE_FLAGS} \/arch:SSE")$/;"	v
SSE_FLAGS	pcl_find_sse.cmake	/^              SET(SSE_FLAGS "${SSE_FLAGS} \/arch:SSE2")$/;"	v
SSE_FLAGS	pcl_find_sse.cmake	/^            SET(SSE_FLAGS "${SSE_FLAGS} -march=native")$/;"	v
SSE_FLAGS	pcl_find_sse.cmake	/^    set(SSE_FLAGS)$/;"	v
STRINGIFY	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SVNCommand	build/CTestConfiguration.ini	/^SVNCommand: $/;"	k
SVNOptions	build/CTestConfiguration.ini	/^SVNOptions: $/;"	k
SVNUpdateOptions	build/CTestConfiguration.ini	/^SVNUpdateOptions: $/;"	k
SetVal	oru_minimal/include/ndt_map/lazy_grid.h	/^  void SetVal(size_t i, size_t j, size_t k,  NDTCell* cell){$/;"	f	class:perception_oru::CellVector3d	typeref:typename:void
Site	build/CTestConfiguration.ini	/^Site: GentooPC$/;"	k
SlurmBatchCommand	build/CTestConfiguration.ini	/^SlurmBatchCommand: $/;"	k
SlurmRunCommand	build/CTestConfiguration.ini	/^SlurmRunCommand: $/;"	k
SourceDirectory	build/CTestConfiguration.ini	/^SourceDirectory: \/home\/anestis\/workspace\/se_ndt$/;"	k
SpatialIndex	oru_minimal/include/ndt_map/spatial_index.h	/^class SpatialIndex$/;"	c	namespace:perception_oru
SubmitURL	build/CTestConfiguration.ini	/^SubmitURL: $/;"	k
T	include/se_ndt/se_ndt.hpp	/^        Eigen::Affine3d T, Td;$/;"	m	class:NDTMatch_SE	typeref:typename:Eigen::Affine3d
T	src/ros_register.cpp	/^        Eigen::Affine3d Td,T;$/;"	m	class:Registration	typeref:typename:Eigen::Affine3d	file:
T	src/ros_register_d2d_ndt.cpp	/^        Eigen::Affine3d Td,T;$/;"	m	class:Registration	typeref:typename:Eigen::Affine3d	file:
TEventData	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    TEventData():$/;"	f	struct:TEventData
TEventData	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    TEventData(const TEventData& copy):$/;"	f	struct:TEventData
TEventData	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^struct TEventData$/;"	s
TMP1	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,1,3> TMP1, xtB;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,1,3>
TMP1	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,1,3> TMP1, xtB;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,1,3>
Td	include/se_ndt/se_ndt.hpp	/^        Eigen::Affine3d T, Td;$/;"	m	class:NDTMatch_SE	typeref:typename:Eigen::Affine3d
Td	src/ros_register.cpp	/^        Eigen::Affine3d Td,T;$/;"	m	class:Registration	typeref:typename:Eigen::Affine3d	file:
Td	src/ros_register_d2d_ndt.cpp	/^        Eigen::Affine3d Td,T;$/;"	m	class:Registration	typeref:typename:Eigen::Affine3d	file:
TestLoad	build/CTestConfiguration.ini	/^TestLoad: $/;"	k
Ti	include/se_ndt/se_ndt.hpp	/^        std::vector<Eigen::Affine3d, Eigen::aligned_allocator<Eigen::Affine3d> > Ti;$/;"	m	class:NDTMatch_SE	typeref:typename:std::vector<Eigen::Affine3d,Eigen::aligned_allocator<Eigen::Affine3d>>
TimeOut	build/CTestConfiguration.ini	/^TimeOut: $/;"	k
Tlast_fuse	include/se_ndt/ndt_fuser_hmt_se.h	/^		Eigen::Affine3d Tnow, Tlast_fuse, Todom; \/\/\/< current pose$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:Eigen::Affine3d
Tnow	include/se_ndt/ndt_fuser_hmt_se.h	/^		Eigen::Affine3d Tnow, Tlast_fuse, Todom; \/\/\/< current pose$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:Eigen::Affine3d
ToString	oru_minimal/include/ndt_map/spatial_index.h	/^  virtual std::string ToString(){return "SpatialIndex base class";}$/;"	f	class:perception_oru::SpatialIndex	typeref:typename:std::string
ToString	oru_minimal/src/lazy_grid.cpp	/^std::string LazyGrid::ToString(){$/;"	f	class:perception_oru::LazyGrid	typeref:typename:std::string
ToString	oru_minimal/src/ndt_cell.cpp	/^std::string NDTCell::ToString(){$/;"	f	class:perception_oru::NDTCell	typeref:typename:std::string
ToString	oru_minimal/src/ndt_map.cpp	/^std::string NDTMap::ToString(){$/;"	f	class:perception_oru::NDTMap	typeref:typename:std::string
Todom	include/se_ndt/ndt_fuser_hmt_se.h	/^		Eigen::Affine3d Tnow, Tlast_fuse, Todom; \/\/\/< current pose$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:Eigen::Affine3d
TupleCompare	src/big_cloud_test.cpp	/^struct TupleCompare$/;"	s	file:
TupleCompare	src/ros_read_register.cpp	/^struct TupleCompare$/;"	s	file:
TupleCompare	src/semanticRegister.cpp	/^struct TupleCompare$/;"	s	file:
UNIX	build/CMakeFiles/3.14.6/CMakeCCompiler.cmake	/^  set(UNIX 1)$/;"	v
UNIX	build/CMakeFiles/3.14.6/CMakeCXXCompiler.cmake	/^  set(UNIX 1)$/;"	v
UNKNOWN	oru_minimal/include/ndt_map/ndt_cell.h	/^  enum CellClass {HORIZONTAL=0, VERTICAL, INCLINED, ROUGH, UNKNOWN};$/;"	e	enum:perception_oru::NDTCell::CellClass
USE_OMP	oru_minimal/src/ndt_matcher_d2d.cpp	/^#define USE_OMP$/;"	d	file:
USE_OMP_NDT_MATCHER_D2D_2D	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^#define USE_OMP_NDT_MATCHER_D2D_2D$/;"	d	file:
UpdateCommand	build/CTestConfiguration.ini	/^UpdateCommand: $/;"	k
UpdateOptions	build/CTestConfiguration.ini	/^UpdateOptions: $/;"	k
UpdateType	build/CTestConfiguration.ini	/^UpdateType: $/;"	k
UpdateVersionOnly	build/CTestConfiguration.ini	/^UpdateVersionOnly: $/;"	k
UseLaunchers	build/CTestConfiguration.ini	/^UseLaunchers: $/;"	k
VERTICAL	oru_minimal/include/ndt_map/ndt_cell.h	/^  enum CellClass {HORIZONTAL=0, VERTICAL, INCLINED, ROUGH, UNKNOWN};$/;"	e	enum:perception_oru::NDTCell::CellClass
ValgrindCommand	build/CTestConfiguration.ini	/^ValgrindCommand: $/;"	k
ValgrindCommandOptions	build/CTestConfiguration.ini	/^ValgrindCommandOptions: $/;"	k
WITH_GL	CMakeLists.txt	/^option(WITH_GL "Enable\/Disable OpenGL visualization of distributions" OFF)$/;"	D
WITH_ROS	CMakeLists.txt	/^option(WITH_ROS "Enable\/Disable ROS" ON)$/;"	D
WITH_TESTS	CMakeLists.txt	/^option(WITH_TESTS "Enable\/Disable TESTS" ON)$/;"	D
Wforget	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^#define Wforget /;"	d
ZHest	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,18,18> ZHest;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,18,18>
ZHest	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,9,9> ZHest;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,9,9>
Zest	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,18> Zest;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,18>
Zest	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,9> Zest;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,9>
_CATKIN_CURRENT_PACKAGE	build/catkin/catkin_generated/version/package.cmake	/^set(_CATKIN_CURRENT_PACKAGE "catkin")$/;"	v
_JFFVERSION_	oru_minimal/include/ndt_map/ndt_cell.h	/^#define _JFFVERSION_ /;"	d
__anon75af7ca00102	src/ndt_histogram.cpp	/^        entropy+=(F_.array()*F_.array().log().unaryExpr([](double v) { return std::isfinite(v)? /;"	f	function:perception_oru::NDTHistogram::calculateEntropy	file:
__anon75af7ca00202	src/ndt_histogram.cpp	/^        entropy+=(S_.array()*S_.array().log().unaryExpr([](double v) { return std::isfinite(v)? /;"	f	function:perception_oru::NDTHistogram::calculateEntropy	file:
__anon75af7ca00302	src/ndt_histogram.cpp	/^        entropy+=(L_.array()*L_.array().log().unaryExpr([](double v) { return std::isfinite(v)? /;"	f	function:perception_oru::NDTHistogram::calculateEntropy	file:
__anon9578ef1e0102	include/rviz_ndt.h	/^        std::sort(idx.begin(), idx.end(), [&m_eigVal](int i1,int i2){return m_eigVal(i1)<m_eigVa/;"	f	function:ndt_rviz::show_cell	file:
__anone412446a0102	src/se_ndt.cpp	/^        tc.push_back( std::thread([i,&Tinit, laserCloud](){$/;"	f	function:NDTMatch_SE::matchFaster_OM	file:
__anone412446a0202	src/se_ndt.cpp	/^        tc.push_back( std::thread([i,&T_prev, laserCloud](){$/;"	f	function:NDTMatch_SE::mapUpdate	file:
_catkin_empty_exported_target	build/Makefile	/^_catkin_empty_exported_target: cmake_check_build_system$/;"	t
_catkin_empty_exported_target/fast	build/Makefile	/^_catkin_empty_exported_target\/fast:$/;"	t
_corr	oru_minimal/include/ndt_registration/ndt_matcher_d2d_feature.h	/^    const std::vector<std::pair<int, int> > & _corr;$/;"	m	class:lslgeneric::NDTMatcherFeatureD2D	typeref:typename:const std::vector<std::pair<int,int>> &
_get_workspaces	build/atomic_configure/_setup_util.py	/^def _get_workspaces(environ, include_fuerte=False, include_non_existing=False):$/;"	f
_get_workspaces	build/catkin_generated/installspace/_setup_util.py	/^def _get_workspaces(environ, include_fuerte=False, include_non_existing=False):$/;"	f
_get_workspaces	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def _get_workspaces(environ, include_fuerte=False, include_non_existing=False):$/;"	f
_get_workspaces	build/devel/_setup_util.py	/^def _get_workspaces(environ, include_fuerte=False, include_non_existing=False):$/;"	f
_goodCorr	oru_minimal/include/ndt_registration/ndt_matcher_d2d_feature.h	/^    std::vector<bool> _goodCorr;$/;"	m	class:lslgeneric::NDTMatcherFeatureD2D	typeref:typename:std::vector<bool>
_parse_arguments	build/atomic_configure/_setup_util.py	/^def _parse_arguments(args=None):$/;"	f
_parse_arguments	build/catkin_generated/installspace/_setup_util.py	/^def _parse_arguments(args=None):$/;"	f
_parse_arguments	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def _parse_arguments(args=None):$/;"	f
_parse_arguments	build/devel/_setup_util.py	/^def _parse_arguments(args=None):$/;"	f
_prefix_env_variable	build/atomic_configure/_setup_util.py	/^def _prefix_env_variable(environ, name, paths, subfolders):$/;"	f
_prefix_env_variable	build/catkin_generated/installspace/_setup_util.py	/^def _prefix_env_variable(environ, name, paths, subfolders):$/;"	f
_prefix_env_variable	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def _prefix_env_variable(environ, name, paths, subfolders):$/;"	f
_prefix_env_variable	build/devel/_setup_util.py	/^def _prefix_env_variable(environ, name, paths, subfolders):$/;"	f
_rollback_env_variable	build/atomic_configure/_setup_util.py	/^def _rollback_env_variable(environ, name, subfolders):$/;"	f
_rollback_env_variable	build/catkin_generated/installspace/_setup_util.py	/^def _rollback_env_variable(environ, name, subfolders):$/;"	f
_rollback_env_variable	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def _rollback_env_variable(environ, name, subfolders):$/;"	f
_rollback_env_variable	build/devel/_setup_util.py	/^def _rollback_env_variable(environ, name, subfolders):$/;"	f
_trimFactor	oru_minimal/include/ndt_registration/ndt_matcher_d2d_feature.h	/^    double _trimFactor;$/;"	m	class:lslgeneric::NDTMatcherFeatureD2D	typeref:typename:double
a2	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
a2	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
a3	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
a3	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
a_entry_event	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float 		a_entry_event;$/;"	m	struct:TEventData	typeref:typename:float
a_exit_event	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float 		a_exit_event; \/\/\/Number of exit events ( OCC 2 EMP)$/;"	m	struct:TEventData	typeref:typename:float
absmax	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::MoreThuente::absmax(double a, double b, double c)$/;"	f	class:perception_oru::NDTMatcherD2D::MoreThuente	typeref:typename:double
absmax	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^double NDTMatcherD2D_2D::MoreThuente::absmax(double a, double b, double c)$/;"	f	class:perception_oru::NDTMatcherD2D_2D::MoreThuente	typeref:typename:double
absmax	oru_minimal/src/ndt_matcher_p2d.cpp	/^double NDTMatcherP2D::MoreThuente::absmax(double a, double b, double c)$/;"	f	class:lslgeneric::NDTMatcherP2D::MoreThuente	typeref:typename:double
absmax	src/ndt_matcher_p2d_se.cpp	/^double NDTMatcherP2D_SE::MoreThuente::absmax(double a, double b, double c)$/;"	f	class:perception_oru::NDTMatcherP2D_SE::MoreThuente	typeref:typename:double
actionlib_generate_messages_cpp	build/Makefile	/^actionlib_generate_messages_cpp: cmake_check_build_system$/;"	t
actionlib_generate_messages_cpp/fast	build/Makefile	/^actionlib_generate_messages_cpp\/fast:$/;"	t
actionlib_generate_messages_eus	build/Makefile	/^actionlib_generate_messages_eus: cmake_check_build_system$/;"	t
actionlib_generate_messages_eus/fast	build/Makefile	/^actionlib_generate_messages_eus\/fast:$/;"	t
actionlib_generate_messages_lisp	build/Makefile	/^actionlib_generate_messages_lisp: cmake_check_build_system$/;"	t
actionlib_generate_messages_lisp/fast	build/Makefile	/^actionlib_generate_messages_lisp\/fast:$/;"	t
actionlib_generate_messages_nodejs	build/Makefile	/^actionlib_generate_messages_nodejs: cmake_check_build_system$/;"	t
actionlib_generate_messages_nodejs/fast	build/Makefile	/^actionlib_generate_messages_nodejs\/fast:$/;"	t
actionlib_generate_messages_py	build/Makefile	/^actionlib_generate_messages_py: cmake_check_build_system$/;"	t
actionlib_generate_messages_py/fast	build/Makefile	/^actionlib_generate_messages_py\/fast:$/;"	t
actionlib_msgs_generate_messages_cpp	build/Makefile	/^actionlib_msgs_generate_messages_cpp: cmake_check_build_system$/;"	t
actionlib_msgs_generate_messages_cpp/fast	build/Makefile	/^actionlib_msgs_generate_messages_cpp\/fast:$/;"	t
actionlib_msgs_generate_messages_eus	build/Makefile	/^actionlib_msgs_generate_messages_eus: cmake_check_build_system$/;"	t
actionlib_msgs_generate_messages_eus/fast	build/Makefile	/^actionlib_msgs_generate_messages_eus\/fast:$/;"	t
actionlib_msgs_generate_messages_lisp	build/Makefile	/^actionlib_msgs_generate_messages_lisp: cmake_check_build_system$/;"	t
actionlib_msgs_generate_messages_lisp/fast	build/Makefile	/^actionlib_msgs_generate_messages_lisp\/fast:$/;"	t
actionlib_msgs_generate_messages_nodejs	build/Makefile	/^actionlib_msgs_generate_messages_nodejs: cmake_check_build_system$/;"	t
actionlib_msgs_generate_messages_nodejs/fast	build/Makefile	/^actionlib_msgs_generate_messages_nodejs\/fast:$/;"	t
actionlib_msgs_generate_messages_py	build/Makefile	/^actionlib_msgs_generate_messages_py: cmake_check_build_system$/;"	t
actionlib_msgs_generate_messages_py/fast	build/Makefile	/^actionlib_msgs_generate_messages_py\/fast:$/;"	t
activeCells	oru_minimal/include/ndt_map/cell_vector.h	/^    std::set<NDTCell*> activeCells;$/;"	m	class:perception_oru::CellVector	typeref:typename:std::set<NDTCell * >
activeCells	oru_minimal/include/ndt_map/lazy_grid.h	/^    std::set<NDTCell*> activeCells;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:std::set<NDTCell * >
addCell	oru_minimal/src/cell_vector.cpp	/^void CellVector::addCell(NDTCell* cell)$/;"	f	class:perception_oru::CellVector	typeref:typename:void
addCellPoints	oru_minimal/src/cell_vector.cpp	/^void CellVector::addCellPoints(pcl::PointCloud<pcl::PointXYZ> pc, const std::vector<size_t> &ind/;"	f	class:perception_oru::CellVector	typeref:typename:void
addDistributionToCell	oru_minimal/src/ndt_map.cpp	/^void NDTMap::addDistributionToCell(const Eigen::Matrix3d &ucov, const Eigen::Vector3d &umean, un/;"	f	class:perception_oru::NDTMap	typeref:typename:void
addDistributionToCell	oru_minimal/src/ndt_map_hmt.cpp	/^void NDTMapHMT::addDistributionToCell(const Eigen::Matrix3d &ucov, const Eigen::Vector3d &umean,/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:void
addGrid	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^  void addGrid(size_t nbCells, double cellSize, double lineWidth = 1., double R = 1.0, double G /;"	f	class:NDTViz	typeref:typename:void
addMeasurement	oru_minimal/src/ndt_map.cpp	/^bool NDTMap::addMeasurement(const Eigen::Vector3d &origin, pcl::PointXYZ endpoint, double classi/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
addNDTCell	oru_minimal/src/cell_vector.cpp	/^void CellVector::addNDTCell(NDTCell* cell)$/;"	f	class:perception_oru::CellVector	typeref:typename:void
addNDTCell	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::addNDTCell(NDTCell* cell)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
addObject	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void addObject(NDTVizGlutObject* object) {$/;"	f	class:NDTVizGlut	typeref:typename:void
addParticle	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void addParticle(float x, float y, float z, float R=1.0, float G = 1.0, float B = 1.0){$/;"	f	class:NDTViz	typeref:typename:void
addPathLine	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^        void addPathLine(std::vector<Eigen::Vector2d, Eigen::aligned_allocator<Eigen::Vector2d> /;"	f	class:NDTViz	typeref:typename:void
addPoint	oru_minimal/include/ndt_map/ndt_cell.h	/^  virtual void addPoint(const pcl::PointXYZ &pt)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
addPoint	oru_minimal/src/cell_vector.cpp	/^NDTCell* CellVector::addPoint(const pcl::PointXYZ &point)$/;"	f	class:perception_oru::CellVector	typeref:typename:NDTCell *
addPoint	oru_minimal/src/lazy_grid.cpp	/^NDTCell* LazyGrid::addPoint(const pcl::PointXYZ &point_c)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:NDTCell *
addPoint	src/lazy_grid_improved.cpp	/^NDTCell* LazyGrid::addPoint(const pcl::PointXYZ &point_c)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:NDTCell *
addPointCloud	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void addPointCloud(pcl::PointCloud<pcl::PointXYZ> &cloud, double R=1.0,double G=1.0,double B=1./;"	f	class:NDTViz	typeref:typename:void
addPointCloud	oru_minimal/src/ndt_map.cpp	/^void NDTMap::addPointCloud(const Eigen::Vector3d &origin, const pcl::PointCloud<pcl::PointXYZ> &/;"	f	class:perception_oru::NDTMap	typeref:typename:void
addPointCloud	oru_minimal/src/ndt_map_hmt.cpp	/^void NDTMapHMT::addPointCloud(const Eigen::Vector3d &origin, const pcl::PointCloud<pcl::PointXYZ/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:void
addPointCloudMeanUpdate	oru_minimal/src/ndt_map.cpp	/^void  NDTMap::addPointCloudMeanUpdate(const Eigen::Vector3d &origin, $/;"	f	class:perception_oru::NDTMap	typeref:typename:void
addPointCloudMeanUpdate	oru_minimal/src/ndt_map_hmt.cpp	/^void NDTMapHMT::addPointCloudMeanUpdate(const Eigen::Vector3d &origin, $/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:void
addPointCloudSimple	oru_minimal/src/ndt_map.cpp	/^void NDTMap::addPointCloudSimple(const pcl::PointCloud<pcl::PointXYZ> &pc,double maxz)$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
addPoints	oru_minimal/include/ndt_map/ndt_cell.h	/^  virtual void addPoints(pcl::PointCloud<pcl::PointXYZ> &pt)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
addPolygon	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^        void addPolygon(std::vector<Eigen::Vector2d, Eigen::aligned_allocator<Eigen::Vector2d> >/;"	f	class:NDTViz	typeref:typename:void
addScan	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void addScan(Eigen::Vector3d orig, pcl::PointCloud<pcl::PointXYZ> &cloud, double R=1.0,double G/;"	f	class:NDTViz	typeref:typename:void
addTrajectoryPoint	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void addTrajectoryPoint(float x, float y, float z, float R=1.0, float G = 1.0, float B = 1.0){$/;"	f	class:NDTViz	typeref:typename:void
all	build/Makefile	/^all: cmake_check_build_system$/;"	t
ang_diff	src/big_cloud_test.cpp	/^double ang_diff(Eigen::Matrix4d A, Eigen::Matrix4d B)$/;"	f	typeref:typename:double
ang_diff	src/ros_read_register.cpp	/^double ang_diff(Eigen::Matrix4d A, Eigen::Matrix4d B)$/;"	f	typeref:typename:double
ang_diff	src/semanticRegister.cpp	/^double ang_diff(Eigen::Matrix4d A, Eigen::Matrix4d B)$/;"	f	typeref:typename:double
appendLine	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void appendLine(float x1, float y1, float z1, float x2, float y2, float z2) {$/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:void
args	build/atomic_configure/_setup_util.py	/^            args = _parse_arguments()$/;"	v
args	build/catkin_generated/installspace/_setup_util.py	/^            args = _parse_arguments()$/;"	v
args	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^            args = _parse_arguments()$/;"	v
args	build/devel/_setup_util.py	/^            args = _parse_arguments()$/;"	v
array	oru_minimal/include/ndt_map/lazy_grid.h	/^        NDTCell** array;$/;"	m	struct:perception_oru::LazyGrid::Darray	typeref:typename:NDTCell **
aspect_ratio_factor	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float aspect_ratio_factor;$/;"	m	class:NDTVizGlut	typeref:typename:float
assignment	build/atomic_configure/_setup_util.py	/^def assignment(key, value):$/;"	f
assignment	build/catkin_generated/installspace/_setup_util.py	/^def assignment(key, value):$/;"	f
assignment	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def assignment(key, value):$/;"	f
assignment	build/devel/_setup_util.py	/^def assignment(key, value):$/;"	f
averageDirections	include/se_ndt/ndt_histogram.h	/^    std::vector<Eigen::Vector3d,Eigen::aligned_allocator<Eigen::Vector3d> > averageDirections;$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:std::vector<Eigen::Vector3d,Eigen::aligned_allocator<Eigen::Vector3d>>
averageDirections	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector<Eigen::Vector3d,Eigen::aligned_allocator<Eigen::Vector3d> > averageDirections;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:std::vector<Eigen::Vector3d,Eigen::aligned_allocator<Eigen::Vector3d>>
b2	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
b2	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
b3	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
b3	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
b_entry_event	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float  		b_entry_event; \/\/\/Number of times the cell is perceived as empty$/;"	m	struct:TEventData	typeref:typename:float
b_exit_event	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float  		b_exit_event; \/\/\/Number of times the cell is perceived as occupied$/;"	m	struct:TEventData	typeref:typename:float
base_path	build/atomic_configure/_setup_util.py	/^            base_path = base_path.replace(os.path.sep, '\/')$/;"	v
base_path	build/atomic_configure/_setup_util.py	/^        base_path = os.path.dirname(__file__)$/;"	v
base_path	build/catkin_generated/installspace/_setup_util.py	/^            base_path = base_path.replace(os.path.sep, '\/')$/;"	v
base_path	build/catkin_generated/installspace/_setup_util.py	/^        base_path = os.path.dirname(__file__)$/;"	v
base_path	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^            base_path = base_path.replace(os.path.sep, '\/')$/;"	v
base_path	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^        base_path = os.path.dirname(__file__)$/;"	v
base_path	build/devel/_setup_util.py	/^            base_path = base_path.replace(os.path.sep, '\/')$/;"	v
base_path	build/devel/_setup_util.py	/^        base_path = os.path.dirname(__file__)$/;"	v
beHMT	include/se_ndt/ndt_fuser_hmt_se.h	/^		bool fuseIncomplete, beHMT,canUpdate;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:bool
begin	oru_minimal/src/cell_vector.cpp	/^typename SpatialIndex::CellVectorConstItr CellVector::begin() const$/;"	f	class:perception_oru::CellVector	typeref:typename:SpatialIndex::CellVectorConstItr
begin	oru_minimal/src/cell_vector.cpp	/^typename SpatialIndex::CellVectorItr CellVector::begin()$/;"	f	class:perception_oru::CellVector	typeref:typename:SpatialIndex::CellVectorItr
begin	oru_minimal/src/lazy_grid.cpp	/^typename SpatialIndex::CellVectorConstItr LazyGrid::begin() const$/;"	f	class:perception_oru::LazyGrid	typeref:typename:SpatialIndex::CellVectorConstItr
begin	oru_minimal/src/lazy_grid.cpp	/^typename SpatialIndex::CellVectorItr LazyGrid::begin()$/;"	f	class:perception_oru::LazyGrid	typeref:typename:SpatialIndex::CellVectorItr
begin	src/lazy_grid_improved.cpp	/^typename SpatialIndex::CellVectorItr LazyGrid::begin()$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:SpatialIndex::CellVectorItr
begin_time	include/profiler.hpp	/^    clock_t begin_time;$/;"	m	class:Profiler	typeref:typename:clock_t
bestFitToHistogram	src/ndt_histogram.cpp	/^  void NDTHistogram::bestFitToHistogram(NDTHistogram &target, Eigen::Transform<double,3,Eigen::A/;"	f	class:perception_oru::NDTHistogram	typeref:typename:void
binaryBayesUpdate	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float binaryBayesUpdate(float Pold, float P)$/;"	f	struct:TEventData	typeref:typename:float
bond_generate_messages_cpp	build/Makefile	/^bond_generate_messages_cpp: cmake_check_build_system$/;"	t
bond_generate_messages_cpp/fast	build/Makefile	/^bond_generate_messages_cpp\/fast:$/;"	t
bond_generate_messages_eus	build/Makefile	/^bond_generate_messages_eus: cmake_check_build_system$/;"	t
bond_generate_messages_eus/fast	build/Makefile	/^bond_generate_messages_eus\/fast:$/;"	t
bond_generate_messages_lisp	build/Makefile	/^bond_generate_messages_lisp: cmake_check_build_system$/;"	t
bond_generate_messages_lisp/fast	build/Makefile	/^bond_generate_messages_lisp\/fast:$/;"	t
bond_generate_messages_nodejs	build/Makefile	/^bond_generate_messages_nodejs: cmake_check_build_system$/;"	t
bond_generate_messages_nodejs/fast	build/Makefile	/^bond_generate_messages_nodejs\/fast:$/;"	t
bond_generate_messages_py	build/Makefile	/^bond_generate_messages_py: cmake_check_build_system$/;"	t
bond_generate_messages_py/fast	build/Makefile	/^bond_generate_messages_py\/fast:$/;"	t
c2	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
c2	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
c3	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
c3	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
calculateEntropy	src/ndt_histogram.cpp	/^double NDTHistogram::calculateEntropy()$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:double
calib	src/ros_receive_tf.cpp	/^        Eigen::Affine3d calib;$/;"	m	class:RvizShow	typeref:typename:Eigen::Affine3d	file:
calib	src/ros_register.cpp	/^        Eigen::Affine3d calib;$/;"	m	class:Registration	typeref:typename:Eigen::Affine3d	file:
calib	src/ros_register_d2d_ndt.cpp	/^        Eigen::Affine3d calib;$/;"	m	class:Registration	typeref:typename:Eigen::Affine3d	file:
callback	src/ros_receive_tf.cpp	/^        void callback(const std_msgs::Float32MultiArray::ConstPtr& msg)$/;"	f	class:RvizShow	typeref:typename:void	file:
callback	src/ros_register.cpp	/^        void callback(const pcl::PointCloud<pcl::PointXYZI>::Ptr& cloud_msg)$/;"	f	class:Registration	typeref:typename:void	file:
callback	src/ros_register_d2d_ndt.cpp	/^        void callback(const pcl::PointCloud<pcl::PointXYZI>::Ptr& cloud_msg)$/;"	f	class:Registration	typeref:typename:void	file:
cam_dir	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f cam_dir;$/;"	m	class:NDTVizGlut	typeref:typename:Eigen::Vector3f
cam_pos	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f cam_pos;$/;"	m	class:NDTVizGlut	typeref:typename:Eigen::Vector3f
camera	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutCamera* camera;$/;"	m	class:NDTVizGlut	typeref:typename:NDTVizGlutCamera *
canUpdate	include/se_ndt/ndt_fuser_hmt_se.h	/^		bool fuseIncomplete, beHMT,canUpdate;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:bool
catkin_BUILDTOOL_DEPENDS	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_BUILDTOOL_DEPENDS "cmake")$/;"	v
catkin_BUILDTOOL_EXPORT_DEPENDS	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_BUILDTOOL_EXPORT_DEPENDS "cmake")$/;"	v
catkin_BUILD_DEPENDS	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_BUILD_DEPENDS "python-empy" "python-argparse" "python-catkin-pkg")$/;"	v
catkin_BUILD_DEPENDS_python-catkin-pkg_VERSION_GT	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_BUILD_DEPENDS_python-catkin-pkg_VERSION_GT "0.4.3")$/;"	v
catkin_BUILD_EXPORT_DEPENDS	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_BUILD_EXPORT_DEPENDS "google-mock" "gtest" "python-empy" "python-nose" "python-argpar/;"	v
catkin_BUILD_EXPORT_DEPENDS_python-catkin-pkg_VERSION_GT	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_BUILD_EXPORT_DEPENDS_python-catkin-pkg_VERSION_GT "0.4.3")$/;"	v
catkin_DEPRECATED	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_DEPRECATED "")/;"	v
catkin_DOC_DEPENDS	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_DOC_DEPENDS )$/;"	v
catkin_EXEC_DEPENDS	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_EXEC_DEPENDS "python-argparse" "python-catkin-pkg")$/;"	v
catkin_EXEC_DEPENDS_python-catkin-pkg_VERSION_GT	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_EXEC_DEPENDS_python-catkin-pkg_VERSION_GT "0.4.3")$/;"	v
catkin_MAINTAINER	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_MAINTAINER "Dirk Thomas <dthomas@osrfoundation.org>")$/;"	v
catkin_PACKAGE_FORMAT	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_PACKAGE_FORMAT "2")$/;"	v
catkin_RUN_DEPENDS	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_RUN_DEPENDS "python-argparse" "python-catkin-pkg" "google-mock" "gtest" "python-empy"/;"	v
catkin_RUN_DEPENDS_python-catkin-pkg_VERSION_GT	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_RUN_DEPENDS_python-catkin-pkg_VERSION_GT "0.4.3")$/;"	v
catkin_TEST_DEPENDS	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_TEST_DEPENDS "python-mock" "python-nose")$/;"	v
catkin_URL_BUGTRACKER	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_URL_BUGTRACKER "https:\/\/github.com\/ros\/catkin\/issues")$/;"	v
catkin_URL_REPOSITORY	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_URL_REPOSITORY "https:\/\/github.com\/ros\/catkin")$/;"	v
catkin_URL_WEBSITE	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_URL_WEBSITE "http:\/\/www.ros.org\/wiki\/catkin")$/;"	v
catkin_VERSION	build/catkin/catkin_generated/version/package.cmake	/^set(catkin_VERSION "0.7.18")$/;"	v
cellSizeX	oru_minimal/include/ndt_map/lazy_grid.h	/^    double cellSizeX, cellSizeY, cellSizeZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
cellSizeY	oru_minimal/include/ndt_map/lazy_grid.h	/^    double cellSizeX, cellSizeY, cellSizeZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
cellSizeZ	oru_minimal/include/ndt_map/lazy_grid.h	/^    double cellSizeX, cellSizeY, cellSizeZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
centerIsSet	oru_minimal/include/ndt_map/lazy_grid.h	/^    bool centerIsSet, sizeIsSet;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:bool
centerX	oru_minimal/include/ndt_map/lazy_grid.h	/^    double centerX, centerY, centerZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
centerY	oru_minimal/include/ndt_map/lazy_grid.h	/^    double centerX, centerY, centerZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
centerZ	oru_minimal/include/ndt_map/lazy_grid.h	/^    double centerX, centerY, centerZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
center_	oru_minimal/include/ndt_map/ndt_cell.h	/^  pcl::PointXYZ center_;$/;"	m	class:perception_oru::NDTCell	typeref:typename:pcl::PointXYZ
centerx	oru_minimal/include/ndt_map/ndt_map.h	/^  float centerx,centery,centerz;$/;"	m	class:perception_oru::NDTMap	typeref:typename:float
centerx	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    float centerx,centery,centerz;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:float
centery	oru_minimal/include/ndt_map/ndt_map.h	/^  float centerx,centery,centerz;$/;"	m	class:perception_oru::NDTMap	typeref:typename:float
centery	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    float centerx,centery,centerz;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:float
centerz	oru_minimal/include/ndt_map/ndt_map.h	/^  float centerx,centery,centerz;$/;"	m	class:perception_oru::NDTMap	typeref:typename:float
centerz	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    float centerx,centery,centerz;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:float
check	include/profiler.hpp	/^    void check(int i){$/;"	f	class:Profiler	typeref:typename:void
check	oru_minimal/src/ndt_matcher_p2d.cpp	/^void NDTMatcherP2D::check( pcl::PointCloud<pcl::PointXYZ>& fixed,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:void
checkCellforNDT	oru_minimal/src/lazy_grid.cpp	/^bool LazyGrid::checkCellforNDT(int indX, int indY, int indZ, bool checkForGaussian)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:bool
checkCellforNDT	src/lazy_grid_improved.cpp	/^bool LazyGrid::checkCellforNDT(int indX, int indY, int indZ, bool checkForGaussian)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:bool
checkConsistency	include/se_ndt/ndt_fuser_hmt_se.h	/^		bool checkConsistency;			 \/\/\/perform a check for consistency against initial estimate$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:bool
checkOpenGLError	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^inline void checkOpenGLError()$/;"	f	typeref:typename:void
cl_	oru_minimal/include/ndt_map/ndt_cell.h	/^  CellClass cl_;$/;"	m	class:perception_oru::NDTCell	typeref:typename:CellClass
classify	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::classify()$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
clean	build/Makefile	/^clean:$/;"	t
clean/fast	build/Makefile	/^clean\/fast: clean$/;"	t
cleanCellsAboveSize	oru_minimal/src/cell_vector.cpp	/^void CellVector::cleanCellsAboveSize(double size)$/;"	f	class:perception_oru::CellVector	typeref:typename:void
clean_test_results	build/Makefile	/^clean_test_results: cmake_check_build_system$/;"	t
clean_test_results/fast	build/Makefile	/^clean_test_results\/fast:$/;"	t
clear	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void clear() { lines.clear(); }$/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:void
clear	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void clear() { objs.clear(); objs.resize(0); }$/;"	f	class:NDTVizGlutEllipsoids	typeref:typename:void
clear	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void clear() { pts.clear(); }$/;"	f	class:NDTVizGlutPointCloudColor	typeref:typename:void
clear	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void clear(){$/;"	f	class:NDTViz	typeref:typename:void
clearCells	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::clearCells(){$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
clearMarkers	include/rviz_ndt.h	/^    void clearMarkers(int n_res){$/;"	f	class:ndt_rviz	typeref:typename:void
clearParticles	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void clearParticles(){ gl_particles.clear();}$/;"	f	class:NDTViz	typeref:typename:void
clearScene	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::clearScene() {$/;"	f	class:NDTVizGlut	typeref:typename:void
clearTrajectoryPoints	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void clearTrajectoryPoints(){$/;"	f	class:NDTViz	typeref:typename:void
clone	oru_minimal/src/cell_vector.cpp	/^SpatialIndex* CellVector::clone() const$/;"	f	class:perception_oru::CellVector	typeref:typename:SpatialIndex *
clone	oru_minimal/src/lazy_grid.cpp	/^SpatialIndex* LazyGrid::clone() const$/;"	f	class:perception_oru::LazyGrid	typeref:typename:SpatialIndex *
clone	oru_minimal/src/ndt_cell.cpp	/^NDTCell* NDTCell::clone() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:NDTCell *
clone	src/lazy_grid_improved.cpp	/^SpatialIndex* LazyGrid::clone() const$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:SpatialIndex *
closedFormSolution	src/ndt_histogram.cpp	/^  void NDTHistogram::closedFormSolution(pcl::PointCloud<pcl::PointXYZ> &src, pcl::PointCloud<pcl/;"	f	class:perception_oru::NDTHistogram	typeref:typename:void
cloud_index	oru_minimal/include/ndt_map/lazy_grid.h	/^    unsigned int cloud_index=0;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:unsigned int
cloud_index	oru_minimal/include/ndt_map/ndt_cell.h	/^  unsigned int cloud_index;$/;"	m	class:perception_oru::NDTCell	typeref:typename:unsigned int
cmake_check_build_system	build/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	build/Makefile	/^cmake_force:$/;"	t
code	build/catkin_generated/generate_cached_setup.py	/^code = generate_environment_script('\/home\/anestis\/workspace\/se_ndt\/build\/devel\/env.sh')$/;"	v
col	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  GLfloat col[3];$/;"	m	class:NDTVizGlutColorPoint	typeref:typename:GLfloat[3]
comment	build/atomic_configure/_setup_util.py	/^def comment(msg):$/;"	f
comment	build/catkin_generated/installspace/_setup_util.py	/^def comment(msg):$/;"	f
comment	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def comment(msg):$/;"	f
comment	build/devel/_setup_util.py	/^def comment(msg):$/;"	f
computeConflictingPoints	oru_minimal/src/ndt_map.cpp	/^void NDTMap::computeConflictingPoints(const Eigen::Vector3d &origin,$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
computeCovFromPoints	oru_minimal/src/ndt_cell.cpp	/^inline void computeCovFromPoints(Eigen::Matrix3d &cov_, const Eigen::Vector3d &mean_, const std:/;"	f	namespace:perception_oru	typeref:typename:void
computeDerivatives	oru_minimal/src/ndt_matcher_d2d.cpp	/^void NDTMatcherD2D::computeDerivatives(Eigen::Vector3d &x, Eigen::Matrix3d C1, bool computeHessi/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:void
computeDerivatives	oru_minimal/src/ndt_matcher_p2d.cpp	/^void NDTMatcherP2D::computeDerivatives(pcl::PointXYZ &pt)$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:void
computeDerivativesLocal	oru_minimal/src/ndt_matcher_d2d.cpp	/^void NDTMatcherD2D::computeDerivativesLocal(Eigen::Vector3d &x, Eigen::Matrix3d C1,$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:void
computeDerivativesLocal	src/ndt_matcher_p2d_se.cpp	/^void NDTMatcherP2D_SE::computeDerivativesLocal(pcl::PointXYZ &pt,$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:void
computeDerivativesLocal_2d	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^void NDTMatcherD2D_2D::computeDerivativesLocal_2d(Eigen::Vector3d &x, Eigen::Matrix3d C1,$/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:void
computeDerivatives_2d	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^void NDTMatcherD2D_2D::computeDerivatives_2d(Eigen::Vector3d &x, Eigen::Matrix3d C1, bool comput/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:void
computeDirections	src/ndt_histogram.cpp	/^  void NDTHistogram::computeDirections(){$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:void
computeGaussian	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::computeGaussian(int mode, unsigned int maxnumpoints, float occupancy_limit, Eigen:/;"	f	class:perception_oru::NDTCell	typeref:typename:void
computeGaussianSimple	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::computeGaussianSimple(){$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
computeMaximumLikelihoodAlongLine	oru_minimal/include/ndt_map/ndt_cell.h	/^  double computeMaximumLikelihoodAlongLine(const Eigen::Vector3d &ep1, const Eigen::Vector3d &ep/;"	f	class:perception_oru::NDTCell	typeref:typename:double
computeMaximumLikelihoodAlongLine	oru_minimal/src/ndt_cell.cpp	/^double NDTCell::computeMaximumLikelihoodAlongLine(const pcl::PointXYZ &p1, const pcl::PointXYZ &/;"	f	class:perception_oru::NDTCell	typeref:typename:double
computeMaximumLikelihoodPointCloudWithRangePairs	oru_minimal/src/ndt_map.cpp	/^void NDTMap::computeMaximumLikelihoodPointCloudWithRangePairs(const Eigen::Vector3d &origin, $/;"	f	class:perception_oru::NDTMap	typeref:typename:void
computeMaximumLikelihoodRanges	oru_minimal/src/ndt_map.cpp	/^void NDTMap::computeMaximumLikelihoodRanges(const Eigen::Vector3d &origin,$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
computeMeanFromPoints	oru_minimal/src/ndt_cell.cpp	/^inline void computeMeanFromPoints(Eigen::Vector3d &mean_, const std::vector<pcl::PointXYZ,Eigen:/;"	f	namespace:perception_oru	typeref:typename:void
computeNDTCells	oru_minimal/src/ndt_map.cpp	/^void NDTMap::computeNDTCells(int cellupdatemode, unsigned int maxnumpoints, float occupancy_limi/;"	f	class:perception_oru::NDTMap	typeref:typename:void
computeNDTCells	oru_minimal/src/ndt_map_hmt.cpp	/^void NDTMapHMT::computeNDTCells(int cellupdatemode, unsigned int maxnumpoints, float occupancy_l/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:void
computeNDTCellsSimple	oru_minimal/src/ndt_map.cpp	/^void NDTMap::computeNDTCellsSimple(bool keepPoints)$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
computeSemiStaticLikelihood	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float computeSemiStaticLikelihood(int N)$/;"	f	struct:TEventData	typeref:typename:float
computeShortTermOccupancy	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float computeShortTermOccupancy()$/;"	f	struct:TEventData	typeref:typename:float
conflictPoints	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    pcl::PointCloud<pcl::PointXYZ> conflictPoints; \/\/\/< points that were conflicting during u/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:EIGEN_MAKE_ALIGNED_OPERATOR_NEW pcl::PointCloud<pcl::PointXYZ>
consistency_score	oru_minimal/include/ndt_map/ndt_cell.h	/^  double consistency_score;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
const	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
constructHistogram	src/ndt_histogram.cpp	/^  void NDTHistogram::constructHistogram(NDTMap **map,$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:void
copy	oru_minimal/src/cell_vector.cpp	/^SpatialIndex* CellVector::copy() const$/;"	f	class:perception_oru::CellVector	typeref:typename:SpatialIndex *
copy	oru_minimal/src/lazy_grid.cpp	/^SpatialIndex* LazyGrid::copy() const$/;"	f	class:perception_oru::LazyGrid	typeref:typename:SpatialIndex *
copy	oru_minimal/src/ndt_cell.cpp	/^NDTCell* NDTCell::copy() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:NDTCell *
copy	src/lazy_grid_improved.cpp	/^SpatialIndex* LazyGrid::copy() const$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:SpatialIndex *
cost	oru_minimal/include/ndt_map/ndt_cell.h	/^  double cost; 	\/\/\/ ndt_wavefront planner$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
cov_	oru_minimal/include/ndt_map/ndt_cell.h	/^  Eigen::Matrix3d cov_;		\/\/\/ Contains the covariance of the normal distribution$/;"	m	class:perception_oru::NDTCell	typeref:typename:Eigen::Matrix3d
covariance	oru_minimal/src/ndt_matcher_d2d.cpp	/^bool NDTMatcherD2D::covariance( NDTMap& targetNDT,$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
covariance	oru_minimal/src/ndt_matcher_d2d.cpp	/^bool NDTMatcherD2D::covariance( pcl::PointCloud<pcl::PointXYZ>& target,$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
covariance	oru_minimal/src/ndt_matcher_p2d.cpp	/^bool NDTMatcherP2D::covariance( pcl::PointCloud<pcl::PointXYZ>& target,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:bool
covariance	src/ndt_matcher_d2d_se.cpp	/^bool NDTMatcherD2D_SE::covariance( $/;"	f	class:perception_oru::NDTMatcherD2D_SE	typeref:typename:bool
create_gl_thread	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^static int create_gl_thread( void ) {$/;"	f	typeref:typename:int
cstep	oru_minimal/src/ndt_matcher_d2d.cpp	/^int NDTMatcherD2D::MoreThuente::cstep(double& stx, double& fx, double& dx,$/;"	f	class:perception_oru::NDTMatcherD2D::MoreThuente	typeref:typename:int
cstep	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^int NDTMatcherD2D_2D::MoreThuente::cstep(double& stx, double& fx, double& dx,$/;"	f	class:perception_oru::NDTMatcherD2D_2D::MoreThuente	typeref:typename:int
cstep	oru_minimal/src/ndt_matcher_p2d.cpp	/^int NDTMatcherP2D::MoreThuente::cstep(double& stx, double& fx, double& dx,$/;"	f	class:lslgeneric::NDTMatcherP2D::MoreThuente	typeref:typename:int
cstep	src/ndt_matcher_p2d_se.cpp	/^int NDTMatcherP2D_SE::MoreThuente::cstep(double& stx, double& fx, double& dx,$/;"	f	class:perception_oru::NDTMatcherP2D_SE::MoreThuente	typeref:typename:int
ctr	include/se_ndt/ndt_fuser_hmt_se.h	/^		int ctr;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:int
current_resolution	include/se_ndt/ndt_matcher_p2d_se.h	/^    double current_resolution;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:double
current_resolution	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    double current_resolution;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:double
current_resolution	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    double current_resolution;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:double
current_resolution	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    double current_resolution;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:double
d1	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
d1	oru_minimal/include/ndt_map/lazy_grid.h	/^  size_t d1,d2,d3;$/;"	m	class:perception_oru::CellVector3d	typeref:typename:size_t
d1	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
d1_	oru_minimal/include/ndt_map/ndt_cell.h	/^  double d1_,d2_;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
d2	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
d2	oru_minimal/include/ndt_map/lazy_grid.h	/^  size_t d1,d2,d3;$/;"	m	class:perception_oru::CellVector3d	typeref:typename:size_t
d2	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
d2_	oru_minimal/include/ndt_map/ndt_cell.h	/^  double d1_,d2_;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
d3	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
d3	oru_minimal/include/ndt_map/lazy_grid.h	/^  size_t d1,d2,d3;$/;"	m	class:perception_oru::CellVector3d	typeref:typename:size_t
d3	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
dRdx	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdx, dRdy, dRdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
dRdxdx	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdxdx, dRdxdy, dRdxdz, dRdydy, dRdydz, dRdzdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
dRdxdy	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdxdx, dRdxdy, dRdxdz, dRdydy, dRdydz, dRdzdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
dRdxdz	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdxdx, dRdxdy, dRdxdz, dRdydy, dRdydz, dRdzdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
dRdy	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdx, dRdy, dRdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
dRdydy	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdxdx, dRdxdy, dRdxdz, dRdydy, dRdydz, dRdzdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
dRdydz	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdxdx, dRdxdy, dRdxdz, dRdydy, dRdydz, dRdzdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
dRdz	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdx, dRdy, dRdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
dRdzdz	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,3,3> dRdxdx, dRdxdy, dRdxdz, dRdydy, dRdydz, dRdzdz;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,3,3>
data	oru_minimal/include/ndt_map/lazy_grid.h	/^  std::vector<NDTCell*> data;$/;"	m	class:perception_oru::CellVector3d	typeref:typename:std::vector<NDTCell * >
dataArray	oru_minimal/include/ndt_map/lazy_grid.h	/^    Darray dataArray;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:Darray
deallocateCell	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::deallocateCell(int i,int j, int k)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
dealocateCells	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::dealocateCells(int dim_ind, int newP, boost::archive::text_oarchive& oa, unsigned/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
default_target	build/Makefile	/^default_target: all$/;"	t
depend	build/Makefile	/^depend:$/;"	t
derivativesNDT	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::derivativesNDT($/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:double
derivativesNDT	src/ndt_matcher_d2d_se.cpp	/^double NDTMatcherD2D_SE::derivativesNDT($/;"	f	class:perception_oru::NDTMatcherD2D_SE	typeref:typename:double
derivativesNDT_2d	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^double NDTMatcherD2D_2D::derivativesNDT_2d($/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:double
derivativesPointCloud	oru_minimal/src/ndt_matcher_p2d.cpp	/^void NDTMatcherP2D::derivativesPointCloud(pcl::PointCloud<pcl::PointXYZ> &source,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:void
derivativesPointCloud	src/ndt_matcher_p2d_se.cpp	/^void NDTMatcherP2D_SE::derivativesPointCloud(pcl::PointCloud<pcl::PointXYZ> *source,$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:void
directions	include/se_ndt/ndt_histogram.h	/^    std::vector<Eigen::Vector3d,Eigen::aligned_allocator<Eigen::Vector3d> > directions;$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:std::vector<Eigen::Vector3d,Eigen::aligned_allocator<Eigen::Vector3d>>
directions	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector<Eigen::Vector3d,Eigen::aligned_allocator<Eigen::Vector3d> > directions;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:std::vector<Eigen::Vector3d,Eigen::aligned_allocator<Eigen::Vector3d>>
displayParticles	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void displayParticles(){$/;"	f	class:NDTViz	typeref:typename:void
displayTrajectory	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void displayTrajectory(){$/;"	f	class:NDTViz	typeref:typename:void
dist_histogramBinsFlat	include/se_ndt/ndt_histogram.h	/^    Eigen::MatrixXi dist_histogramBinsFlat[3];$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:Eigen::MatrixXi[3]
dist_histogramBinsFlat	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector<int> dist_histogramBinsFlat[3];$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:std::vector<int>[3]
dist_histogramBinsLine	include/se_ndt/ndt_histogram.h	/^    Eigen::MatrixXi dist_histogramBinsLine[3];$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:Eigen::MatrixXi[3]
dist_histogramBinsLine	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector<int> dist_histogramBinsLine[3];$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:std::vector<int>[3]
dist_histogramBinsSphere	include/se_ndt/ndt_histogram.h	/^    Eigen::MatrixXi dist_histogramBinsSphere[3];$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:Eigen::MatrixXi[3]
dist_histogramBinsSphere	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector<int> dist_histogramBinsSphere[3];$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:std::vector<int>[3]
distance	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float distance;$/;"	m	class:NDTVizGlutXYOrbitCamera	typeref:typename:float
do_save_inc	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  bool do_save_inc;$/;"	m	class:NDTVizGlut	typeref:typename:bool
download_extra_data	build/Makefile	/^download_extra_data: cmake_check_build_system$/;"	t
download_extra_data/fast	build/Makefile	/^download_extra_data\/fast:$/;"	t
doxygen	build/Makefile	/^doxygen: cmake_check_build_system$/;"	t
doxygen/fast	build/Makefile	/^doxygen\/fast:$/;"	t
draw	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void draw() {$/;"	f	class:NDTVizGlutEllipsoid	typeref:typename:void
draw	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void draw() {$/;"	f	class:NDTVizGlutEllipsoids	typeref:typename:void
draw	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void draw() {$/;"	f	class:NDTVizGlutPointCloudColor	typeref:typename:void
draw	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void draw() {$/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:void
draw	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void draw(){$/;"	f	class:NDTVizGlutText	typeref:typename:void
draw	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::draw()$/;"	f	class:NDTVizGlut	typeref:typename:void
draw_origin	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::draw_origin()$/;"	f	class:NDTVizGlut	typeref:typename:void
duplicate	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			CObject* duplicate(){return this;}$/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:CObject *
dur	include/rviz_ndt.h	/^    ros::Duration dur;$/;"	m	class:ndt_rviz	typeref:typename:ros::Duration
dynamic_reconfigure_generate_messages_cpp	build/Makefile	/^dynamic_reconfigure_generate_messages_cpp: cmake_check_build_system$/;"	t
dynamic_reconfigure_generate_messages_cpp/fast	build/Makefile	/^dynamic_reconfigure_generate_messages_cpp\/fast:$/;"	t
dynamic_reconfigure_generate_messages_eus	build/Makefile	/^dynamic_reconfigure_generate_messages_eus: cmake_check_build_system$/;"	t
dynamic_reconfigure_generate_messages_eus/fast	build/Makefile	/^dynamic_reconfigure_generate_messages_eus\/fast:$/;"	t
dynamic_reconfigure_generate_messages_lisp	build/Makefile	/^dynamic_reconfigure_generate_messages_lisp: cmake_check_build_system$/;"	t
dynamic_reconfigure_generate_messages_lisp/fast	build/Makefile	/^dynamic_reconfigure_generate_messages_lisp\/fast:$/;"	t
dynamic_reconfigure_generate_messages_nodejs	build/Makefile	/^dynamic_reconfigure_generate_messages_nodejs: cmake_check_build_system$/;"	t
dynamic_reconfigure_generate_messages_nodejs/fast	build/Makefile	/^dynamic_reconfigure_generate_messages_nodejs\/fast:$/;"	t
dynamic_reconfigure_generate_messages_py	build/Makefile	/^dynamic_reconfigure_generate_messages_py: cmake_check_build_system$/;"	t
dynamic_reconfigure_generate_messages_py/fast	build/Makefile	/^dynamic_reconfigure_generate_messages_py\/fast:$/;"	t
e1	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
e1	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
e2	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
e2	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
e3	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
e3	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
edata	oru_minimal/include/ndt_map/ndt_cell.h	/^  TEventData edata;$/;"	m	class:perception_oru::NDTCell	typeref:typename:TEventData
edge_counter	src/se_ndt.cpp	/^int edge_counter=0;$/;"	v	typeref:typename:int
edit_cache	build/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	build/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
elapsed	include/profiler.hpp	/^    void elapsed(int i){$/;"	f	class:Profiler	typeref:typename:void
emptydist	oru_minimal/include/ndt_map/ndt_cell.h	/^  double emptydist;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
emptylik	oru_minimal/include/ndt_map/ndt_cell.h	/^  double emptylik;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
emptyval	oru_minimal/include/ndt_map/ndt_cell.h	/^  int emptyval;			\/\/\/The number of times a cell was observed empty (using ray casting)$/;"	m	class:perception_oru::NDTCell	typeref:typename:int
enableDrawSolid3D	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			void enableDrawSolid3D(bool v) { m_drawSolid3D = v; CRenderizableDisplayList::notifyChange();/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:void
enableDrawSolid3D	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void enableDrawSolid3D(bool s) { m_drawSolid3D = s; }$/;"	f	class:NDTVizGlutEllipsoid	typeref:typename:void
end	oru_minimal/src/cell_vector.cpp	/^typename SpatialIndex::CellVectorConstItr CellVector::end() const$/;"	f	class:perception_oru::CellVector	typeref:typename:SpatialIndex::CellVectorConstItr
end	oru_minimal/src/cell_vector.cpp	/^typename SpatialIndex::CellVectorItr CellVector::end()$/;"	f	class:perception_oru::CellVector	typeref:typename:SpatialIndex::CellVectorItr
end	oru_minimal/src/lazy_grid.cpp	/^typename SpatialIndex::CellVectorConstItr LazyGrid::end() const$/;"	f	class:perception_oru::LazyGrid	typeref:typename:SpatialIndex::CellVectorConstItr
end	oru_minimal/src/lazy_grid.cpp	/^typename SpatialIndex::CellVectorItr LazyGrid::end()$/;"	f	class:perception_oru::LazyGrid	typeref:typename:SpatialIndex::CellVectorItr
end	src/lazy_grid_improved.cpp	/^typename SpatialIndex::CellVectorItr LazyGrid::end()$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:SpatialIndex::CellVectorItr
entropySafe	src/ndt_histogram.cpp	/^double entropySafe(double p, double q){$/;"	f	namespace:perception_oru	typeref:typename:double
entryL	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    double entryL()$/;"	f	struct:TEventData	typeref:typename:double
environ	build/atomic_configure/_setup_util.py	/^        environ = dict(os.environ)$/;"	v
environ	build/catkin_generated/installspace/_setup_util.py	/^        environ = dict(os.environ)$/;"	v
environ	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^        environ = dict(os.environ)$/;"	v
environ	build/devel/_setup_util.py	/^        environ = dict(os.environ)$/;"	v
evals_	oru_minimal/include/ndt_map/ndt_cell.h	/^  Eigen::Vector3d evals_; \/\/\/ Eigen values$/;"	m	class:perception_oru::NDTCell	typeref:typename:Eigen::Vector3d
evecs_	oru_minimal/include/ndt_map/ndt_cell.h	/^  Eigen::Matrix3d evecs_; \/\/\/ Eigen vectors$/;"	m	class:perception_oru::NDTCell	typeref:typename:Eigen::Matrix3d
events	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    uint64_t  events;        \/\/\/ A storage for the last 64 events (as bits)$/;"	m	struct:TEventData	typeref:typename:uint64_t
exitL	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    double exitL()$/;"	f	struct:TEventData	typeref:typename:double
f1	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
f1	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
f2	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
f2	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
f3	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
f3	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d a2,a3, b2,b3, c2,c3, d1,d2,d3, e1,e2,e3, f1,f2,f3;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
fAddTimes	include/se_ndt/ndt_fuser_hmt_se.h	/^	FILE *fAddTimes, *fRegTimes;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:FILE *
fRegTimes	include/se_ndt/ndt_fuser_hmt_se.h	/^	FILE *fAddTimes, *fRegTimes;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:FILE **
fac	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    double fac(int n)$/;"	f	struct:TEventData	typeref:typename:double
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
fexists	oru_minimal/src/lazy_grid.cpp	/^bool fexists(const std::string& filename)$/;"	f	namespace:perception_oru	typeref:typename:bool
filt_write	src/ros_read_register.cpp	/^void filt_write (pcl::PointCloud<pcl::PointXYZI>::Ptr cloud, float max_dist)$/;"	f	typeref:typename:void
filt_write	src/semanticRegister.cpp	/^void filt_write (pcl::PointCloud<pcl::PointXYZI>::Ptr cloud, float max_dist)$/;"	f	typeref:typename:void
filter_class_omp	src/ros_read_register.cpp	/^pcl::PointCloud<pcl::PointXYZI>::Ptr filter_class_omp(pcl::PointCloud<pcl::PointXYZI>::Ptr cloud/;"	f	typeref:typename:pcl::PointCloud<pcl::PointXYZI>::Ptr
filter_class_omp	src/semanticRegister.cpp	/^pcl::PointCloud<pcl::PointXYZI>::Ptr filter_class_omp(pcl::PointCloud<pcl::PointXYZI>::Ptr cloud/;"	f	typeref:typename:pcl::PointCloud<pcl::PointXYZI>::Ptr
finalpath	oru_minimal/include/ndt_map/lazy_grid.h	/^    std::string finalpath;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:std::string
finalscore	include/se_ndt/ndt_matcher_p2d_se.h	/^    double finalscore;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:double
finalscore	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    double finalscore;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:double
finalscore	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    double finalscore;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:double
finalscore	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    double finalscore;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:double
find_env_hooks	build/atomic_configure/_setup_util.py	/^def find_env_hooks(environ, cmake_prefix_path):$/;"	f
find_env_hooks	build/catkin_generated/installspace/_setup_util.py	/^def find_env_hooks(environ, cmake_prefix_path):$/;"	f
find_env_hooks	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def find_env_hooks(environ, cmake_prefix_path):$/;"	f
find_env_hooks	build/devel/_setup_util.py	/^def find_env_hooks(environ, cmake_prefix_path):$/;"	f
find_start	src/se_ndt.cpp	/^int NDTMatch_SE::find_start(pcl::PointCloud<pcl::PointXYZL>::iterator pi, float max_size)$/;"	f	class:NDTMatch_SE	typeref:typename:int
firstRun	include/se_ndt/ndt_fuser_hmt_se.h	/^	bool visualize,firstRun;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:bool
firstRun	include/se_ndt/se_ndt.hpp	/^		bool firstRun;$/;"	m	class:NDTMatch_SE	typeref:typename:bool
fixRotation	src/se_ndt.cpp	/^bool fixRotation(Eigen::Affine3d &T){$/;"	f	typeref:typename:bool
fixed_camera	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutFixedCamera fixed_camera;$/;"	m	class:NDTVizGlut	typeref:typename:NDTVizGlutFixedCamera
focal_point_	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f focal_point_;$/;"	m	class:NDTVizGlutFixedCamera	typeref:typename:Eigen::Vector3f
focal_point_	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f focal_point_;$/;"	m	class:NDTVizGlutXYOrbitCamera	typeref:typename:Eigen::Vector3f
full_screen	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  bool full_screen;$/;"	m	class:NDTVizGlut	typeref:typename:bool
fuseIncomplete	include/se_ndt/ndt_fuser_hmt_se.h	/^		bool fuseIncomplete, beHMT,canUpdate;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:bool
generateScoreDebug	oru_minimal/src/ndt_matcher_p2d.cpp	/^void NDTMatcherP2D::generateScoreDebug(const char* out, pcl::PointCloud<pcl::PointXYZ>& fixed,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:void
geomDist	oru_minimal/include/ndt_map/impl/pointcloud_utils.hpp	/^double geomDist(PointT p1, PointT p2)$/;"	f	namespace:perception_oru	typeref:typename:double
geometry_msgs_generate_messages_cpp	build/Makefile	/^geometry_msgs_generate_messages_cpp: cmake_check_build_system$/;"	t
geometry_msgs_generate_messages_cpp/fast	build/Makefile	/^geometry_msgs_generate_messages_cpp\/fast:$/;"	t
geometry_msgs_generate_messages_eus	build/Makefile	/^geometry_msgs_generate_messages_eus: cmake_check_build_system$/;"	t
geometry_msgs_generate_messages_eus/fast	build/Makefile	/^geometry_msgs_generate_messages_eus\/fast:$/;"	t
geometry_msgs_generate_messages_lisp	build/Makefile	/^geometry_msgs_generate_messages_lisp: cmake_check_build_system$/;"	t
geometry_msgs_generate_messages_lisp/fast	build/Makefile	/^geometry_msgs_generate_messages_lisp\/fast:$/;"	t
geometry_msgs_generate_messages_nodejs	build/Makefile	/^geometry_msgs_generate_messages_nodejs: cmake_check_build_system$/;"	t
geometry_msgs_generate_messages_nodejs/fast	build/Makefile	/^geometry_msgs_generate_messages_nodejs\/fast:$/;"	t
geometry_msgs_generate_messages_py	build/Makefile	/^geometry_msgs_generate_messages_py: cmake_check_build_system$/;"	t
geometry_msgs_generate_messages_py/fast	build/Makefile	/^geometry_msgs_generate_messages_py\/fast:$/;"	t
getAllCells	oru_minimal/src/ndt_map.cpp	/^std::vector<perception_oru::NDTCell*> NDTMap::getAllCells() const$/;"	f	class:perception_oru::NDTMap	typeref:typename:std::vector<perception_oru::NDTCell * >
getAllCells	oru_minimal/src/ndt_map_hmt.cpp	/^std::vector<lslgeneric::NDTCell*> NDTMapHMT::getAllCells() const$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:std::vector<lslgeneric::NDTCell * >
getAllCellsShared	oru_minimal/src/ndt_map.cpp	/^std::vector< boost::shared_ptr<perception_oru::NDTCell> > NDTMap::getAllCellsShared() const$/;"	f	class:perception_oru::NDTMap	typeref:typename:std::vector<boost::shared_ptr<perception_oru::NDTCell>>
getAllInitializedCells	oru_minimal/src/ndt_map.cpp	/^std::vector<perception_oru::NDTCell*> NDTMap::getAllInitializedCells() const$/;"	f	class:perception_oru::NDTMap	typeref:typename:std::vector<perception_oru::NDTCell * >
getAllInitializedCells	oru_minimal/src/ndt_map_hmt.cpp	/^std::vector<lslgeneric::NDTCell*> NDTMapHMT::getAllInitializedCells()$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:std::vector<lslgeneric::NDTCell * >
getAllInitializedCellsShared	oru_minimal/src/ndt_map.cpp	/^std::vector< boost::shared_ptr<perception_oru::NDTCell> > NDTMap::getAllInitializedCellsShared()/;"	f	class:perception_oru::NDTMap	typeref:typename:std::vector<boost::shared_ptr<perception_oru::NDTCell>>
getB	src/ros_read_register.cpp	/^pcl::PointCloud<pcl::PointXYZI>::Ptr getB(string filename)$/;"	f	typeref:typename:pcl::PointCloud<pcl::PointXYZI>::Ptr
getB	src/semanticRegister.cpp	/^pcl::PointCloud<pcl::PointXYZI>::Ptr getB(string filename)$/;"	f	typeref:typename:pcl::PointCloud<pcl::PointXYZI>::Ptr
getBit	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    bool getBit(int ind)$/;"	f	struct:TEventData	typeref:typename:bool
getBoundingBox	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			virtual void getBoundingBox(mrpt::math::TPoint3D&, mrpt::math::TPoint3D&) const{}$/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:void
getCameraConstPtr	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::getCameraConstPtr() const {$/;"	f	class:NDTVizGlut	typeref:typename:const NDTVizGlutCamera *
getCameraPtr	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::getCameraPtr() {$/;"	f	class:NDTVizGlut	typeref:typename:NDTVizGlutCamera *
getCellAt	oru_minimal/include/ndt_map/lazy_grid.h	/^    virtual inline void getCellAt(const pcl::PointXYZ& pt, NDTCell* &cell){$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getCellAt	oru_minimal/include/ndt_map/lazy_grid.h	/^    virtual inline void getCellAt(int indX, int indY, int indZ, NDTCell* &cell){$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getCellAtAllocate	oru_minimal/src/lazy_grid.cpp	/^bool LazyGrid::getCellAtAllocate(const pcl::PointXYZ &pt, NDTCell* &cell)\/\/RETURNS TRUE IF CEL/;"	f	class:perception_oru::LazyGrid	typeref:typename:bool
getCellAtAllocate	oru_minimal/src/ndt_map.cpp	/^bool NDTMap::getCellAtAllocate(const pcl::PointXYZ &refPoint, NDTCell *&cell) const $/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getCellAtAllocate	oru_minimal/src/ndt_map.cpp	/^bool NDTMap::getCellAtAllocate(const pcl::PointXYZ &refPoint, NDTCell *&cell)$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getCellAtID	oru_minimal/src/ndt_map.cpp	/^NDTCell* NDTMap::getCellAtID(int x,int y,int z) const {$/;"	f	class:perception_oru::NDTMap	typeref:typename:NDTCell *
getCellAtPoint	oru_minimal/src/ndt_map.cpp	/^bool NDTMap::getCellAtPoint(const pcl::PointXYZ &refPoint, NDTCell *&cell) const $/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getCellAtPoint	oru_minimal/src/ndt_map.cpp	/^bool NDTMap::getCellAtPoint(const pcl::PointXYZ &refPoint, NDTCell *&cell)$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getCellAtPoint	oru_minimal/src/ndt_map_hmt.cpp	/^bool NDTMapHMT::getCellAtPoint(const pcl::PointXYZ &refPoint, NDTCell *&cell)$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:bool
getCellForPoint	oru_minimal/src/cell_vector.cpp	/^NDTCell* CellVector::getCellForPoint(const pcl::PointXYZ &point)$/;"	f	class:perception_oru::CellVector	typeref:typename:NDTCell *
getCellForPoint	oru_minimal/src/lazy_grid.cpp	/^NDTCell* LazyGrid::getCellForPoint(const pcl::PointXYZ &point)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:NDTCell *
getCellForPoint	oru_minimal/src/ndt_map.cpp	/^bool NDTMap::getCellForPoint(const pcl::PointXYZ &pt, NDTCell* &out_cell, bool checkForGaussian)/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getCellForPoint	oru_minimal/src/ndt_map_hmt.cpp	/^bool NDTMapHMT::getCellForPoint(const pcl::PointXYZ &pt, NDTCell* &out_cell, bool checkForGaussi/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:bool
getCellForPoint	src/lazy_grid_improved.cpp	/^NDTCell* LazyGrid::getCellForPoint(const pcl::PointXYZ &point)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:NDTCell *
getCellIdx	oru_minimal/src/cell_vector.cpp	/^NDTCell* CellVector::getCellIdx(unsigned int idx) const$/;"	f	class:perception_oru::CellVector	typeref:typename:NDTCell *
getCellIdx	oru_minimal/src/ndt_map.cpp	/^NDTCell* NDTMap::getCellIdx(unsigned int idx) const$/;"	f	class:perception_oru::NDTMap	typeref:typename:NDTCell *
getCellSize	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::getCellSize(double &cx, double &cy, double &cz)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getCellSize	src/lazy_grid_improved.cpp	/^void LazyGrid::getCellSize(double &cx, double &cy, double &cz)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
getCellSizeInMeters	oru_minimal/include/ndt_map/ndt_map.h	/^  bool getCellSizeInMeters(double &cx, double &cy, double &cz) const$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getCellSizeInMeters	oru_minimal/include/ndt_map/ndt_map.h	/^  bool getCellSizeInMeters(double &cx, double &cy, double &cz)$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getCellsForPoint	oru_minimal/src/ndt_map.cpp	/^std::vector<NDTCell*> NDTMap::getCellsForPoint(const pcl::PointXYZ pt, int n_neigh, bool checkFo/;"	f	class:perception_oru::NDTMap	typeref:typename:std::vector<NDTCell * >
getCellsForPoint	oru_minimal/src/ndt_map_hmt.cpp	/^std::vector<NDTCell*> NDTMapHMT::getCellsForPoint(const pcl::PointXYZ pt, int n_neigh, bool chec/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:std::vector<NDTCell * >
getCenter	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline pcl::PointXYZ getCenter() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:pcl::PointXYZ
getCenter	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline void getCenter(double &cx,double &cy,double &cz) const$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
getCenter	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::getCenter(double &cx, double &cy, double &cz)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getCenter	src/lazy_grid_improved.cpp	/^void LazyGrid::getCenter(double &cx, double &cy, double &cz)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
getCentroid	oru_minimal/include/ndt_map/ndt_map.h	/^  virtual bool getCentroid(double &cx, double &cy, double &cz)$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getCentroid	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    virtual bool getCentroid(double &cx, double &cy, double &cz)$/;"	f	class:perception_oru::NDTMapHMT	typeref:typename:bool
getClass	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline CellClass getClass() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:CellClass
getClosestCells	oru_minimal/src/lazy_grid.cpp	/^std::vector<NDTCell*> LazyGrid::getClosestCells(const pcl::PointXYZ &pt)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:std::vector<NDTCell * >
getClosestCells	src/lazy_grid_improved.cpp	/^std::vector<NDTCell*> LazyGrid::getClosestCells(const pcl::PointXYZ &pt)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:std::vector<NDTCell * >
getClosestNDTCell	oru_minimal/src/cell_vector.cpp	/^NDTCell* CellVector::getClosestNDTCell(const pcl::PointXYZ &point)$/;"	f	class:perception_oru::CellVector	typeref:typename:NDTCell *
getClosestNDTCell	oru_minimal/src/lazy_grid.cpp	/^NDTCell* LazyGrid::getClosestNDTCell(const pcl::PointXYZ &point, bool checkForGaussian)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:NDTCell *
getClosestNDTCell	src/lazy_grid_improved.cpp	/^NDTCell* LazyGrid::getClosestNDTCell(const pcl::PointXYZ &point, bool checkForGaussian)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:NDTCell *
getClosestNDTCells	oru_minimal/src/cell_vector.cpp	/^std::vector<NDTCell*> CellVector::getClosestNDTCells(const pcl::PointXYZ &point, double &radius)$/;"	f	class:perception_oru::CellVector	typeref:typename:std::vector<NDTCell * >
getClosestNDTCells	oru_minimal/src/lazy_grid.cpp	/^std::vector< NDTCell* > LazyGrid::getClosestNDTCells(const pcl::PointXYZ &point, int &n_neigh, b/;"	f	class:perception_oru::LazyGrid	typeref:typename:std::vector<NDTCell * >
getClosestNDTCells	src/lazy_grid_improved.cpp	/^std::vector<NDTCell*> LazyGrid::getClosestNDTCells(const pcl::PointXYZ &point, int &n_neigh, boo/;"	f	class:lslgeneric::LazyGrid	typeref:typename:std::vector<NDTCell * >
getClosestNDTCellsShared	oru_minimal/src/lazy_grid.cpp	/^std::vector<boost::shared_ptr< NDTCell > > LazyGrid::getClosestNDTCellsShared(const pcl::PointXY/;"	f	class:perception_oru::LazyGrid	typeref:typename:std::vector<boost::shared_ptr<NDTCell>>
getCloud	src/big_cloud_test.cpp	/^std::tuple<pcl::PointCloud<pcl::PointXYZ>::Ptr,std::vector<double> >  getCloud(string filename, /;"	f	typeref:typename:std::tuple<pcl::PointCloud<pcl::PointXYZ>::Ptr,std::vector<double>>
getCloud	src/ros_read_register.cpp	/^std::tuple<pcl::PointCloud<pcl::PointXYZ>::Ptr,std::vector<double> >  getCloud(string filename, /;"	f	typeref:typename:std::tuple<pcl::PointCloud<pcl::PointXYZ>::Ptr,std::vector<double>>
getCloud	src/semanticRegister.cpp	/^std::tuple<pcl::PointCloud<pcl::PointXYZ>::Ptr,std::vector<double> >  getCloud(string filename, /;"	f	typeref:typename:std::tuple<pcl::PointCloud<pcl::PointXYZ>::Ptr,std::vector<double>>
getCov	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline Eigen::Matrix3d getCov() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:Eigen::Matrix3d
getCovMatrix	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			mrpt::math::CMatrixDouble getCovMatrix() const { return mrpt::math::CMatrixDouble(m_cov); }$/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:mrpt::math::CMatrixDouble
getDepth	oru_minimal/src/ndt_map.cpp	/^double NDTMap::getDepth(Eigen::Vector3d origin, Eigen::Vector3d dir, double maxDepth){$/;"	f	class:perception_oru::NDTMap	typeref:typename:double
getDepthSmooth	oru_minimal/src/ndt_map.cpp	/^double NDTMap::getDepthSmooth(Eigen::Vector3d origin,$/;"	f	class:perception_oru::NDTMap	typeref:typename:double
getDiagonal	oru_minimal/include/ndt_map/ndt_cell.h	/^  virtual double getDiagonal() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:double
getDimensions	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline void getDimensions(double &xs, double &ys, double &zs) const$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
getDominantDirections	src/ndt_histogram.cpp	/^  pcl::PointCloud<pcl::PointXYZ> NDTHistogram::getDominantDirections(int nDirections){$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:pcl::PointCloud<pcl::PointXYZ>
getDoubleTime	include/se_ndt/ndt_fuser_hmt_se.h	/^	double getDoubleTime()$/;"	f	class:perception_oru::NDTFuserHMT_SE	typeref:typename:double
getDynamicLikelihood	oru_minimal/include/ndt_map/ndt_cell.h	/^  float getDynamicLikelihood(unsigned int N)$/;"	f	class:perception_oru::NDTCell	typeref:typename:float
getEmptyDist	oru_minimal/include/ndt_map/ndt_cell.h	/^   const double getEmptyDist()const{return emptydist;}$/;"	f	class:perception_oru::NDTCell	typeref:typename:const double
getEmptyLik	oru_minimal/include/ndt_map/ndt_cell.h	/^   const double getEmptyLik()const{return emptylik;}$/;"	f	class:perception_oru::NDTCell	typeref:typename:const double
getEmptyval	oru_minimal/include/ndt_map/ndt_cell.h	/^  const int getEmptyval() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:const int
getEntryN	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    int getEntryN()$/;"	f	struct:TEventData	typeref:typename:int
getEvals	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline Eigen::Vector3d getEvals() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:Eigen::Vector3d
getEvecs	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline Eigen::Matrix3d getEvecs() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:Eigen::Matrix3d
getEventData	oru_minimal/include/ndt_map/ndt_cell.h	/^  TEventData getEventData()$/;"	f	class:perception_oru::NDTCell	typeref:typename:TEventData
getExitN	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    int getExitN()$/;"	f	struct:TEventData	typeref:typename:int
getFocalPoint	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f getFocalPoint() const {$/;"	f	class:NDTVizGlutFixedCamera	typeref:typename:Eigen::Vector3f
getFocalPoint	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f getFocalPoint() const {$/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:Eigen::Vector3f
getFreeStaticLikelihood	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float getFreeStaticLikelihood()$/;"	f	struct:TEventData	typeref:typename:float
getFullScreen	oru_minimal/src/NDTVizGlut.cc	/^bool NDTVizGlut::getFullScreen() const$/;"	f	class:NDTVizGlut	typeref:typename:bool
getGridSize	oru_minimal/include/ndt_map/ndt_map.h	/^  bool getGridSize(int &cx, int &cy, int &cz)$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getGridSize	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::getGridSize(int &cx, int &cy, int &cz)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getGridSize	src/lazy_grid_improved.cpp	/^void LazyGrid::getGridSize(int &cx, int &cy, int &cz)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
getGridSizeInMeters	oru_minimal/include/ndt_map/ndt_map.h	/^  bool getGridSizeInMeters(double &cx, double &cy, double &cz) const$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getGridSizeInMeters	oru_minimal/include/ndt_map/ndt_map.h	/^  bool getGridSizeInMeters(double &cx, double &cy, double &cz)$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
getGridSizeInMeters	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::getGridSizeInMeters(double &cx, double &cy, double &cz)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getGridSizeInMeters	src/lazy_grid_improved.cpp	/^void LazyGrid::getGridSizeInMeters(double &cx, double &cy, double &cz)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
getHes	src/se_ndt.cpp	/^Eigen::Matrix<double,6,6> getHes(Eigen::Matrix<double,6,6> Hessian,Eigen::Matrix<double,6,1> sco/;"	f	typeref:typename:Eigen::Matrix<double,6,6>
getIndexForPoint	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::getIndexForPoint(const pcl::PointXYZ& point, int &indX, int &indY, int &indZ)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getIndexForPoint	src/lazy_grid_improved.cpp	/^void LazyGrid::getIndexForPoint(const pcl::PointXYZ& point, int &indX, int &indY, int &indZ)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
getInitializedCellsForPoint	oru_minimal/src/ndt_map.cpp	/^std::vector<NDTCell*> NDTMap::getInitializedCellsForPoint(const pcl::PointXYZ pt) const$/;"	f	class:perception_oru::NDTMap	typeref:typename:std::vector<NDTCell * >
getInitializedCellsForPoint	oru_minimal/src/ndt_map_hmt.cpp	/^std::vector<NDTCell*> NDTMapHMT::getInitializedCellsForPoint(const pcl::PointXYZ pt) const$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:std::vector<NDTCell * >
getInverseCov	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline Eigen::Matrix3d getInverseCov() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:Eigen::Matrix3d
getJacobian	src/se_ndt.cpp	/^Eigen::Matrix<double,7,6> getJacobian(Eigen::VectorXd v)$/;"	f	typeref:typename:Eigen::Matrix<double,7,6>
getLikelihood	oru_minimal/src/ndt_cell.cpp	/^double NDTCell::getLikelihood(const pcl::PointXYZ &pt) const$/;"	f	class:perception_oru::NDTCell	typeref:typename:double
getLikelihoodForPoint	oru_minimal/src/ndt_map.cpp	/^double NDTMap::getLikelihoodForPoint(pcl::PointXYZ pt)$/;"	f	class:perception_oru::NDTMap	typeref:typename:double
getLikelihoodForPoint	oru_minimal/src/ndt_map_hmt.cpp	/^double NDTMapHMT::getLikelihoodForPoint(pcl::PointXYZ pt)$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:double
getLine	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutLine& getLine(size_t i) { return lines[i]; }$/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:NDTVizGlutLine &
getLineWidth	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			float getLineWidth() const { return m_lineWidth; }$/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:float
getMaxOccupancy	oru_minimal/include/ndt_map/ndt_cell.h	/^  const double getMaxOccupancy()const {$/;"	f	class:perception_oru::NDTCell	typeref:typename:const double
getMean	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline Eigen::Vector3d getMean() const$/;"	f	class:perception_oru::NDTCell	typeref:typename:Eigen::Vector3d
getMotionBlurFrames	oru_minimal/src/NDTVizGlut.cc	/^int NDTVizGlut::getMotionBlurFrames() const$/;"	f	class:NDTVizGlut	typeref:typename:int
getMyIndex	oru_minimal/include/ndt_map/ndt_map.h	/^    inline SpatialIndex* getMyIndex() const$/;"	f	class:perception_oru::NDTMap	typeref:typename:SpatialIndex *
getMyIndexInt	oru_minimal/src/ndt_map.cpp	/^int NDTMap::getMyIndexInt() const$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
getMyIndexStr	oru_minimal/src/ndt_map.cpp	/^std::string NDTMap::getMyIndexStr() const$/;"	f	class:perception_oru::NDTMap	typeref:typename:std::string
getN	oru_minimal/include/ndt_map/ndt_cell.h	/^  int getN()$/;"	f	class:perception_oru::NDTCell	typeref:typename:int
getNDTCellAt	oru_minimal/include/ndt_map/lazy_grid.h	/^    virtual inline void getNDTCellAt(const pcl::PointXYZ& pt, NDTCell* &cell){$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getNDTCellAt	oru_minimal/include/ndt_map/lazy_grid.h	/^    virtual inline void getNDTCellAt(int indX, int indY, int indZ, NDTCell* &cell){$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getNeighbors	oru_minimal/src/cell_vector.cpp	/^void CellVector::getNeighbors(const pcl::PointXYZ &point, const double &radius, std::vector<NDTC/;"	f	class:perception_oru::CellVector	typeref:typename:void
getNeighbors	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::getNeighbors(const pcl::PointXYZ &point, const double &radius, std::vector<NDTCel/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getNeighbors	src/lazy_grid_improved.cpp	/^void LazyGrid::getNeighbors(const pcl::PointXYZ &point, const double &radius, std::vector<NDTCel/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
getNeighborsShared	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::getNeighborsShared(const pcl::PointXYZ &point, const double &radius, std::vector</;"	f	class:perception_oru::LazyGrid	typeref:typename:void
getObservations	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    int getObservations()$/;"	f	struct:TEventData	typeref:typename:int
getOccStaticLikelihood	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float getOccStaticLikelihood()$/;"	f	struct:TEventData	typeref:typename:float
getOccupancy	oru_minimal/include/ndt_map/ndt_cell.h	/^  float getOccupancy()$/;"	f	class:perception_oru::NDTCell	typeref:typename:float
getOccupancyNow	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float getOccupancyNow()$/;"	f	struct:TEventData	typeref:typename:float
getOccupancyRescaled	oru_minimal/include/ndt_map/ndt_cell.h	/^  float getOccupancyRescaled()$/;"	f	class:perception_oru::NDTCell	typeref:typename:float
getPitchAngle	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float getPitchAngle() const { return pitch; }$/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:float
getPoint	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutColorPoint& getPoint(size_t i) { return pts[i]; }$/;"	f	class:NDTVizGlutPointCloudColor	typeref:typename:NDTVizGlutColorPoint &
getPoseCovariance	src/ndt_fuser_hmt_se.cpp	/^Eigen::Matrix<double, 6,6> NDTFuserHMT_SE::getPoseCovariance(Eigen::Affine3d T)$/;"	f	class:perception_oru::NDTFuserHMT_SE	typeref:typename:Eigen::Matrix<double,6,6>
getPoseInformation	src/se_ndt.cpp	/^Eigen::Matrix<double, 7,7> NDTMatch_SE::getPoseInformation(Eigen::Affine3d T, perception_oru::ND/;"	f	class:NDTMatch_SE	typeref:typename:Eigen::Matrix<double,7,7>
getPosition	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f getPosition() const {$/;"	f	class:NDTVizGlutFixedCamera	typeref:typename:Eigen::Vector3f
getPosition	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f getPosition() const {$/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:Eigen::Vector3f
getProtoType	oru_minimal/include/ndt_map/lazy_grid.h	/^    NDTCell* getProtoType()$/;"	f	class:perception_oru::LazyGrid	typeref:typename:NDTCell *
getPushedKey	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::getPushedKey() {$/;"	f	class:NDTVizGlut	typeref:typename:unsigned char
getQuantiles	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			float getQuantiles() const { return m_quantiles; }$/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:float
getRGB	oru_minimal/include/ndt_map/ndt_cell.h	/^  void getRGB(float &r, float &g, float &b)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
getSegmentsFast	src/se_ndt.cpp	/^vector<pcl::PointCloud<pcl::PointXYZ>::Ptr> NDTMatch_SE::getSegmentsFast(pcl::PointCloud<pcl::Po/;"	f	class:NDTMatch_SE	typeref:typename:vector<pcl::PointCloud<pcl::PointXYZ>::Ptr>
getSimilarity	src/ndt_histogram.cpp	/^  double NDTHistogram::getSimilarity(NDTHistogram &other)$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:double
getSimilarity	src/ndt_histogram.cpp	/^  double NDTHistogram::getSimilarity(NDTHistogram &other, Eigen::Transform<double,3,Eigen::Affin/;"	f	class:perception_oru::NDTHistogram	typeref:typename:double
getSmallestCellSizeInMeters	oru_minimal/include/ndt_map/ndt_map.h	/^  double getSmallestCellSizeInMeters() const$/;"	f	class:perception_oru::NDTMap	typeref:typename:double
getThat	src/big_cloud_test.cpp	/^std::vector<std::tuple<int,int,double,double,Eigen::Matrix4d> > getThat(string in_trans1, bool i/;"	f	typeref:typename:std::vector<std::tuple<int,int,double,double,Eigen::Matrix4d>>
getThat	src/ros_read_register.cpp	/^std::vector<std::tuple<int,int,double,double,Eigen::Matrix4d> > getThat(string in_trans1, bool i/;"	f	typeref:typename:std::vector<std::tuple<int,int,double,double,Eigen::Matrix4d>>
getThat	src/semanticRegister.cpp	/^std::vector<std::tuple<int,int,double,double,Eigen::Matrix4d> > getThat(string in_trans1, bool i/;"	f	typeref:typename:std::vector<std::tuple<int,int,double,double,Eigen::Matrix4d>>
getTransform	include/se_ndt/ndt_histogram.h	/^    double getTransform(size_t FIT_NUMBER, Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMaj/;"	f	class:perception_oru::NDTHistogram	typeref:typename:double
getTransform	oru_minimal/include/ndt_map/ndt_histogram.h	/^    double getTransform(size_t FIT_NUMBER, Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMaj/;"	f	class:lslgeneric::NDTHistogram	typeref:typename:double
getUpVector	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f getUpVector() const {$/;"	f	class:NDTVizGlutFixedCamera	typeref:typename:Eigen::Vector3f
getUpVector	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f getUpVector() const {$/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:Eigen::Vector3f
gl_ellipsoids	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	NDTVizGlutEllipsoids gl_ellipsoids;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlutEllipsoids
gl_grid	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^        NDTVizGlutSetOfLines gl_grid;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlutSetOfLines
gl_laserlines	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	NDTVizGlutSetOfLines gl_laserlines;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlutSetOfLines
gl_particles	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	NDTVizGlutPointCloudColor gl_particles;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlutPointCloudColor
gl_pathline	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^        NDTVizGlutSetOfLines gl_pathline;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlutSetOfLines
gl_pointcloud	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	NDTVizGlutPointCloudColor gl_pointcloud;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlutPointCloudColor
gl_points	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	NDTVizGlutPointCloudColor gl_points;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlutPointCloudColor
gl_polygonboundary	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^        NDTVizGlutSetOfLines gl_polygonboundary;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlutSetOfLines
glthread	oru_minimal/src/NDTVizGlut.cc	/^void * glthread(void * pParam)$/;"	f	typeref:typename:void *
glut3d_ptr	oru_minimal/src/NDTVizGlut.cc	/^static NDTVizGlut* glut3d_ptr = 0x0;$/;"	v	typeref:typename:NDTVizGlut *	file:
glut_event_processing_thread	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  pthread_t glut_event_processing_thread;$/;"	m	class:NDTVizGlut	typeref:typename:pthread_t
grid_	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    perception_oru::LazyGrid* grid_[3][3];$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:perception_oru::LazyGrid * [3][3]
grids_init	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    bool grids_init;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:bool
guessSize	oru_minimal/include/ndt_map/ndt_map.h	/^  void guessSize(float cenx, float ceny, float cenz, float sizex, float sizey, float sizez) {$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
guess_size_	oru_minimal/include/ndt_map/ndt_map.h	/^  bool guess_size_;$/;"	m	class:perception_oru::NDTMap	typeref:typename:bool
gui_pause	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  int gui_pause;$/;"	m	class:NDTVizGlut	typeref:typename:int
hasGaussian_	oru_minimal/include/ndt_map/ndt_cell.h	/^  bool hasGaussian_;	\/\/\/< indicates if the cell has a gaussian in it$/;"	m	class:perception_oru::NDTCell	typeref:typename:bool
help	build/Makefile	/^help:$/;"	t
histogramBinsFlat	include/se_ndt/ndt_histogram.h	/^      Eigen::MatrixXi histogramBinsFlat; \/\/\/< The flat (planar, according to the planarity th/;"	m	class:perception_oru::NDTHistogram	typeref:typename:Eigen::MatrixXi
histogramBinsFlat	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector<int> histogramBinsFlat;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:std::vector<int>
histogramBinsLine	include/se_ndt/ndt_histogram.h	/^      Eigen::MatrixXi histogramBinsLine; \/\/\/< The linear (according to the linearity threshol/;"	m	class:perception_oru::NDTHistogram	typeref:typename:Eigen::MatrixXi
histogramBinsLine	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector<int> histogramBinsLine;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:std::vector<int>
histogramBinsSphere	include/se_ndt/ndt_histogram.h	/^      Eigen::MatrixXi histogramBinsSphere; \/\/\/< The histogram bins that are not "linear" or "/;"	m	class:perception_oru::NDTHistogram	typeref:typename:Eigen::MatrixXi
histogramBinsSphere	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector<int> histogramBinsSphere;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:std::vector<int>
hists	include/se_ndt/se_ndt.hpp	/^        std::vector<perception_oru::NDTHistogram> hists;$/;"	m	class:NDTMatch_SE	typeref:typename:std::vector<perception_oru::NDTHistogram>
hmt_map_dir	include/se_ndt/ndt_fuser_hmt_se.h	/^		std::string hmt_map_dir;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:std::string
icov_	oru_minimal/include/ndt_map/ndt_cell.h	/^  Eigen::Matrix3d icov_;  \/\/\/ Precomputed inverse covariance (updated every time the cell is /;"	m	class:perception_oru::NDTCell	typeref:typename:Eigen::Matrix3d
icp	src/ros_receive_tf.cpp	/^        pcl::IterativeClosestPoint<pcl::PointXYZI,pcl::PointXYZI> icp;$/;"	m	class:RvizShow	typeref:typename:pcl::IterativeClosestPoint<pcl::PointXYZI,pcl::PointXYZI>	file:
icp	src/ros_register.cpp	/^        pcl::IterativeClosestPoint<pcl::PointXYZI,pcl::PointXYZI> icp;$/;"	m	class:Registration	typeref:typename:pcl::IterativeClosestPoint<pcl::PointXYZI,pcl::PointXYZI>	file:
icp	src/ros_register_d2d_ndt.cpp	/^        pcl::IterativeClosestPoint<pcl::PointXYZI,pcl::PointXYZI> icp;$/;"	m	class:Registration	typeref:typename:pcl::IterativeClosestPoint<pcl::PointXYZI,pcl::PointXYZI>	file:
ignore	include/se_ndt/ndt_fuser_hmt_se.h	/^		initializer_list<float> ignore,size;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:initializer_list<float>
inRange	oru_minimal/src/lazy_grid.cpp	/^bool LazyGrid::inRange(const pcl::PointXYZ& p)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:bool
incrementFlatBin	src/ndt_histogram.cpp	/^  void NDTHistogram::incrementFlatBin(Eigen::Vector3d &normal, double d, int c){$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:void
incrementLineBin	src/ndt_histogram.cpp	/^  void NDTHistogram::incrementLineBin(double d, int c){$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:void
incrementSphereBin	src/ndt_histogram.cpp	/^  void NDTHistogram::incrementSphereBin(double d, int c){$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:void
index_	oru_minimal/include/ndt_map/ndt_map.h	/^  SpatialIndex *index_;$/;"	m	class:perception_oru::NDTMap	typeref:typename:SpatialIndex *
index_	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    SpatialIndex *index_;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:SpatialIndex *
info_arch	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_dialect_default	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v	typeref:typename:const char *
info_language_dialect_default	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_platform	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
init	oru_minimal/src/ndt_matcher_d2d.cpp	/^void NDTMatcherD2D::init(bool _isIrregularGrid,$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:void
init	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^void NDTMatcherD2D_2D::init(bool _isIrregularGrid,$/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:void
init	oru_minimal/src/ndt_matcher_p2d.cpp	/^void NDTMatcherP2D::init(bool useDefaultGridResolutions, std::vector<double> _resolutions)$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:void
init	src/ndt_histogram.cpp	/^  void NDTHistogram::init         (int linear_classes,$/;"	f	class:perception_oru::NDTHistogram	typeref:typename:void
init	src/ndt_matcher_p2d_se.cpp	/^void NDTMatcherP2D_SE::init()$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:void
initKDTree	oru_minimal/src/cell_vector.cpp	/^void CellVector::initKDTree()$/;"	f	class:perception_oru::CellVector	typeref:typename:void
inited	include/se_ndt/ndt_histogram.h	/^    bool inited; \/\/\/< Whether the histogram is initialised or not.$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:bool
inited	oru_minimal/include/ndt_map/ndt_histogram.h	/^    bool inited;$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:bool
initialize	oru_minimal/include/ndt_map/lazy_grid.h	/^        void initialize(int x,int y,int z){$/;"	f	struct:perception_oru::LazyGrid::Darray	typeref:typename:void
initialize	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::initialize()$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
initialize	src/lazy_grid_improved.cpp	/^void LazyGrid::initialize()$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
initializeAll	src/lazy_grid_improved.cpp	/^void LazyGrid::initializeAll()$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
initializeGrids	oru_minimal/src/ndt_map_hmt.cpp	/^void NDTMapHMT::initializeGrids() {$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:void
initialized	oru_minimal/include/ndt_map/lazy_grid.h	/^    bool initialized=false;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:bool
insertCell	oru_minimal/src/lazy_grid.cpp	/^bool LazyGrid::insertCell(NDTCell cell){$/;"	f	class:perception_oru::LazyGrid	typeref:typename:bool
insertCell	oru_minimal/src/ndt_map.cpp	/^bool NDTMap::insertCell(NDTCell cell){$/;"	f	class:perception_oru::NDTMap	typeref:typename:bool
install	build/Makefile	/^install: preinstall$/;"	t
install/fast	build/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/local	build/Makefile	/^install\/local: preinstall$/;"	t
install/local/fast	build/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/strip	build/Makefile	/^install\/strip: preinstall$/;"	t
install/strip/fast	build/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
is3D	oru_minimal/include/ndt_map/ndt_map.h	/^  bool is3D;$/;"	m	class:perception_oru::NDTMap	typeref:typename:bool
is3D	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    bool is3D;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:bool
isEmpty	oru_minimal/include/ndt_map/ndt_cell.h	/^  char isEmpty;	\/\/\/<based on the most recent observation, is the cell seen empty (1), occupie/;"	m	class:perception_oru::NDTCell	typeref:typename:char
isFirstLoad_	oru_minimal/include/ndt_map/ndt_map.h	/^  bool isFirstLoad_;$/;"	m	class:perception_oru::NDTMap	typeref:typename:bool
isFirstLoad_	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    bool isFirstLoad_;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:bool
isInside	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline bool isInside(const pcl::PointXYZ pt) const$/;"	f	class:perception_oru::NDTCell	typeref:typename:bool
isIrregularGrid	include/se_ndt/ndt_matcher_p2d_se.h	/^    bool isIrregularGrid;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:bool
isIrregularGrid	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    bool isIrregularGrid;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
isIrregularGrid	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    bool isIrregularGrid;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:bool
isIrregularGrid	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    bool isIrregularGrid;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:bool
isOpen	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::isOpen() const {$/;"	f	class:NDTVizGlut	typeref:typename:bool
isValid	oru_minimal/src/lazy_grid.cpp	/^bool LazyGrid::isValid(const pcl::PointXYZ &p, NDTCell* cell)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:bool
iteration_counter_internal	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    int iteration_counter_internal;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:int
iteration_counter_internal	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    int iteration_counter_internal;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:int
jest04	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
jest04	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
jest05	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
jest05	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
jest13	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
jest13	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
jest14	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
jest14	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
jest15	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
jest15	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
jest23	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
jest23	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
jest24	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
jest24	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
jest25	include/se_ndt/ndt_matcher_p2d_se.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:Eigen::Vector3d
jest25	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    Eigen::Vector3d jest13, jest23, jest04, jest14, jest24, jest05, jest15, jest25;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:Eigen::Vector3d
keyHit	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::keyHit() const {$/;"	f	class:NDTVizGlut	typeref:typename:bool
keyHitReset	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::keyHitReset(){$/;"	f	class:NDTVizGlut	typeref:typename:void
laserCloud_c	include/se_ndt/ndt_fuser_hmt_se.h	/^		std::vector<pcl::PointCloud<pcl::PointXYZ>::Ptr >laserCloud_c;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:std::vector<pcl::PointCloud<pcl::PointXYZ>::Ptr>
last_button_	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  int last_button_;$/;"	m	class:NDTVizGlutXYOrbitCamera	typeref:typename:int
last_insert	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    Eigen::Vector3d last_insert;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:Eigen::Vector3d
last_loop_close_id	include/se_ndt/se_ndt.hpp	/^        int last_loop_close_id=0;$/;"	m	class:NDTMatch_SE	typeref:typename:int
last_loop_close_sim	include/se_ndt/se_ndt.hpp	/^        double last_loop_close_sim=0;$/;"	m	class:NDTMatch_SE	typeref:typename:double
last_point_	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector2i last_point_;$/;"	m	class:NDTVizGlutXYOrbitCamera	typeref:typename:Eigen::Vector2i
last_state_	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  int last_state_;$/;"	m	class:NDTVizGlutXYOrbitCamera	typeref:typename:int
lfd1	include/se_ndt/ndt_matcher_p2d_se.h	/^    double lfd1,lfd2;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:double
lfd1	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    double lfd1,lfd2;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:double
lfd1	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    double lfd1,lfd2;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:double
lfd1	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    double lfd1,lfd2;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:double
lfd2	include/se_ndt/ndt_matcher_p2d_se.h	/^    double lfd1,lfd2;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:double
lfd2	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    double lfd1,lfd2;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:double
lfd2	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    double lfd1,lfd2;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:double
lfd2	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    double lfd1,lfd2;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:double
line	include/se_ndt/file_loader.hpp	/^	string line = "";$/;"	v	typeref:typename:string
lineSearch2D	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^double NDTMatcherD2D_2D::lineSearch2D($/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:double
lineSearchMT	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::lineSearchMT($/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:double
lineSearchMT	oru_minimal/src/ndt_matcher_p2d.cpp	/^double NDTMatcherP2D::lineSearchMT(  Eigen::Matrix<double,6,1> &score_gradient_init,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:double
lineSearchMT	src/ndt_matcher_d2d_se.cpp	/^double NDTMatcherD2D_SE::lineSearchMT($/;"	f	class:perception_oru::NDTMatcherD2D_SE	typeref:typename:double
lineSearchMT	src/ndt_matcher_p2d_se.cpp	/^double NDTMatcherP2D_SE::lineSearchMT(  Eigen::Matrix<double,6,1> &score_gradient_init,$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:double
lines	build/atomic_configure/_setup_util.py	/^        lines = []$/;"	v
lines	build/catkin_generated/installspace/_setup_util.py	/^        lines = []$/;"	v
lines	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^        lines = []$/;"	v
lines	build/devel/_setup_util.py	/^        lines = []$/;"	v
lines	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  std::vector<NDTVizGlutLine> lines;$/;"	m	class:NDTVizGlutSetOfLines	typeref:typename:std::vector<NDTVizGlutLine>
list_install_components	build/Makefile	/^list_install_components:$/;"	t
list_install_components/fast	build/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
load	oru_minimal/include/ndt_map/lazy_grid.h	/^    void load(Archive & ar, const unsigned int version) {$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
loadCells	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::loadCells(int index_start, int index_end)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
loadFrom	oru_minimal/src/ndt_map_hmt.cpp	/^int NDTMapHMT::loadFrom()$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:int
loadFromJFF	oru_minimal/include/ndt_map/spatial_index.h	/^    virtual int loadFromJFF(FILE * jffin) const$/;"	f	class:perception_oru::SpatialIndex	typeref:typename:int
loadFromJFF	oru_minimal/src/cell_vector.cpp	/^int CellVector::loadFromJFF(FILE * jffin)$/;"	f	class:perception_oru::CellVector	typeref:typename:int
loadFromJFF	oru_minimal/src/lazy_grid.cpp	/^int LazyGrid::loadFromJFF(FILE * jffin)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:int
loadFromJFF	oru_minimal/src/ndt_cell.cpp	/^int NDTCell::loadFromJFF(FILE * jffin)$/;"	f	class:perception_oru::NDTCell	typeref:typename:int
loadFromJFF	oru_minimal/src/ndt_map.cpp	/^int NDTMap::loadFromJFF(FILE * jffin)$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
loadFromJFF	oru_minimal/src/ndt_map.cpp	/^int NDTMap::loadFromJFF(const char* filename)$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
loadFromJFF	src/lazy_grid_improved.cpp	/^int LazyGrid::loadFromJFF(FILE * jffin)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:int
loadJFFEventData	oru_minimal/src/ndt_cell.cpp	/^int NDTCell::loadJFFEventData(FILE * jffin, TEventData &evdata)$/;"	f	class:perception_oru::NDTCell	typeref:typename:int
loadJFFMatrix	oru_minimal/src/ndt_cell.cpp	/^int NDTCell::loadJFFMatrix(FILE * jffin, Eigen::Matrix3d &mat)$/;"	f	class:perception_oru::NDTCell	typeref:typename:int
loadJFFVector	oru_minimal/src/ndt_cell.cpp	/^int NDTCell::loadJFFVector(FILE * jffin, Eigen::Vector3d &vec)$/;"	f	class:perception_oru::NDTCell	typeref:typename:int
loadMap	src/se_ndt.cpp	/^void NDTMatch_SE::loadMap(perception_oru::NDTMap **map,std::vector<pcl::PointCloud<pcl::PointXYZ/;"	f	class:NDTMatch_SE	typeref:typename:void
loadPointCloud	oru_minimal/src/ndt_map.cpp	/^void NDTMap::loadPointCloud(const pcl::PointCloud<pcl::PointXYZ> &pc, const std::vector<std::vec/;"	f	class:perception_oru::NDTMap	typeref:typename:void
loadPointCloud	oru_minimal/src/ndt_map.cpp	/^void NDTMap::loadPointCloud(const pcl::PointCloud<pcl::PointXYZ> &pc, double range_limit)$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
loadPointCloud	oru_minimal/src/ndt_map_hmt.cpp	/^void NDTMapHMT::loadPointCloud(const pcl::PointCloud<pcl::PointXYZ> &pc, double range_limit)$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:void
loadPointCloudCentroid	oru_minimal/src/ndt_map.cpp	/^void NDTMap::loadPointCloudCentroid(const pcl::PointCloud<pcl::PointXYZ> &pc, const Eigen::Vecto/;"	f	class:perception_oru::NDTMap	typeref:typename:void
loadSaved	oru_minimal/include/ndt_map/ndt_map.h	/^  void loadSaved(int start, int stop,pcl::PointXYZL &pose)$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
loadSavedMap	src/se_ndt.cpp	/^perception_oru::NDTMap** NDTMatch_SE::loadSavedMap(int index)$/;"	f	class:NDTMatch_SE	typeref:typename:perception_oru::NDTMap **
load_pose	src/loader_test.cpp	/^        void load_pose(int start_index, int stop_index, double* poseD)$/;"	f	class:MapLoader	typeref:typename:void	file:
localMapSize	include/se_ndt/ndt_fuser_hmt_se.h	/^	Eigen::Vector3d localMapSize;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:Eigen::Vector3d
lslgeneric	oru_minimal/include/ndt_map/ndt_histogram.h	/^namespace lslgeneric{$/;"	n
lslgeneric	oru_minimal/include/ndt_registration/ndt_matcher_d2d_feature.h	/^namespace lslgeneric$/;"	n
lslgeneric	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^namespace lslgeneric$/;"	n
lslgeneric	oru_minimal/src/ndt_map_hmt.cpp	/^namespace lslgeneric$/;"	n	file:
lslgeneric	oru_minimal/src/ndt_matcher_p2d.cpp	/^namespace lslgeneric$/;"	n	file:
lslgeneric	src/lazy_grid_improved.cpp	/^namespace lslgeneric$/;"	n	file:
m_2D_segments	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			unsigned int	m_2D_segments;	\/\/!< The number of segments of a 2D ellipse (default=20)$/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:unsigned int
m_3D_segments	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			unsigned int	m_3D_segments;	\/\/!< The number of segments of a 3D ellipse (in both "axis") (d/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:unsigned int
m_3D_segments	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  int m_3D_segments;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:int
m_antiAliasing	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  bool m_antiAliasing;$/;"	m	class:NDTVizGlutSetOfLines	typeref:typename:bool
m_color	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutColor4f m_color;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:NDTVizGlutColor4f
m_color	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutColor4f m_color;$/;"	m	class:NDTVizGlutSetOfLines	typeref:typename:NDTVizGlutColor4f
m_cov	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			math::CMatrixD	m_cov;		\/\/!< The 2x2 or 3x3 covariance matrix that will determine the aspect/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:math::CMatrixD
m_cov	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Matrix3d m_cov, m_prevComputedCov, m_eigVal, m_eigVec;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:Eigen::Matrix3d
m_drawSolid3D	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			bool			m_drawSolid3D;	\/\/!< If set to true (default), a whole ellipsoid surface will be draw/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:bool
m_drawSolid3D	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  bool m_drawSolid3D;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:bool
m_eigVal	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			math::CMatrixD		m_eigVal,m_eigVec,m_prevComputedCov;$/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:math::CMatrixD
m_eigVal	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Matrix3d m_cov, m_prevComputedCov, m_eigVal, m_eigVec;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:Eigen::Matrix3d
m_eigVec	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			math::CMatrixD		m_eigVal,m_eigVec,m_prevComputedCov;$/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:math::CMatrixD
m_eigVec	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Matrix3d m_cov, m_prevComputedCov, m_eigVal, m_eigVec;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:Eigen::Matrix3d
m_lineWidth	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			float			m_lineWidth;	\/\/!< The line width for 2D ellipses or 3D wireframe ellipsoids (defaul/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:float
m_lineWidth	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float m_lineWidth;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:float
m_lineWidth	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float m_lineWidth;$/;"	m	class:NDTVizGlutSetOfLines	typeref:typename:float
m_mean	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3d m_mean;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:Eigen::Vector3d
m_pointSize	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float m_pointSize;$/;"	m	class:NDTVizGlutPointCloudColor	typeref:typename:float
m_pointSize	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float m_pointSize;$/;"	m	class:NDTVizGlutSetOfLines	typeref:typename:float
m_prevComputedCov	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			math::CMatrixD		m_eigVal,m_eigVec,m_prevComputedCov;$/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:math::CMatrixD
m_prevComputedCov	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Matrix3d m_cov, m_prevComputedCov, m_eigVal, m_eigVec;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:Eigen::Matrix3d
m_quantiles	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			float			m_quantiles;	\/\/!< The number of "sigmas" for drawing the ellipse\/ellipsoid (defaul/;"	m	class:mrpt::opengl::CMyEllipsoid	typeref:typename:float
m_quantiles	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float m_quantiles;$/;"	m	class:NDTVizGlutEllipsoid	typeref:typename:float
m_thickness	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float m_thickness;$/;"	m	class:NDTVizGlutSetOfLines	typeref:typename:float
main	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	build/CMakeFiles/FindOpenMP/OpenMPCheckVersion.c	/^int main(void)$/;"	f	typeref:typename:int
main	build/CMakeFiles/FindOpenMP/OpenMPCheckVersion.cpp	/^int main(void)$/;"	f	typeref:typename:int
main	build/CMakeFiles/FindOpenMP/OpenMPTryFlag.c	/^int main(void) {$/;"	f	typeref:typename:int
main	build/CMakeFiles/FindOpenMP/OpenMPTryFlag.cpp	/^int main(void) {$/;"	f	typeref:typename:int
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	oru_minimal/src/ndt_viewer.cc	/^int main(int argc, char **argv){$/;"	f	typeref:typename:int
main	src/big_cloud_test.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/loader_test.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/ros_read_register.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/ros_receive_tf.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/ros_register.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/ros_register_d2d_ndt.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/semanticRegister.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	src/simple_registration.cpp	/^int main(int argc,char** argv)$/;"	f	typeref:typename:int
makeFolder	oru_minimal/src/lazy_grid.cpp	/^void makeFolder(std::string path){$/;"	f	namespace:perception_oru	typeref:typename:void
make_array	oru_minimal/include/ndt_map/ndt_cell.h	/^    ar & boost::serialization::make_array(cov_.data(), 9);$/;"	m	class:perception_oru::NDTCell::serialize::boost::serialization	typeref:typename:ar &	file:
make_array	oru_minimal/include/ndt_map/ndt_cell.h	/^    ar & boost::serialization::make_array(evals_.data(), 3 );$/;"	m	class:perception_oru::NDTCell::serialize::boost::serialization	typeref:typename:ar &	file:
make_array	oru_minimal/include/ndt_map/ndt_cell.h	/^    ar & boost::serialization::make_array(evecs_.data(), 9);$/;"	m	class:perception_oru::NDTCell::serialize::boost::serialization	typeref:typename:ar &	file:
make_array	oru_minimal/include/ndt_map/ndt_cell.h	/^    ar & boost::serialization::make_array(icov_.data(), 9);$/;"	m	class:perception_oru::NDTCell::serialize::boost::serialization	typeref:typename:ar &	file:
make_array	oru_minimal/include/ndt_map/ndt_cell.h	/^    ar & boost::serialization::make_array(mean_.data(), 3 );$/;"	m	class:perception_oru::NDTCell::serialize::boost::serialization	typeref:typename:ar &	file:
map	include/se_ndt/ndt_fuser_hmt_se.h	/^		perception_oru::NDTMap ***map;		 \/\/\/< da map$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:perception_oru::NDTMap ***
map	include/se_ndt/se_ndt.hpp	/^		perception_oru::NDTMap ***map;$/;"	m	class:NDTMatch_SE	typeref:typename:perception_oru::NDTMap ***
mapLocal	include/se_ndt/ndt_fuser_hmt_se.h	/^		perception_oru::NDTMap ***mapLocal;		 \/\/\/< da map$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:perception_oru::NDTMap ***
mapLocal	include/se_ndt/se_ndt.hpp	/^		perception_oru::NDTMap ***mapLocal;$/;"	m	class:NDTMatch_SE	typeref:typename:perception_oru::NDTMap ***
mapLocal_prev	include/se_ndt/se_ndt.hpp	/^		perception_oru::NDTMap ***mapLocal_prev;$/;"	m	class:NDTMatch_SE	typeref:typename:perception_oru::NDTMap ***
mapUpdate	src/se_ndt.cpp	/^Eigen::Affine3d NDTMatch_SE::mapUpdate(pcl::PointCloud<pcl::PointXYZI>::Ptr cloud, bool Does_not/;"	f	class:NDTMatch_SE	typeref:typename:Eigen::Affine3d
map_sizex	oru_minimal/include/ndt_map/ndt_map.h	/^  float map_sizex;$/;"	m	class:perception_oru::NDTMap	typeref:typename:float
map_sizex	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    float map_sizex;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:float
map_sizey	oru_minimal/include/ndt_map/ndt_map.h	/^  float map_sizey;$/;"	m	class:perception_oru::NDTMap	typeref:typename:float
map_sizey	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    float map_sizey;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:float
map_sizez	oru_minimal/include/ndt_map/ndt_map.h	/^  float map_sizez;$/;"	m	class:perception_oru::NDTMap	typeref:typename:float
map_sizez	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    float map_sizez;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:float
marker_pub	include/rviz_ndt.h	/^    std::vector<ros::Publisher> marker_pub;$/;"	m	class:ndt_rviz	typeref:typename:std::vector<ros::Publisher>
match	oru_minimal/src/ndt_matcher_d2d.cpp	/^bool NDTMatcherD2D::match( NDTMap& targetNDT,$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
match	oru_minimal/src/ndt_matcher_d2d.cpp	/^bool NDTMatcherD2D::match( pcl::PointCloud<pcl::PointXYZ>& target,$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
match	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^bool NDTMatcherD2D_2D::match( NDTMap& targetNDT,$/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:bool
match	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^bool NDTMatcherD2D_2D::match( pcl::PointCloud<pcl::PointXYZ>& target,$/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:bool
match	oru_minimal/src/ndt_matcher_p2d.cpp	/^bool NDTMatcherP2D::match( NDTMap& targetNDT,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:bool
match	oru_minimal/src/ndt_matcher_p2d.cpp	/^bool NDTMatcherP2D::match( pcl::PointCloud<pcl::PointXYZ>& target,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:bool
match	src/ndt_fuser_hmt_se.cpp	/^Eigen::Affine3d NDTFuserHMT_SE::match(Eigen::Affine3d Tmotion, pcl::PointCloud<pcl::PointXYZ>::P/;"	f	class:perception_oru::NDTFuserHMT_SE	typeref:typename:Eigen::Affine3d
match	src/ndt_matcher_d2d_se.cpp	/^bool NDTMatcherD2D_SE::match( NDTMap **targetNDT,$/;"	f	class:perception_oru::NDTMatcherD2D_SE	typeref:typename:bool
match	src/ndt_matcher_p2d_se.cpp	/^bool NDTMatcherP2D_SE::match( NDTMap **targetNDT,$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:bool
matchFaster	src/se_ndt.cpp	/^Eigen::Affine3d NDTMatch_SE::matchFaster(Eigen::Affine3d Tinit, pcl::PointCloud<pcl::PointXYZI>:/;"	f	class:NDTMatch_SE	typeref:typename:Eigen::Affine3d
matchFaster	src/se_ndt.cpp	/^Eigen::Affine3d NDTMatch_SE::matchFaster(pcl::PointCloud<pcl::PointXYZI>::Ptr cloud)$/;"	f	class:NDTMatch_SE	typeref:typename:Eigen::Affine3d
matchFaster_OM	src/se_ndt.cpp	/^Eigen::Affine3d NDTMatch_SE::matchFaster_OM(Eigen::Affine3d Tinit, pcl::PointCloud<pcl::PointXYZ/;"	f	class:NDTMatch_SE	typeref:typename:Eigen::Affine3d
matchToSaved	src/se_ndt.cpp	/^bool NDTMatch_SE::matchToSaved(Eigen::Affine3d &Td_, pcl::PointXYZL &pose_end, pcl::PointXYZL &p/;"	f	class:NDTMatch_SE	typeref:typename:bool
matcher	include/se_ndt/ndt_fuser_hmt_se.h	/^	perception_oru::NDTMatcherD2D_SE matcher;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:perception_oru::NDTMatcherD2D_SE
matcher	include/se_ndt/se_ndt.hpp	/^		perception_oru::NDTMatcherD2D_SE matcher;$/;"	m	class:NDTMatch_SE	typeref:typename:perception_oru::NDTMatcherD2D_SE
matcher	src/loader_test.cpp	/^        NDTMatch_SE matcher;$/;"	m	class:MapLoader	typeref:typename:NDTMatch_SE	file:
matcher	src/ros_register.cpp	/^        static NDTMatch_SE matcher;$/;"	m	class:Registration	typeref:typename:NDTMatch_SE	file:
matcher	src/ros_register.cpp	/^NDTMatch_SE Registration::matcher = NDTMatch_SE(8);$/;"	m	class:Registration	typeref:typename:NDTMatch_SE
matcher	src/ros_register_d2d_ndt.cpp	/^        NDTMatch_SE matcher;$/;"	m	class:Registration	typeref:typename:NDTMatch_SE	file:
matcher2D	include/se_ndt/ndt_fuser_hmt_se.h	/^	perception_oru::NDTMatcherD2D_2D matcher2D;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:perception_oru::NDTMatcherD2D_2D
max	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::MoreThuente::max(double a, double b)$/;"	f	class:perception_oru::NDTMatcherD2D::MoreThuente	typeref:typename:double
max	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^double NDTMatcherD2D_2D::MoreThuente::max(double a, double b)$/;"	f	class:perception_oru::NDTMatcherD2D_2D::MoreThuente	typeref:typename:double
max	oru_minimal/src/ndt_matcher_p2d.cpp	/^double NDTMatcherP2D::MoreThuente::max(double a, double b)$/;"	f	class:lslgeneric::NDTMatcherP2D::MoreThuente	typeref:typename:double
max	src/ndt_matcher_p2d_se.cpp	/^double NDTMatcherP2D_SE::MoreThuente::max(double a, double b)$/;"	f	class:perception_oru::NDTMatcherP2D_SE::MoreThuente	typeref:typename:double
max_occu_	oru_minimal/include/ndt_map/ndt_cell.h	/^  float max_occu_;$/;"	m	class:perception_oru::NDTCell	typeref:typename:float
max_range_	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    double max_range_;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:double
max_rotation_norm	include/se_ndt/ndt_fuser_hmt_se.h	/^		double max_translation_norm, max_rotation_norm;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:double
max_size	include/se_ndt/se_ndt.hpp	/^        float max_size;$/;"	m	class:NDTMatch_SE	typeref:typename:float
max_translation_norm	include/se_ndt/ndt_fuser_hmt_se.h	/^		double max_translation_norm, max_rotation_norm;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:double
mean_	oru_minimal/include/ndt_map/ndt_cell.h	/^  Eigen::Vector3d mean_;  \/\/\/ Mean of the normal distribution$/;"	m	class:perception_oru::NDTCell	typeref:typename:Eigen::Vector3d
meansTree	oru_minimal/include/ndt_map/cell_vector.h	/^    pcl::KdTreeFLANN<pcl::PointXYZ> meansTree;$/;"	m	class:perception_oru::CellVector	typeref:typename:pcl::KdTreeFLANN<pcl::PointXYZ>
min	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::MoreThuente::min(double a, double b)$/;"	f	class:perception_oru::NDTMatcherD2D::MoreThuente	typeref:typename:double
min	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^double NDTMatcherD2D_2D::MoreThuente::min(double a, double b)$/;"	f	class:perception_oru::NDTMatcherD2D_2D::MoreThuente	typeref:typename:double
min	oru_minimal/src/ndt_matcher_p2d.cpp	/^double NDTMatcherP2D::MoreThuente::min(double a, double b)$/;"	f	class:lslgeneric::NDTMatcherP2D::MoreThuente	typeref:typename:double
min	src/ndt_matcher_p2d_se.cpp	/^double NDTMatcherP2D_SE::MoreThuente::min(double a, double b)$/;"	f	class:perception_oru::NDTMatcherP2D_SE::MoreThuente	typeref:typename:double
mode	build/catkin_generated/generate_cached_setup.py	/^mode = os.stat(output_filename).st_mode$/;"	v
motion_blur_frames	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  int motion_blur_frames;$/;"	m	class:NDTVizGlut	typeref:typename:int
mp	oru_minimal/include/ndt_map/cell_vector.h	/^    typename pcl::KdTree<pcl::PointXYZ>::PointCloudPtr mp;$/;"	m	class:perception_oru::CellVector	typeref:typename:pcl::KdTree<pcl::PointXYZ>::PointCloudPtr
mrpt	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^namespace mrpt$/;"	n
my_directory	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    std::string my_directory;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:std::string
n_neighbours	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    int n_neighbours;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:int
n_neighbours	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    int n_neighbours;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:int
n_threads	src/ndt_matcher_p2d_se.cpp	/^#define n_threads /;"	d	file:
n_threads	src/semanticRegister.cpp	/^#define n_threads /;"	d	file:
nb_match_calls	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    int nb_match_calls;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:int
nb_success_reg	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    int nb_success_reg;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:int
ndt_libs	CMakeLists.txt	/^add_library(ndt_libs ${NDT_LIB_SRCS})$/;"	t
ndt_libs	build/Makefile	/^ndt_libs: cmake_check_build_system$/;"	t
ndt_libs/fast	build/Makefile	/^ndt_libs\/fast:$/;"	t
ndt_rviz	include/rviz_ndt.h	/^    ndt_rviz(ros::NodeHandle &n, int n_res, std::string prefix = "vm_res"):dur()$/;"	f	class:ndt_rviz
ndt_rviz	include/rviz_ndt.h	/^class ndt_rviz{$/;"	c
nodelet_generate_messages_cpp	build/Makefile	/^nodelet_generate_messages_cpp: cmake_check_build_system$/;"	t
nodelet_generate_messages_cpp/fast	build/Makefile	/^nodelet_generate_messages_cpp\/fast:$/;"	t
nodelet_generate_messages_eus	build/Makefile	/^nodelet_generate_messages_eus: cmake_check_build_system$/;"	t
nodelet_generate_messages_eus/fast	build/Makefile	/^nodelet_generate_messages_eus\/fast:$/;"	t
nodelet_generate_messages_lisp	build/Makefile	/^nodelet_generate_messages_lisp: cmake_check_build_system$/;"	t
nodelet_generate_messages_lisp/fast	build/Makefile	/^nodelet_generate_messages_lisp\/fast:$/;"	t
nodelet_generate_messages_nodejs	build/Makefile	/^nodelet_generate_messages_nodejs: cmake_check_build_system$/;"	t
nodelet_generate_messages_nodejs/fast	build/Makefile	/^nodelet_generate_messages_nodejs\/fast:$/;"	t
nodelet_generate_messages_py	build/Makefile	/^nodelet_generate_messages_py: cmake_check_build_system$/;"	t
nodelet_generate_messages_py/fast	build/Makefile	/^nodelet_generate_messages_py\/fast:$/;"	t
nodelet_topic_tools_gencfg	build/Makefile	/^nodelet_topic_tools_gencfg: cmake_check_build_system$/;"	t
nodelet_topic_tools_gencfg/fast	build/Makefile	/^nodelet_topic_tools_gencfg\/fast:$/;"	t
normalizeAngle	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::normalizeAngle(double a)$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:double
normalizeAngle	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^double NDTMatcherD2D_2D::normalizeAngle(double a)$/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:double
normalizeAngle	oru_minimal/src/ndt_matcher_p2d.cpp	/^double NDTMatcherP2D::normalizeAngle(double a)$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:double
normalizeAngle	src/ndt_matcher_p2d_se.cpp	/^double NDTMatcherP2D_SE::normalizeAngle(double a)$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:double
normalizeProb	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    void normalizeProb(float &p)$/;"	f	struct:TEventData	typeref:typename:void
numActive	oru_minimal/include/ndt_map/ndt_map.h	/^    int numActive()$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
num_clouds	include/se_ndt/se_ndt.hpp	/^        unsigned int num_clouds=0;$/;"	m	class:NDTMatch_SE	typeref:typename:unsigned int
numberOfActiveCells	oru_minimal/src/ndt_map.cpp	/^int NDTMap::numberOfActiveCells() const $/;"	f	class:perception_oru::NDTMap	typeref:typename:int
numberOfActiveCells	oru_minimal/src/ndt_map.cpp	/^int NDTMap::numberOfActiveCells()$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
numberOfActiveCells	oru_minimal/src/ndt_map_hmt.cpp	/^int NDTMapHMT::numberOfActiveCells()$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:int
numreg	src/ros_receive_tf.cpp	/^        int numreg=0;$/;"	m	class:RvizShow	typeref:typename:int	file:
numreg	src/ros_register_d2d_ndt.cpp	/^        int numreg=0;$/;"	m	class:Registration	typeref:typename:int	file:
objects	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  std::vector<NDTVizGlutObject*> objects;$/;"	m	class:NDTVizGlut	typeref:typename:std::vector<NDTVizGlutObject * >
objs	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  std::vector<NDTVizGlutEllipsoid, Eigen::aligned_allocator<NDTVizGlutEllipsoid> > objs;$/;"	m	class:NDTVizGlutEllipsoids	typeref:typename:std::vector<NDTVizGlutEllipsoid,Eigen::aligned_allocator<NDTVizGlutEllipsoid>>
occ	oru_minimal/include/ndt_map/ndt_cell.h	/^  float occ;   			\/\/\/Occupancy value stored as "Log odds" (if you wish)$/;"	m	class:perception_oru::NDTCell	typeref:typename:float
occupancy	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^    float occupancy;$/;"	m	class:NDTVizGlutText	typeref:typename:float
occval	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    uint8_t 	occval; 			\/\/\/<Occupancy value$/;"	m	struct:TEventData	typeref:typename:uint8_t
ompver_str	build/CMakeFiles/FindOpenMP/OpenMPCheckVersion.c	/^const char ompver_str[] = { 'I', 'N', 'F', 'O', ':', 'O', 'p', 'e', 'n', 'M',$/;"	v	typeref:typename:const char[]
ompver_str	build/CMakeFiles/FindOpenMP/OpenMPCheckVersion.cpp	/^const char ompver_str[] = { 'I', 'N', 'F', 'O', ':', 'O', 'p', 'e', 'n', 'M',$/;"	v	typeref:typename:const char[]
open	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  bool open;$/;"	m	class:NDTVizGlut	typeref:typename:bool
opengl	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^	namespace opengl$/;"	n	namespace:mrpt
opengl_CMyEllipsoid_H	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^#define opengl_CMyEllipsoid_H$/;"	d
opengl_internals_H	oru_minimal/include/ndt_visualisation/opengl_internals.h	/^#define opengl_internals_H$/;"	d
operator ()	oru_minimal/include/ndt_map/lazy_grid.h	/^        NDTCell* operator()(int x, int y, int z)$/;"	f	struct:perception_oru::LazyGrid::Darray	typeref:typename:NDTCell *
operator ()	src/big_cloud_test.cpp	/^	bool operator()(T const &t1, T const &t2)$/;"	f	struct:TupleCompare	typeref:typename:bool	file:
operator ()	src/ros_read_register.cpp	/^	bool operator()(T const &t1, T const &t2)$/;"	f	struct:TupleCompare	typeref:typename:bool	file:
operator ()	src/semanticRegister.cpp	/^	bool operator()(T const &t1, T const &t2)$/;"	f	struct:TupleCompare	typeref:typename:bool	file:
operator =	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    const TEventData &operator =(const TEventData &copy)$/;"	f	struct:TEventData	typeref:typename:const TEventData &
orbit_camera	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  NDTVizGlutXYOrbitCamera orbit_camera;$/;"	m	class:NDTVizGlut	typeref:typename:NDTVizGlutXYOrbitCamera
oru_minimal/src/cell_vector.cpp.i	build/Makefile	/^oru_minimal\/src\/cell_vector.cpp.i:$/;"	t
oru_minimal/src/cell_vector.cpp.o	build/Makefile	/^oru_minimal\/src\/cell_vector.cpp.o:$/;"	t
oru_minimal/src/cell_vector.cpp.s	build/Makefile	/^oru_minimal\/src\/cell_vector.cpp.s:$/;"	t
oru_minimal/src/cell_vector.i	build/Makefile	/^oru_minimal\/src\/cell_vector.i: oru_minimal\/src\/cell_vector.cpp.i$/;"	t
oru_minimal/src/cell_vector.o	build/Makefile	/^oru_minimal\/src\/cell_vector.o: oru_minimal\/src\/cell_vector.cpp.o$/;"	t
oru_minimal/src/cell_vector.s	build/Makefile	/^oru_minimal\/src\/cell_vector.s: oru_minimal\/src\/cell_vector.cpp.s$/;"	t
oru_minimal/src/lazy_grid.cpp.i	build/Makefile	/^oru_minimal\/src\/lazy_grid.cpp.i:$/;"	t
oru_minimal/src/lazy_grid.cpp.o	build/Makefile	/^oru_minimal\/src\/lazy_grid.cpp.o:$/;"	t
oru_minimal/src/lazy_grid.cpp.s	build/Makefile	/^oru_minimal\/src\/lazy_grid.cpp.s:$/;"	t
oru_minimal/src/lazy_grid.i	build/Makefile	/^oru_minimal\/src\/lazy_grid.i: oru_minimal\/src\/lazy_grid.cpp.i$/;"	t
oru_minimal/src/lazy_grid.o	build/Makefile	/^oru_minimal\/src\/lazy_grid.o: oru_minimal\/src\/lazy_grid.cpp.o$/;"	t
oru_minimal/src/lazy_grid.s	build/Makefile	/^oru_minimal\/src\/lazy_grid.s: oru_minimal\/src\/lazy_grid.cpp.s$/;"	t
oru_minimal/src/ndt_cell.cpp.i	build/Makefile	/^oru_minimal\/src\/ndt_cell.cpp.i:$/;"	t
oru_minimal/src/ndt_cell.cpp.o	build/Makefile	/^oru_minimal\/src\/ndt_cell.cpp.o:$/;"	t
oru_minimal/src/ndt_cell.cpp.s	build/Makefile	/^oru_minimal\/src\/ndt_cell.cpp.s:$/;"	t
oru_minimal/src/ndt_cell.i	build/Makefile	/^oru_minimal\/src\/ndt_cell.i: oru_minimal\/src\/ndt_cell.cpp.i$/;"	t
oru_minimal/src/ndt_cell.o	build/Makefile	/^oru_minimal\/src\/ndt_cell.o: oru_minimal\/src\/ndt_cell.cpp.o$/;"	t
oru_minimal/src/ndt_cell.s	build/Makefile	/^oru_minimal\/src\/ndt_cell.s: oru_minimal\/src\/ndt_cell.cpp.s$/;"	t
oru_minimal/src/ndt_map.cpp.i	build/Makefile	/^oru_minimal\/src\/ndt_map.cpp.i:$/;"	t
oru_minimal/src/ndt_map.cpp.o	build/Makefile	/^oru_minimal\/src\/ndt_map.cpp.o:$/;"	t
oru_minimal/src/ndt_map.cpp.s	build/Makefile	/^oru_minimal\/src\/ndt_map.cpp.s:$/;"	t
oru_minimal/src/ndt_map.i	build/Makefile	/^oru_minimal\/src\/ndt_map.i: oru_minimal\/src\/ndt_map.cpp.i$/;"	t
oru_minimal/src/ndt_map.o	build/Makefile	/^oru_minimal\/src\/ndt_map.o: oru_minimal\/src\/ndt_map.cpp.o$/;"	t
oru_minimal/src/ndt_map.s	build/Makefile	/^oru_minimal\/src\/ndt_map.s: oru_minimal\/src\/ndt_map.cpp.s$/;"	t
oru_minimal/src/ndt_matcher_d2d.cpp.i	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d.cpp.i:$/;"	t
oru_minimal/src/ndt_matcher_d2d.cpp.o	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d.cpp.o:$/;"	t
oru_minimal/src/ndt_matcher_d2d.cpp.s	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d.cpp.s:$/;"	t
oru_minimal/src/ndt_matcher_d2d.i	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d.i: oru_minimal\/src\/ndt_matcher_d2d.cpp.i$/;"	t
oru_minimal/src/ndt_matcher_d2d.o	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d.o: oru_minimal\/src\/ndt_matcher_d2d.cpp.o$/;"	t
oru_minimal/src/ndt_matcher_d2d.s	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d.s: oru_minimal\/src\/ndt_matcher_d2d.cpp.s$/;"	t
oru_minimal/src/ndt_matcher_d2d_2d.cpp.i	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d_2d.cpp.i:$/;"	t
oru_minimal/src/ndt_matcher_d2d_2d.cpp.o	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d_2d.cpp.o:$/;"	t
oru_minimal/src/ndt_matcher_d2d_2d.cpp.s	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d_2d.cpp.s:$/;"	t
oru_minimal/src/ndt_matcher_d2d_2d.i	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d_2d.i: oru_minimal\/src\/ndt_matcher_d2d_2d.cpp.i$/;"	t
oru_minimal/src/ndt_matcher_d2d_2d.o	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d_2d.o: oru_minimal\/src\/ndt_matcher_d2d_2d.cpp.o$/;"	t
oru_minimal/src/ndt_matcher_d2d_2d.s	build/Makefile	/^oru_minimal\/src\/ndt_matcher_d2d_2d.s: oru_minimal\/src\/ndt_matcher_d2d_2d.cpp.s$/;"	t
output_filename	build/catkin_generated/generate_cached_setup.py	/^output_filename = '\/home\/anestis\/workspace\/se_ndt\/build\/catkin_generated\/setup_cached.sh'$/;"	v
parametersSet_	oru_minimal/include/ndt_map/ndt_cell.h	/^  static bool parametersSet_;													\/\/ ???$/;"	m	class:perception_oru::NDTCell	typeref:typename:bool
parametersSet_	oru_minimal/src/ndt_cell.cpp	/^bool NDTCell::parametersSet_ = false;$/;"	m	class:perception_oru::NDTCell	typeref:typename:bool
pcl_msgs_generate_messages_cpp	build/Makefile	/^pcl_msgs_generate_messages_cpp: cmake_check_build_system$/;"	t
pcl_msgs_generate_messages_cpp/fast	build/Makefile	/^pcl_msgs_generate_messages_cpp\/fast:$/;"	t
pcl_msgs_generate_messages_eus	build/Makefile	/^pcl_msgs_generate_messages_eus: cmake_check_build_system$/;"	t
pcl_msgs_generate_messages_eus/fast	build/Makefile	/^pcl_msgs_generate_messages_eus\/fast:$/;"	t
pcl_msgs_generate_messages_lisp	build/Makefile	/^pcl_msgs_generate_messages_lisp: cmake_check_build_system$/;"	t
pcl_msgs_generate_messages_lisp/fast	build/Makefile	/^pcl_msgs_generate_messages_lisp\/fast:$/;"	t
pcl_msgs_generate_messages_nodejs	build/Makefile	/^pcl_msgs_generate_messages_nodejs: cmake_check_build_system$/;"	t
pcl_msgs_generate_messages_nodejs/fast	build/Makefile	/^pcl_msgs_generate_messages_nodejs\/fast:$/;"	t
pcl_msgs_generate_messages_py	build/Makefile	/^pcl_msgs_generate_messages_py: cmake_check_build_system$/;"	t
pcl_msgs_generate_messages_py/fast	build/Makefile	/^pcl_msgs_generate_messages_py\/fast:$/;"	t
pcl_ros_gencfg	build/Makefile	/^pcl_ros_gencfg: cmake_check_build_system$/;"	t
pcl_ros_gencfg/fast	build/Makefile	/^pcl_ros_gencfg\/fast:$/;"	t
perception_oru	include/se_ndt/ndt_fuser_hmt_se.h	/^namespace perception_oru {$/;"	n
perception_oru	include/se_ndt/ndt_histogram.h	/^namespace perception_oru{$/;"	n
perception_oru	include/se_ndt/ndt_matcher_d2d_se.h	/^namespace perception_oru$/;"	n
perception_oru	include/se_ndt/ndt_matcher_p2d_se.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_map/cell_vector.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_map/impl/pointcloud_utils.hpp	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_map/lazy_grid.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_map/ndt_cell.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_map/ndt_map.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_map/pointcloud_utils.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_map/spatial_index.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^namespace perception_oru$/;"	n
perception_oru	oru_minimal/src/cell_vector.cpp	/^namespace perception_oru$/;"	n	file:
perception_oru	oru_minimal/src/lazy_grid.cpp	/^namespace perception_oru$/;"	n	file:
perception_oru	oru_minimal/src/ndt_cell.cpp	/^namespace perception_oru$/;"	n	file:
perception_oru	oru_minimal/src/ndt_map.cpp	/^namespace perception_oru$/;"	n	file:
perception_oru	oru_minimal/src/ndt_matcher_d2d.cpp	/^namespace perception_oru$/;"	n	file:
perception_oru	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^namespace perception_oru$/;"	n	file:
perception_oru	src/ndt_fuser_hmt_se.cpp	/^namespace perception_oru {$/;"	n	file:
perception_oru	src/ndt_histogram.cpp	/^namespace perception_oru{$/;"	n	file:
perception_oru	src/ndt_matcher_d2d_se.cpp	/^namespace perception_oru$/;"	n	file:
perception_oru	src/ndt_matcher_p2d_se.cpp	/^namespace perception_oru$/;"	n	file:
performRecencyFiltering	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    void performRecencyFiltering()$/;"	f	struct:TEventData	typeref:typename:void
pitch	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float pitch;$/;"	m	class:NDTVizGlutXYOrbitCamera	typeref:typename:float
plotLocalConflictNDTMap	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void plotLocalConflictNDTMap(perception_oru::NDTMap *map, pcl::PointCloud<pcl::PointXYZ> &cloud/;"	f	class:NDTViz	typeref:typename:void
plotLocalNDTMap	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void plotLocalNDTMap(pcl::PointCloud<pcl::PointXYZ> &cloud, double resolution, double R=0, doub/;"	f	class:NDTViz	typeref:typename:void
plotNDTMap	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void plotNDTMap(perception_oru::NDTMap *map, double R=1.0,double G=1.0,double B=1.0, bool heigh/;"	f	class:NDTViz	typeref:typename:void
plotNDTSAccordingToClass	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void plotNDTSAccordingToClass(float occupancy, perception_oru::NDTMap *map){$/;"	f	class:NDTViz	typeref:typename:void
plotNDTSAccordingToCost	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void plotNDTSAccordingToCost(float occupancy, double MAX_COST, perception_oru::NDTMap *map){$/;"	f	class:NDTViz	typeref:typename:void
plotNDTSAccordingToOccupancy	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void plotNDTSAccordingToOccupancy(float occupancy, perception_oru::NDTMap ***maps,std::vector<i/;"	f	class:NDTViz	typeref:typename:void
plotNDTTraversabilityMap	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void plotNDTTraversabilityMap(perception_oru::NDTMap *map){$/;"	f	class:NDTViz	typeref:typename:void
plotNDTs	include/rviz_ndt.h	/^	void plotNDTs(perception_oru::NDTMap ***maps,int n_res, int n_sem, ros::Time cl_time){$/;"	f	class:ndt_rviz	typeref:typename:void
plotNDTs	include/rviz_ndt.h	/^	void plotNDTs(std::vector<std::vector<perception_oru::NDTCell*> > &tempMap)$/;"	f	class:ndt_rviz	typeref:typename:void
point	include/se_ndt/file_loader.hpp	/^		pcl::PointXYZ point;$/;"	v	typeref:typename:pcl::PointXYZ
point	include/se_ndt/file_loader.hpp	/^		pcl::PointXYZI point;$/;"	v	typeref:typename:pcl::PointXYZI
points_	oru_minimal/include/ndt_map/ndt_cell.h	/^  std::vector<pcl::PointXYZ,Eigen::aligned_allocator<pcl::PointXYZ> > points_; \/\/\/The points /;"	m	class:perception_oru::NDTCell	typeref:typename:std::vector<pcl::PointXYZ,Eigen::aligned_allocator<pcl::PointXYZ>>
pos	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  GLfloat pos[3];$/;"	m	class:NDTVizGlutColorPoint	typeref:typename:GLfloat[3]
pos1	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  GLfloat pos1[3];$/;"	m	class:NDTVizGlutLine	typeref:typename:GLfloat[3]
pos2	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  GLfloat pos2[3];$/;"	m	class:NDTVizGlutLine	typeref:typename:GLfloat[3]
pos_diff	src/big_cloud_test.cpp	/^double pos_diff(Eigen::Matrix4d A, Eigen::Matrix4d B)$/;"	f	typeref:typename:double
pos_diff	src/ros_read_register.cpp	/^double pos_diff(Eigen::Matrix4d A, Eigen::Matrix4d B)$/;"	f	typeref:typename:double
pos_diff	src/semanticRegister.cpp	/^double pos_diff(Eigen::Matrix4d A, Eigen::Matrix4d B)$/;"	f	typeref:typename:double
pose_kdtree	include/se_ndt/se_ndt.hpp	/^        pcl::KdTreeFLANN<pcl::PointXYZL> pose_kdtree;$/;"	m	class:NDTMatch_SE	typeref:typename:pcl::KdTreeFLANN<pcl::PointXYZL>
poses	include/se_ndt/se_ndt.hpp	/^        pcl::PointCloud<pcl::PointXYZL>::Ptr poses;$/;"	m	class:NDTMatch_SE	typeref:typename:pcl::PointCloud<pcl::PointXYZL>::Ptr
position_	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  Eigen::Vector3f position_;$/;"	m	class:NDTVizGlutFixedCamera	typeref:typename:Eigen::Vector3f
precomputeAngleDerivatives	oru_minimal/src/ndt_matcher_p2d.cpp	/^void NDTMatcherP2D::precomputeAngleDerivatives(Eigen::Vector3d &eulerAngles)$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:void
precomputeAngleDerivatives	src/ndt_matcher_p2d_se.cpp	/^void NDTMatcherP2D_SE::precomputeAngleDerivatives(Eigen::Vector3d &eulerAngles)$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:void
predictOccupancy	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    float predictOccupancy(int N)$/;"	f	struct:TEventData	typeref:typename:float
prefix	include/se_ndt/ndt_fuser_hmt_se.h	/^		std::string prefix;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:std::string
preinstall	build/Makefile	/^preinstall: all$/;"	t
preinstall/fast	build/Makefile	/^preinstall\/fast:$/;"	t
prepend	build/atomic_configure/_setup_util.py	/^def prepend(environ, key, prefix):$/;"	f
prepend	build/catkin_generated/installspace/_setup_util.py	/^def prepend(environ, key, prefix):$/;"	f
prepend	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def prepend(environ, key, prefix):$/;"	f
prepend	build/devel/_setup_util.py	/^def prepend(environ, key, prefix):$/;"	f
prepend_env_variables	build/atomic_configure/_setup_util.py	/^def prepend_env_variables(environ, env_var_subfolders, workspaces):$/;"	f
prepend_env_variables	build/catkin_generated/installspace/_setup_util.py	/^def prepend_env_variables(environ, env_var_subfolders, workspaces):$/;"	f
prepend_env_variables	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def prepend_env_variables(environ, env_var_subfolders, workspaces):$/;"	f
prepend_env_variables	build/devel/_setup_util.py	/^def prepend_env_variables(environ, env_var_subfolders, workspaces):$/;"	f
pressed_keys	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  std::deque<unsigned char> pressed_keys;$/;"	m	class:NDTVizGlut	typeref:typename:std::deque<unsigned char>
prev_cloud	src/ros_receive_tf.cpp	/^        pcl::PointCloud<pcl::PointXYZI>::Ptr prev_cloud;$/;"	m	class:RvizShow	typeref:typename:pcl::PointCloud<pcl::PointXYZI>::Ptr	file:
prev_cloud	src/ros_register.cpp	/^        pcl::PointCloud<pcl::PointXYZI>::Ptr prev_cloud;$/;"	m	class:Registration	typeref:typename:pcl::PointCloud<pcl::PointXYZI>::Ptr	file:
prev_cloud	src/ros_register_d2d_ndt.cpp	/^        pcl::PointCloud<pcl::PointXYZI>::Ptr prev_cloud;$/;"	m	class:Registration	typeref:typename:pcl::PointCloud<pcl::PointXYZI>::Ptr	file:
pri	src/ros_register.cpp	/^        static void pri(int i)$/;"	f	class:Registration	typeref:typename:void	file:
printUsage	oru_minimal/src/ndt_viewer.cc	/^void printUsage() {$/;"	f	typeref:typename:void
print_transform	src/loader_test.cpp	/^void print_transform(Eigen::Affine3d &T)$/;"	f	typeref:typename:void
print_transform	src/ros_read_register.cpp	/^void print_transform(Eigen::Affine3d &T)$/;"	f	typeref:typename:void
print_transform	src/ros_register.cpp	/^void print_transform(Eigen::Affine3d T)$/;"	f	typeref:typename:void
print_transform	src/ros_register_d2d_ndt.cpp	/^void print_transform(Eigen::Affine3d &T)$/;"	f	typeref:typename:void
print_transform	src/semanticRegister.cpp	/^void print_transform(Eigen::Affine3d &T)$/;"	f	typeref:typename:void
print_transform_KITTI	src/ros_register.cpp	/^void print_transform_KITTI(Eigen::Affine3d T)$/;"	f	typeref:typename:void
print_vals	include/se_ndt/se_ndt.hpp	/^        void print_vals()$/;"	f	class:NDTMatch_SE	typeref:typename:void
process_events	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::process_events()$/;"	f	class:NDTVizGlut	typeref:typename:void
protoType	oru_minimal/include/ndt_map/cell_vector.h	/^    NDTCell *protoType;$/;"	m	class:perception_oru::CellVector	typeref:typename:NDTCell *
protoType	oru_minimal/include/ndt_map/lazy_grid.h	/^    NDTCell *protoType=NULL;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:NDTCell *
pseudoTransformNDT	oru_minimal/src/ndt_map.cpp	/^std::vector<NDTCell*> NDTMap::pseudoTransformNDT(Eigen::Transform<double,3,Eigen::Affine,Eigen::/;"	f	class:perception_oru::NDTMap	typeref:typename:std::vector<NDTCell * >
pseudoTransformNDT	oru_minimal/src/ndt_map_hmt.cpp	/^std::vector<NDTCell*> NDTMapHMT::pseudoTransformNDT(Eigen::Transform<double,3,Eigen::Affine,Eige/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:std::vector<NDTCell * >
pseudoTransformNDTMap	oru_minimal/src/ndt_map.cpp	/^NDTMap* NDTMap::pseudoTransformNDTMap(Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMajor> T/;"	f	class:perception_oru::NDTMap	typeref:typename:NDTMap *
pts	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  std::vector<NDTVizGlutColorPoint> pts;$/;"	m	class:NDTVizGlutPointCloudColor	typeref:typename:std::vector<NDTVizGlutColorPoint>
pub	src/ros_receive_tf.cpp	/^        ros::Publisher pub;$/;"	m	class:RvizShow	typeref:typename:ros::Publisher	file:
pub	src/ros_register.cpp	/^        ros::Publisher pub;$/;"	m	class:Registration	typeref:typename:ros::Publisher	file:
pub	src/ros_register_d2d_ndt.cpp	/^        ros::Publisher pub;$/;"	m	class:Registration	typeref:typename:ros::Publisher	file:
push_back	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void push_back(const NDTVizGlutEllipsoid &obj) { objs.push_back(obj); }$/;"	f	class:NDTVizGlutEllipsoids	typeref:typename:void
push_back	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void push_back(float x, float y, float z, float R, float G, float B) {$/;"	f	class:NDTVizGlutPointCloudColor	typeref:typename:void
push_back	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void push_back(float x1, float y1, float z1, float x2, float y2, float z2) {$/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:void
python_path	build/catkin_generated/generate_cached_setup.py	/^        python_path = os.path.join(workspace, 'lib\/python2.7\/site-packages')$/;"	v
qnxnto	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	build/CMakeFiles/3.14.6/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
quickSolveEqn	oru_minimal/src/CMyEllipsoid.cpp	/^bool quickSolveEqn(double a,double b_2,double c,double &t)	{$/;"	f	typeref:typename:bool
r_time	src/loader_test.cpp	/^        ros::Time r_time;$/;"	m	class:MapLoader	typeref:typename:ros::Time	file:
r_time	src/ros_receive_tf.cpp	/^        ros::Time r_time;$/;"	m	class:RvizShow	typeref:typename:ros::Time	file:
r_time	src/ros_register.cpp	/^        ros::Time r_time;$/;"	m	class:Registration	typeref:typename:ros::Time	file:
readFromStream	oru_minimal/src/CMyEllipsoid.cpp	/^void  CMyEllipsoid::readFromStream(CStream &in,int version)$/;"	f	class:CMyEllipsoid	typeref:typename:void
readTransform	include/se_ndt/file_loader.hpp	/^Eigen::Affine3d readTransform(istream &infile)$/;"	f	typeref:typename:Eigen::Affine3d
readTransform	src/big_cloud_test.cpp	/^std::vector<Eigen::Affine3d>  readTransform(string fname)$/;"	f	typeref:typename:std::vector<Eigen::Affine3d>
readTransform	src/ros_read_register.cpp	/^std::vector<Eigen::Affine3d>  readTransform(string fname)$/;"	f	typeref:typename:std::vector<Eigen::Affine3d>
readTransform	src/semanticRegister.cpp	/^std::vector<Eigen::Affine3d>  readTransform(string fname)$/;"	f	typeref:typename:std::vector<Eigen::Affine3d>
rebuild_cache	build/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	build/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
regularize	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    bool regularize;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
removeProbability	include/se_ndt/ndt_fuser_hmt_se.h	/^		float removeProbability;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:float
repaint	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void repaint(){$/;"	f	class:NDTViz	typeref:typename:void
repaint	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::repaint() {$/;"	f	class:NDTVizGlut	typeref:typename:void
rescaleCovariance	oru_minimal/src/ndt_cell.cpp	/^bool NDTCell::rescaleCovariance(Eigen::Matrix3d &cov, Eigen::Matrix3d &invCov)$/;"	f	class:perception_oru::NDTCell	typeref:typename:bool
rescaleCovariance	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::rescaleCovariance()$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
resolution	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    double resolution;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:double
resolutions	include/se_ndt/ndt_fuser_hmt_se.h	/^		vector<float> resolutions;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:vector<float>
resolutions	include/se_ndt/ndt_matcher_p2d_se.h	/^    std::vector<double> resolutions;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:std::vector<double>
resolutions	include/se_ndt/se_ndt.hpp	/^		vector<float> resolutions,size;$/;"	m	class:NDTMatch_SE	typeref:typename:vector<float>
resolutions	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    std::vector<double> resolutions;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:std::vector<double>
resolutions	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    std::vector<double> resolutions;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:std::vector<double>
resolutions	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    std::vector<double> resolutions;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:std::vector<double>
resolutions_order	include/se_ndt/ndt_fuser_hmt_se.h	/^		initializer_list<int> resolutions_order,tails;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:initializer_list<int>
resolutions_order	include/se_ndt/se_ndt.hpp	/^		vector<int> resolutions_order;$/;"	m	class:NDTMatch_SE	typeref:typename:vector<int>
rollback_env_variables	build/atomic_configure/_setup_util.py	/^def rollback_env_variables(environ, env_var_subfolders):$/;"	f
rollback_env_variables	build/catkin_generated/installspace/_setup_util.py	/^def rollback_env_variables(environ, env_var_subfolders):$/;"	f
rollback_env_variables	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^def rollback_env_variables(environ, env_var_subfolders):$/;"	f
rollback_env_variables	build/devel/_setup_util.py	/^def rollback_env_variables(environ, env_var_subfolders):$/;"	f
ros_register	CMakeLists.txt	/^    add_executable(ros_register src\/ros_register.cpp)$/;"	t
ros_register	build/Makefile	/^ros_register: cmake_check_build_system$/;"	t
ros_register/fast	build/Makefile	/^ros_register\/fast:$/;"	t
roscpp_generate_messages_cpp	build/Makefile	/^roscpp_generate_messages_cpp: cmake_check_build_system$/;"	t
roscpp_generate_messages_cpp/fast	build/Makefile	/^roscpp_generate_messages_cpp\/fast:$/;"	t
roscpp_generate_messages_eus	build/Makefile	/^roscpp_generate_messages_eus: cmake_check_build_system$/;"	t
roscpp_generate_messages_eus/fast	build/Makefile	/^roscpp_generate_messages_eus\/fast:$/;"	t
roscpp_generate_messages_lisp	build/Makefile	/^roscpp_generate_messages_lisp: cmake_check_build_system$/;"	t
roscpp_generate_messages_lisp/fast	build/Makefile	/^roscpp_generate_messages_lisp\/fast:$/;"	t
roscpp_generate_messages_nodejs	build/Makefile	/^roscpp_generate_messages_nodejs: cmake_check_build_system$/;"	t
roscpp_generate_messages_nodejs/fast	build/Makefile	/^roscpp_generate_messages_nodejs\/fast:$/;"	t
roscpp_generate_messages_py	build/Makefile	/^roscpp_generate_messages_py: cmake_check_build_system$/;"	t
roscpp_generate_messages_py/fast	build/Makefile	/^roscpp_generate_messages_py\/fast:$/;"	t
rosgraph_msgs_generate_messages_cpp	build/Makefile	/^rosgraph_msgs_generate_messages_cpp: cmake_check_build_system$/;"	t
rosgraph_msgs_generate_messages_cpp/fast	build/Makefile	/^rosgraph_msgs_generate_messages_cpp\/fast:$/;"	t
rosgraph_msgs_generate_messages_eus	build/Makefile	/^rosgraph_msgs_generate_messages_eus: cmake_check_build_system$/;"	t
rosgraph_msgs_generate_messages_eus/fast	build/Makefile	/^rosgraph_msgs_generate_messages_eus\/fast:$/;"	t
rosgraph_msgs_generate_messages_lisp	build/Makefile	/^rosgraph_msgs_generate_messages_lisp: cmake_check_build_system$/;"	t
rosgraph_msgs_generate_messages_lisp/fast	build/Makefile	/^rosgraph_msgs_generate_messages_lisp\/fast:$/;"	t
rosgraph_msgs_generate_messages_nodejs	build/Makefile	/^rosgraph_msgs_generate_messages_nodejs: cmake_check_build_system$/;"	t
rosgraph_msgs_generate_messages_nodejs/fast	build/Makefile	/^rosgraph_msgs_generate_messages_nodejs\/fast:$/;"	t
rosgraph_msgs_generate_messages_py	build/Makefile	/^rosgraph_msgs_generate_messages_py: cmake_check_build_system$/;"	t
rosgraph_msgs_generate_messages_py/fast	build/Makefile	/^rosgraph_msgs_generate_messages_py\/fast:$/;"	t
rotation_fuse_delta	include/se_ndt/ndt_fuser_hmt_se.h	/^	double translation_fuse_delta, rotation_fuse_delta;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:double
run_tests	build/Makefile	/^run_tests: cmake_check_build_system$/;"	t
run_tests/fast	build/Makefile	/^run_tests\/fast:$/;"	t
rvNDT	src/loader_test.cpp	/^        ndt_rviz rvNDT;$/;"	m	class:MapLoader	typeref:typename:ndt_rviz	file:
rvNDT	src/ros_receive_tf.cpp	/^        ndt_rviz rvNDT;$/;"	m	class:RvizShow	typeref:typename:ndt_rviz	file:
rvNDT	src/ros_register.cpp	/^        ndt_rviz rvNDT;$/;"	m	class:Registration	typeref:typename:ndt_rviz	file:
save	oru_minimal/include/ndt_map/lazy_grid.h	/^    void save(Archive& ar,  const unsigned int version) const {$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
save	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::save(const std::string &fileName)$/;"	f	class:NDTVizGlut	typeref:typename:int
saveMap	include/se_ndt/ndt_fuser_hmt_se.h	/^	bool saveMap() {$/;"	f	class:perception_oru::NDTFuserHMT_SE	typeref:typename:bool
saveOnDelete	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    bool saveOnDelete;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:bool
save_inc	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::save_inc()$/;"	f	class:NDTVizGlut	typeref:typename:int
save_inc_counter	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  int save_inc_counter;$/;"	m	class:NDTVizGlut	typeref:typename:int
scoreNDT	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::scoreNDT(std::vector<NDTCell*> &sourceNDT, NDTMap &targetNDT)$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:double
scoreNDTPositive	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::scoreNDTPositive(std::vector<NDTCell*> &sourceNDT, NDTMap &targetNDT,$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:double
scoreNDT_OM	oru_minimal/src/ndt_matcher_d2d.cpp	/^double NDTMatcherD2D::scoreNDT_OM(NDTMap &sourceNDT, NDTMap &targetNDT)$/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:double
scorePointCloud	oru_minimal/src/ndt_matcher_p2d.cpp	/^double NDTMatcherP2D::scorePointCloud(pcl::PointCloud<pcl::PointXYZ> &source,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:double
scorePointCloud	src/ndt_matcher_p2d_se.cpp	/^double NDTMatcherP2D_SE::scorePointCloud(pcl::PointCloud<pcl::PointXYZ> *source,$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:double
score_best	include/se_ndt/ndt_matcher_d2d_se.h	/^    double score_best;$/;"	m	class:perception_oru::NDTMatcherD2D_SE	typeref:typename:double
score_gradientF	include/se_ndt/ndt_matcher_d2d_se.h	/^	Eigen::Matrix<double,6,1> score_gradientF;$/;"	m	class:perception_oru::NDTMatcherD2D_SE	typeref:typename:Eigen::Matrix<double,6,1>
se_ndt	CMakeLists.txt	/^project(se_ndt)$/;"	p
se_ndt	build/Makefile	/^se_ndt: cmake_check_build_system$/;"	t
se_ndt/fast	build/Makefile	/^se_ndt\/fast:$/;"	t
semantic_index	oru_minimal/include/ndt_map/lazy_grid.h	/^    int semantic_index;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:int
send_transform	src/loader_test.cpp	/^void send_transform(Eigen::Affine3d &T)$/;"	f	typeref:typename:void
send_transform	src/ros_read_register.cpp	/^void send_transform(Eigen::Affine3d &T)$/;"	f	typeref:typename:void
send_transform	src/ros_register.cpp	/^void send_transform(Eigen::Affine3d T)$/;"	f	typeref:typename:void
send_transform	src/ros_register_d2d_ndt.cpp	/^void send_transform(Eigen::Affine3d &T)$/;"	f	typeref:typename:void
sensor_msgs_generate_messages_cpp	build/Makefile	/^sensor_msgs_generate_messages_cpp: cmake_check_build_system$/;"	t
sensor_msgs_generate_messages_cpp/fast	build/Makefile	/^sensor_msgs_generate_messages_cpp\/fast:$/;"	t
sensor_msgs_generate_messages_eus	build/Makefile	/^sensor_msgs_generate_messages_eus: cmake_check_build_system$/;"	t
sensor_msgs_generate_messages_eus/fast	build/Makefile	/^sensor_msgs_generate_messages_eus\/fast:$/;"	t
sensor_msgs_generate_messages_lisp	build/Makefile	/^sensor_msgs_generate_messages_lisp: cmake_check_build_system$/;"	t
sensor_msgs_generate_messages_lisp/fast	build/Makefile	/^sensor_msgs_generate_messages_lisp\/fast:$/;"	t
sensor_msgs_generate_messages_nodejs	build/Makefile	/^sensor_msgs_generate_messages_nodejs: cmake_check_build_system$/;"	t
sensor_msgs_generate_messages_nodejs/fast	build/Makefile	/^sensor_msgs_generate_messages_nodejs\/fast:$/;"	t
sensor_msgs_generate_messages_py	build/Makefile	/^sensor_msgs_generate_messages_py: cmake_check_build_system$/;"	t
sensor_msgs_generate_messages_py/fast	build/Makefile	/^sensor_msgs_generate_messages_py\/fast:$/;"	t
sensor_pose	include/se_ndt/ndt_fuser_hmt_se.h	/^	Eigen::Affine3d sensor_pose;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:Eigen::Affine3d
sensor_range	include/se_ndt/ndt_fuser_hmt_se.h	/^		double sensor_range;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:double
sensor_range	include/se_ndt/se_ndt.hpp	/^		float sensor_range=100;$/;"	m	class:NDTMatch_SE	typeref:typename:float
serialize	oru_minimal/include/ndt_map/lazy_grid.h	/^  void serialize(Archive & ar, const unsigned int version)\/\/In order to clal this you need to /;"	f	class:perception_oru::CellVector3d	typeref:typename:void
serialize	oru_minimal/include/ndt_map/ndt_cell.h	/^  void serialize(Archive & ar, const unsigned int version)\/\/In order to clal this you need to /;"	f	class:perception_oru::NDTCell	typeref:typename:void
serialize	oru_minimal/include/ndt_map/ndt_map.h	/^  void serialize(Archive & ar, const unsigned int version)\/\/In order to clal this you need to /;"	f	class:perception_oru::NDTMap	typeref:typename:void
serialize	oru_minimal/include/ndt_map/spatial_index.h	/^  void serialize(Archive & ar, const unsigned int version)$/;"	f	class:perception_oru::SpatialIndex	typeref:typename:void
set	oru_minimal/include/ndt_map/lazy_grid.h	/^        void set(int x, int y, int z, NDTCell* c)$/;"	f	struct:perception_oru::LazyGrid::Darray	typeref:typename:void
set2DsegmentsCount	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			void set2DsegmentsCount(unsigned int N) { m_2D_segments=N; CRenderizableDisplayList::notifyCh/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:void
set3DsegmentsCount	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			void set3DsegmentsCount(unsigned int N) { m_3D_segments=N; CRenderizableDisplayList::notifyCh/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:void
setAspectRatioFactor	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::setAspectRatioFactor(float factor) {$/;"	f	class:NDTVizGlut	typeref:typename:void
setCameraPointing	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void setCameraPointing(double x, double y, double z) {$/;"	f	class:NDTViz	typeref:typename:void
setCameraPointingToPoint	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void setCameraPointingToPoint(double x, double y, double z) {$/;"	f	class:NDTViz	typeref:typename:void
setCameraPointingToPoint	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::setCameraPointingToPoint(double x, double y, double z) {$/;"	f	class:NDTVizGlut	typeref:typename:void
setCameraPosition	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::setCameraPosition(double x, double y, double z) {$/;"	f	class:NDTVizGlut	typeref:typename:void
setCellType	oru_minimal/src/cell_vector.cpp	/^void CellVector::setCellType(NDTCell *type)$/;"	f	class:perception_oru::CellVector	typeref:typename:void
setCellType	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::setCellType(NDTCell *type)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
setCellType	src/lazy_grid_improved.cpp	/^void LazyGrid::setCellType(NDTCell *type)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
setCenter	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline void setCenter(const pcl::PointXYZ &cn)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setCenter	oru_minimal/include/ndt_map/spatial_index.h	/^    virtual void setCenter(const double &cx, const double &cy, const double &cz) {}$/;"	f	class:perception_oru::SpatialIndex	typeref:typename:void
setCenter	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::setCenter(const double &cx, const double &cy, const double &cz)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
setCenter	src/lazy_grid_improved.cpp	/^void LazyGrid::setCenter(const double &cx, const double &cy, const double &cz)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
setColor	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setColor(float R, float G, float B) { $/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:void
setColor	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setColor(float R, float G, float B, float A) { setColor4(R, G, B, A); }$/;"	f	class:NDTVizGlutEllipsoid	typeref:typename:void
setColor4	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setColor4(float R, float G, float B, float A) {$/;"	f	class:NDTVizGlutEllipsoid	typeref:typename:void
setColor4	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setColor4(float R, float G, float B, float A) {$/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:void
setCov	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setCov(const Eigen::Matrix3d &cov) {$/;"	f	class:NDTVizGlutEllipsoid	typeref:typename:void
setCov	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::setCov(const Eigen::Matrix3d &_cov)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setCovMatrix	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			void setCovMatrix( const mrpt::math::CMatrixFixedNumeric<T,2,2> &m )	{$/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:void
setCovMatrix	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			void setCovMatrix( const mrpt::math::CMatrixFixedNumeric<T,3,3> &m, int resizeToSize = -1 )	{$/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:void
setCovMatrix	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setCovMatrix(const Eigen::Matrix3d &cov) { this->setCov(cov); }$/;"	f	class:NDTVizGlutEllipsoid	typeref:typename:void
setCovMatrix	oru_minimal/src/CMyEllipsoid.cpp	/^void CMyEllipsoid::setCovMatrix( const mrpt::math::CMatrixDouble &m, int resizeToSize)$/;"	f	class:CMyEllipsoid	typeref:typename:void
setCovMatrix	oru_minimal/src/CMyEllipsoid.cpp	/^void CMyEllipsoid::setCovMatrix( const mrpt::math::CMatrixFloat &m, int resizeToSize)$/;"	f	class:CMyEllipsoid	typeref:typename:void
setDimensions	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline void setDimensions(const double &xs, const double &ys, const double &zs)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setEmptyval	oru_minimal/include/ndt_map/ndt_cell.h	/^  void setEmptyval(int emptyval_)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setEvals	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline void setEvals(const Eigen::Vector3d &ev)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setEvecs	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline void setEvecs(const Eigen::Matrix3d& ev){$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setEventData	oru_minimal/include/ndt_map/ndt_cell.h	/^  void setEventData(TEventData _ed)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setFocalPoint	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setFocalPoint(const Eigen::Vector3f &fp) {$/;"	f	class:NDTVizGlutFixedCamera	typeref:typename:void
setFocalPoint	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setFocalPoint(const Eigen::Vector3f &fp) {$/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:void
setFullScreen	oru_minimal/src/NDTVizGlut.cc	/^void NDTVizGlut::setFullScreen(bool fs) $/;"	f	class:NDTVizGlut	typeref:typename:void
setInsertPosition	oru_minimal/src/ndt_map_hmt.cpp	/^void NDTMapHMT::setInsertPosition(const Eigen::Vector3d &newPos) {$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:void
setLineWidth	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			void setLineWidth(float w) { m_lineWidth=w; CRenderizableDisplayList::notifyChange(); } \/\/!/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:void
setLocation	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setLocation(double x, double y, double z) { $/;"	f	class:NDTVizGlutEllipsoid	typeref:typename:void
setMapSize	oru_minimal/include/ndt_map/ndt_map.h	/^  void setMapSize(float sx, float sy, float sz)$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
setMean	oru_minimal/include/ndt_map/ndt_cell.h	/^  inline void setMean(const Eigen::Vector3d &mean)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setMode	oru_minimal/include/ndt_map/ndt_map.h	/^  void setMode(bool is3D_)$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
setMotionBlurFrames	oru_minimal/src/NDTVizGlut.cc	/^void NDTVizGlut::setMotionBlurFrames(int f) $/;"	f	class:NDTVizGlut	typeref:typename:void
setN	oru_minimal/include/ndt_map/ndt_cell.h	/^  void setN(int N_)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setNeighbours	include/se_ndt/se_ndt.hpp	/^		void setNeighbours(short int i){matcher.n_neighbours=i;};$/;"	f	class:NDTMatch_SE	typeref:typename:void
setOccupancy	oru_minimal/include/ndt_map/ndt_cell.h	/^  void setOccupancy(float occ_)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setParameters	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::setParameters(double _EVAL_ROUGH_THR   ,$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setPitchAngle	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setPitchAngle(double p) { pitch = p; } $/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:void
setPointSize	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setPointSize(float size) { m_pointSize = size; }$/;"	f	class:NDTVizGlutPointCloudColor	typeref:typename:void
setPointSize	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setPointSize(float size) { m_pointSize = size; }$/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:void
setPos	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setPos(const Eigen::Vector3d &pos) { m_mean = pos; }$/;"	f	class:NDTVizGlutEllipsoid	typeref:typename:void
setPosition	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setPosition(const Eigen::Vector3f &p) {$/;"	f	class:NDTVizGlutFixedCamera	typeref:typename:void
setPosition	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setPosition(const Eigen::Vector3f &p) {$/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:void
setQuantiles	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			void setQuantiles(float q) { m_quantiles=q; CRenderizableDisplayList::notifyChange(); } \/\/!/;"	f	class:mrpt::opengl::CMyEllipsoid	typeref:typename:void
setRGB	oru_minimal/include/ndt_map/ndt_cell.h	/^  void setRGB(float r, float g, float b)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
setSensorPose	include/se_ndt/ndt_fuser_hmt_se.h	/^	void setSensorPose(Eigen::Affine3d spose){$/;"	f	class:perception_oru::NDTFuserHMT_SE	typeref:typename:void
setSensorPose	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::setSensorPose(const double *pose)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
setSize	oru_minimal/include/ndt_map/spatial_index.h	/^    virtual void setSize(const double &sx, const double &sy, const double &sz) {}$/;"	f	class:perception_oru::SpatialIndex	typeref:typename:void
setSize	oru_minimal/src/lazy_grid.cpp	/^void LazyGrid::setSize(const double &sx, const double &sy, const double &sz)$/;"	f	class:perception_oru::LazyGrid	typeref:typename:void
setSize	src/lazy_grid_improved.cpp	/^void LazyGrid::setSize(const double &sx, const double &sy, const double &sz)$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:void
setThickness	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void setThickness(float thickness) {$/;"	f	class:NDTVizGlutSetOfLines	typeref:typename:void
set_save_inc_flag	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void set_save_inc_flag(bool flag) { do_save_inc = flag; }$/;"	f	class:NDTVizGlut	typeref:typename:void
show_cell	include/rviz_ndt.h	/^    void show_cell(const Eigen::Matrix3d &m_cov, const Eigen::Vector3d &m_mean,float occupancy,r/;"	f	class:ndt_rviz	typeref:typename:void
show_grid	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  int show_grid;$/;"	m	class:NDTVizGlut	typeref:typename:int
show_samples	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  int show_samples;$/;"	m	class:NDTVizGlut	typeref:typename:int
simple_match	src/se_ndt.cpp	/^Eigen::Affine3d NDTMatch_SE::simple_match(pcl::PointCloud<pcl::PointXYZI>::Ptr cloud1, pcl::Poin/;"	f	class:NDTMatch_SE	typeref:typename:Eigen::Affine3d
simple_registration	CMakeLists.txt	/^add_executable(simple_registration src\/simple_registration.cpp)$/;"	t
simple_registration	build/Makefile	/^simple_registration: cmake_check_build_system$/;"	t
simple_registration/fast	build/Makefile	/^simple_registration\/fast:$/;"	t
size	include/se_ndt/ndt_fuser_hmt_se.h	/^		initializer_list<float> ignore,size;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:initializer_list<float>
size	include/se_ndt/se_ndt.hpp	/^		vector<float> resolutions,size;$/;"	m	class:NDTMatch_SE	typeref:typename:vector<float>
size	oru_minimal/include/ndt_map/lazy_grid.h	/^        int size[3];$/;"	m	struct:perception_oru::LazyGrid::Darray	typeref:typename:int[3]
size	oru_minimal/include/ndt_map/spatial_index.h	/^    virtual int size() const$/;"	f	class:perception_oru::SpatialIndex	typeref:typename:int
size	oru_minimal/src/cell_vector.cpp	/^int CellVector::size()$/;"	f	class:perception_oru::CellVector	typeref:typename:int
size	oru_minimal/src/lazy_grid.cpp	/^int LazyGrid::size()$/;"	f	class:perception_oru::LazyGrid	typeref:typename:int
size	src/lazy_grid_improved.cpp	/^int LazyGrid::size()$/;"	f	class:lslgeneric::LazyGrid	typeref:typename:int
sizeIsSet	oru_minimal/include/ndt_map/lazy_grid.h	/^    bool centerIsSet, sizeIsSet;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:bool
sizeX	oru_minimal/include/ndt_map/lazy_grid.h	/^    int sizeX,sizeY,sizeZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:int
sizeXmeters	oru_minimal/include/ndt_map/lazy_grid.h	/^    double sizeXmeters, sizeYmeters, sizeZmeters;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
sizeY	oru_minimal/include/ndt_map/lazy_grid.h	/^    int sizeX,sizeY,sizeZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:int
sizeYmeters	oru_minimal/include/ndt_map/lazy_grid.h	/^    double sizeXmeters, sizeYmeters, sizeZmeters;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
sizeZ	oru_minimal/include/ndt_map/lazy_grid.h	/^    int sizeX,sizeY,sizeZ;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:int
sizeZmeters	oru_minimal/include/ndt_map/lazy_grid.h	/^    double sizeXmeters, sizeYmeters, sizeZmeters;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:double
squareSum	oru_minimal/include/ndt_map/ndt_cell.h	/^  double squareSum(const Eigen::Matrix3d &C,const Eigen::Vector3d &x){$/;"	f	class:perception_oru::NDTCell	typeref:typename:double
src/ndt_histogram.cpp.i	build/Makefile	/^src\/ndt_histogram.cpp.i:$/;"	t
src/ndt_histogram.cpp.o	build/Makefile	/^src\/ndt_histogram.cpp.o:$/;"	t
src/ndt_histogram.cpp.s	build/Makefile	/^src\/ndt_histogram.cpp.s:$/;"	t
src/ndt_histogram.i	build/Makefile	/^src\/ndt_histogram.i: src\/ndt_histogram.cpp.i$/;"	t
src/ndt_histogram.o	build/Makefile	/^src\/ndt_histogram.o: src\/ndt_histogram.cpp.o$/;"	t
src/ndt_histogram.s	build/Makefile	/^src\/ndt_histogram.s: src\/ndt_histogram.cpp.s$/;"	t
src/ndt_matcher_d2d_se.cpp.i	build/Makefile	/^src\/ndt_matcher_d2d_se.cpp.i:$/;"	t
src/ndt_matcher_d2d_se.cpp.o	build/Makefile	/^src\/ndt_matcher_d2d_se.cpp.o:$/;"	t
src/ndt_matcher_d2d_se.cpp.s	build/Makefile	/^src\/ndt_matcher_d2d_se.cpp.s:$/;"	t
src/ndt_matcher_d2d_se.i	build/Makefile	/^src\/ndt_matcher_d2d_se.i: src\/ndt_matcher_d2d_se.cpp.i$/;"	t
src/ndt_matcher_d2d_se.o	build/Makefile	/^src\/ndt_matcher_d2d_se.o: src\/ndt_matcher_d2d_se.cpp.o$/;"	t
src/ndt_matcher_d2d_se.s	build/Makefile	/^src\/ndt_matcher_d2d_se.s: src\/ndt_matcher_d2d_se.cpp.s$/;"	t
src/ndt_matcher_p2d_se.cpp.i	build/Makefile	/^src\/ndt_matcher_p2d_se.cpp.i:$/;"	t
src/ndt_matcher_p2d_se.cpp.o	build/Makefile	/^src\/ndt_matcher_p2d_se.cpp.o:$/;"	t
src/ndt_matcher_p2d_se.cpp.s	build/Makefile	/^src\/ndt_matcher_p2d_se.cpp.s:$/;"	t
src/ndt_matcher_p2d_se.i	build/Makefile	/^src\/ndt_matcher_p2d_se.i: src\/ndt_matcher_p2d_se.cpp.i$/;"	t
src/ndt_matcher_p2d_se.o	build/Makefile	/^src\/ndt_matcher_p2d_se.o: src\/ndt_matcher_p2d_se.cpp.o$/;"	t
src/ndt_matcher_p2d_se.s	build/Makefile	/^src\/ndt_matcher_p2d_se.s: src\/ndt_matcher_p2d_se.cpp.s$/;"	t
src/ros_register.cpp.i	build/Makefile	/^src\/ros_register.cpp.i:$/;"	t
src/ros_register.cpp.o	build/Makefile	/^src\/ros_register.cpp.o:$/;"	t
src/ros_register.cpp.s	build/Makefile	/^src\/ros_register.cpp.s:$/;"	t
src/ros_register.i	build/Makefile	/^src\/ros_register.i: src\/ros_register.cpp.i$/;"	t
src/ros_register.o	build/Makefile	/^src\/ros_register.o: src\/ros_register.cpp.o$/;"	t
src/ros_register.s	build/Makefile	/^src\/ros_register.s: src\/ros_register.cpp.s$/;"	t
src/se_ndt.cpp.i	build/Makefile	/^src\/se_ndt.cpp.i:$/;"	t
src/se_ndt.cpp.o	build/Makefile	/^src\/se_ndt.cpp.o:$/;"	t
src/se_ndt.cpp.s	build/Makefile	/^src\/se_ndt.cpp.s:$/;"	t
src/se_ndt.i	build/Makefile	/^src\/se_ndt.i: src\/se_ndt.cpp.i$/;"	t
src/se_ndt.o	build/Makefile	/^src\/se_ndt.o: src\/se_ndt.cpp.o$/;"	t
src/se_ndt.s	build/Makefile	/^src\/se_ndt.s: src\/se_ndt.cpp.s$/;"	t
src/simple_registration.cpp.i	build/Makefile	/^src\/simple_registration.cpp.i:$/;"	t
src/simple_registration.cpp.o	build/Makefile	/^src\/simple_registration.cpp.o:$/;"	t
src/simple_registration.cpp.s	build/Makefile	/^src\/simple_registration.cpp.s:$/;"	t
src/simple_registration.i	build/Makefile	/^src\/simple_registration.i: src\/simple_registration.cpp.i$/;"	t
src/simple_registration.o	build/Makefile	/^src\/simple_registration.o: src\/simple_registration.cpp.o$/;"	t
src/simple_registration.s	build/Makefile	/^src\/simple_registration.s: src\/simple_registration.cpp.s$/;"	t
start	include/profiler.hpp	/^    void start(){$/;"	f	class:Profiler	typeref:typename:void
startEventLoop	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	void startEventLoop() {$/;"	f	class:NDTViz	typeref:typename:void
startT	include/profiler.hpp	/^    chrono::steady_clock::time_point startT;$/;"	m	class:Profiler	typeref:typename:chrono::steady_clock::time_point
start_glut_loop	oru_minimal/src/NDTVizGlut.cc	/^start_glut_loop(void *ptr)$/;"	f	typeref:typename:void *
start_main_loop	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  virtual void start_main_loop() {$/;"	f	class:NDTVizGlut	typeref:typename:void
start_main_loop_own_thread	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  virtual void start_main_loop_own_thread() {$/;"	f	class:NDTVizGlut	typeref:typename:void
start_time	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  double start_time;$/;"	m	class:NDTVizGlut	typeref:typename:double
std_msgs_generate_messages_cpp	build/Makefile	/^std_msgs_generate_messages_cpp: cmake_check_build_system$/;"	t
std_msgs_generate_messages_cpp/fast	build/Makefile	/^std_msgs_generate_messages_cpp\/fast:$/;"	t
std_msgs_generate_messages_eus	build/Makefile	/^std_msgs_generate_messages_eus: cmake_check_build_system$/;"	t
std_msgs_generate_messages_eus/fast	build/Makefile	/^std_msgs_generate_messages_eus\/fast:$/;"	t
std_msgs_generate_messages_lisp	build/Makefile	/^std_msgs_generate_messages_lisp: cmake_check_build_system$/;"	t
std_msgs_generate_messages_lisp/fast	build/Makefile	/^std_msgs_generate_messages_lisp\/fast:$/;"	t
std_msgs_generate_messages_nodejs	build/Makefile	/^std_msgs_generate_messages_nodejs: cmake_check_build_system$/;"	t
std_msgs_generate_messages_nodejs/fast	build/Makefile	/^std_msgs_generate_messages_nodejs\/fast:$/;"	t
std_msgs_generate_messages_py	build/Makefile	/^std_msgs_generate_messages_py: cmake_check_build_system$/;"	t
std_msgs_generate_messages_py/fast	build/Makefile	/^std_msgs_generate_messages_py\/fast:$/;"	t
std_srvs_generate_messages_cpp	build/Makefile	/^std_srvs_generate_messages_cpp: cmake_check_build_system$/;"	t
std_srvs_generate_messages_cpp/fast	build/Makefile	/^std_srvs_generate_messages_cpp\/fast:$/;"	t
std_srvs_generate_messages_eus	build/Makefile	/^std_srvs_generate_messages_eus: cmake_check_build_system$/;"	t
std_srvs_generate_messages_eus/fast	build/Makefile	/^std_srvs_generate_messages_eus\/fast:$/;"	t
std_srvs_generate_messages_lisp	build/Makefile	/^std_srvs_generate_messages_lisp: cmake_check_build_system$/;"	t
std_srvs_generate_messages_lisp/fast	build/Makefile	/^std_srvs_generate_messages_lisp\/fast:$/;"	t
std_srvs_generate_messages_nodejs	build/Makefile	/^std_srvs_generate_messages_nodejs: cmake_check_build_system$/;"	t
std_srvs_generate_messages_nodejs/fast	build/Makefile	/^std_srvs_generate_messages_nodejs\/fast:$/;"	t
std_srvs_generate_messages_py	build/Makefile	/^std_srvs_generate_messages_py: cmake_check_build_system$/;"	t
std_srvs_generate_messages_py/fast	build/Makefile	/^std_srvs_generate_messages_py\/fast:$/;"	t
step_control	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    bool step_control;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
step_control	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    bool step_control;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:bool
stop_down_timer	src/ros_register.cpp	/^        int stop_down_timer=2;$/;"	m	class:Registration	typeref:typename:int	file:
studentT	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::studentT(){$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
subsample	oru_minimal/src/ndt_matcher_p2d.cpp	/^pcl::PointCloud<pcl::PointXYZ> NDTMatcherP2D::subsample(pcl::PointCloud<pcl::PointXYZ>& original/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:pcl::PointCloud<pcl::PointXYZ>
subsample	src/ndt_matcher_p2d_se.cpp	/^pcl::PointCloud<pcl::PointXYZ> NDTMatcherP2D_SE::subsample(pcl::PointCloud<pcl::PointXYZ>& origi/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:pcl::PointCloud<pcl::PointXYZ>
subsample_size	include/se_ndt/ndt_matcher_p2d_se.h	/^    double subsample_size;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:double
subsample_size	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    double subsample_size;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:double
switchCamera	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::switchCamera(const std::string &type) {$/;"	f	class:NDTVizGlut	typeref:typename:void
system	build/atomic_configure/_setup_util.py	/^system = platform.system()$/;"	v
system	build/catkin_generated/installspace/_setup_util.py	/^system = platform.system()$/;"	v
system	build/catkin_generated/stamps/se_ndt/_setup_util.py.stamp	/^system = platform.system()$/;"	v
system	build/devel/_setup_util.py	/^system = platform.system()$/;"	v
tails	include/se_ndt/ndt_fuser_hmt_se.h	/^		initializer_list<int> resolutions_order,tails;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:initializer_list<int>
test	build/Makefile	/^test:$/;"	t
test/fast	build/Makefile	/^test\/fast: test$/;"	t
tests	build/Makefile	/^tests: cmake_check_build_system$/;"	t
tests/fast	build/Makefile	/^tests\/fast:$/;"	t
tf2_msgs_generate_messages_cpp	build/Makefile	/^tf2_msgs_generate_messages_cpp: cmake_check_build_system$/;"	t
tf2_msgs_generate_messages_cpp/fast	build/Makefile	/^tf2_msgs_generate_messages_cpp\/fast:$/;"	t
tf2_msgs_generate_messages_eus	build/Makefile	/^tf2_msgs_generate_messages_eus: cmake_check_build_system$/;"	t
tf2_msgs_generate_messages_eus/fast	build/Makefile	/^tf2_msgs_generate_messages_eus\/fast:$/;"	t
tf2_msgs_generate_messages_lisp	build/Makefile	/^tf2_msgs_generate_messages_lisp: cmake_check_build_system$/;"	t
tf2_msgs_generate_messages_lisp/fast	build/Makefile	/^tf2_msgs_generate_messages_lisp\/fast:$/;"	t
tf2_msgs_generate_messages_nodejs	build/Makefile	/^tf2_msgs_generate_messages_nodejs: cmake_check_build_system$/;"	t
tf2_msgs_generate_messages_nodejs/fast	build/Makefile	/^tf2_msgs_generate_messages_nodejs\/fast:$/;"	t
tf2_msgs_generate_messages_py	build/Makefile	/^tf2_msgs_generate_messages_py: cmake_check_build_system$/;"	t
tf2_msgs_generate_messages_py/fast	build/Makefile	/^tf2_msgs_generate_messages_py\/fast:$/;"	t
tf_generate_messages_cpp	build/Makefile	/^tf_generate_messages_cpp: cmake_check_build_system$/;"	t
tf_generate_messages_cpp/fast	build/Makefile	/^tf_generate_messages_cpp\/fast:$/;"	t
tf_generate_messages_eus	build/Makefile	/^tf_generate_messages_eus: cmake_check_build_system$/;"	t
tf_generate_messages_eus/fast	build/Makefile	/^tf_generate_messages_eus\/fast:$/;"	t
tf_generate_messages_lisp	build/Makefile	/^tf_generate_messages_lisp: cmake_check_build_system$/;"	t
tf_generate_messages_lisp/fast	build/Makefile	/^tf_generate_messages_lisp\/fast:$/;"	t
tf_generate_messages_nodejs	build/Makefile	/^tf_generate_messages_nodejs: cmake_check_build_system$/;"	t
tf_generate_messages_nodejs/fast	build/Makefile	/^tf_generate_messages_nodejs\/fast:$/;"	t
tf_generate_messages_py	build/Makefile	/^tf_generate_messages_py: cmake_check_build_system$/;"	t
tf_generate_messages_py/fast	build/Makefile	/^tf_generate_messages_py\/fast:$/;"	t
tf_listener	src/ros_register.cpp	/^        tf::TransformListener tf_listener;$/;"	m	class:Registration	typeref:typename:tf::TransformListener	file:
toRVIZ	include/se_ndt/se_ndt.hpp	/^        std::vector<std::vector<perception_oru::NDTCell*> > toRVIZ;$/;"	m	class:NDTMatch_SE	typeref:typename:std::vector<std::vector<perception_oru::NDTCell * >>
topThree	include/se_ndt/ndt_histogram.h	/^    std::vector< Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMajor>,Eigen::aligned_allocat/;"	m	class:perception_oru::NDTHistogram
topThree	oru_minimal/include/ndt_map/ndt_histogram.h	/^    std::vector< Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMajor>,Eigen::aligned_allocat/;"	m	class:lslgeneric::NDTHistogram
topThreeS	include/se_ndt/ndt_histogram.h	/^    double topThreeS[3]; $/;"	m	class:perception_oru::NDTHistogram	typeref:typename:double[3]
topThreeS	oru_minimal/include/ndt_map/ndt_histogram.h	/^    double topThreeS[3];$/;"	m	class:lslgeneric::NDTHistogram	typeref:typename:double[3]
topic_tools_generate_messages_cpp	build/Makefile	/^topic_tools_generate_messages_cpp: cmake_check_build_system$/;"	t
topic_tools_generate_messages_cpp/fast	build/Makefile	/^topic_tools_generate_messages_cpp\/fast:$/;"	t
topic_tools_generate_messages_eus	build/Makefile	/^topic_tools_generate_messages_eus: cmake_check_build_system$/;"	t
topic_tools_generate_messages_eus/fast	build/Makefile	/^topic_tools_generate_messages_eus\/fast:$/;"	t
topic_tools_generate_messages_lisp	build/Makefile	/^topic_tools_generate_messages_lisp: cmake_check_build_system$/;"	t
topic_tools_generate_messages_lisp/fast	build/Makefile	/^topic_tools_generate_messages_lisp\/fast:$/;"	t
topic_tools_generate_messages_nodejs	build/Makefile	/^topic_tools_generate_messages_nodejs: cmake_check_build_system$/;"	t
topic_tools_generate_messages_nodejs/fast	build/Makefile	/^topic_tools_generate_messages_nodejs\/fast:$/;"	t
topic_tools_generate_messages_py	build/Makefile	/^topic_tools_generate_messages_py: cmake_check_build_system$/;"	t
topic_tools_generate_messages_py/fast	build/Makefile	/^topic_tools_generate_messages_py\/fast:$/;"	t
traceLine	oru_minimal/include/ndt_map/lazy_grid.h	/^    bool traceLine(const Eigen::Vector3d &origin, const Eigen::Vector3d &endpoint, const Eigen::/;"	f	class:perception_oru::LazyGrid	typeref:typename:bool
traceLine	oru_minimal/src/lazy_grid.cpp	/^bool LazyGrid::traceLine(const Eigen::Vector3d &origin, const pcl::PointXYZ &endpoint,const Eige/;"	f	class:perception_oru::LazyGrid	typeref:typename:bool
traceLine	src/lazy_grid_improved.cpp	/^bool LazyGrid::traceLine(const Eigen::Vector3d &origin, const pcl::PointXYZ &endpoint,const Eige/;"	f	class:lslgeneric::LazyGrid	typeref:typename:bool
traceLineWithEndpoint	src/lazy_grid_improved.cpp	/^bool LazyGrid::traceLineWithEndpoint(const Eigen::Vector3d &origin, const pcl::PointXYZ &endpoin/;"	f	class:lslgeneric::LazyGrid	typeref:typename:bool
traceRay	oru_minimal/src/CMyEllipsoid.cpp	/^bool CMyEllipsoid::traceRay(const mrpt::poses::CPose3D &o,double &dist) const	{$/;"	f	class:CMyEllipsoid	typeref:typename:bool
transformNDTMap	oru_minimal/src/ndt_map.cpp	/^void NDTMap::transformNDTMap(Eigen::Transform<double, 3, Eigen::Affine, Eigen::ColMajor> T)$/;"	f	class:perception_oru::NDTMap	typeref:typename:void
transformPointCloud	oru_minimal/include/ndt_map/impl/pointcloud_utils.hpp	/^pcl::PointCloud<PointT> transformPointCloud(Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMa/;"	f	namespace:perception_oru	typeref:typename:pcl::PointCloud<PointT>
transformPointCloudInPlace	oru_minimal/include/ndt_map/impl/pointcloud_utils.hpp	/^void transformPointCloudInPlace(Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMajor> &Tr, pc/;"	f	namespace:perception_oru	typeref:typename:void
transformPointCloudsInPlace	oru_minimal/include/ndt_map/impl/pointcloud_utils.hpp	/^void transformPointCloudsInPlace(Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMajor> &Tr, p/;"	f	namespace:perception_oru	typeref:typename:void
translation	oru_minimal/include/ndt_map/lazy_grid.h	/^    Eigen::Vector3d translation;$/;"	m	class:perception_oru::LazyGrid	typeref:typename:Eigen::Vector3d
translation_fuse_delta	include/se_ndt/ndt_fuser_hmt_se.h	/^	double translation_fuse_delta, rotation_fuse_delta;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:double
treeUpdated	oru_minimal/include/ndt_map/cell_vector.h	/^    bool treeUpdated;$/;"	m	class:perception_oru::CellVector	typeref:typename:bool
tryLoad	oru_minimal/src/ndt_map_hmt.cpp	/^bool NDTMapHMT::tryLoad(const double &cx, const double &cy, const double &cz, LazyGrid *&grid) {$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:bool
tryLoadPosition	oru_minimal/src/ndt_map_hmt.cpp	/^bool NDTMapHMT::tryLoadPosition(const Eigen::Vector3d &newPos) {$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:bool
update	src/ndt_fuser_hmt_se.cpp	/^Eigen::Affine3d NDTFuserHMT_SE::update(Eigen::Affine3d Tmotion, pcl::PointCloud<pcl::PointXYZ>::/;"	f	class:perception_oru::NDTFuserHMT_SE	typeref:typename:Eigen::Affine3d
updateColorInformation	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::updateColorInformation()$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
updateEmpty	oru_minimal/include/ndt_map/ndt_cell.h	/^  void updateEmpty(double elik, double dist)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
updateEntryEvent	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    void updateEntryEvent(uint8_t meas, float w)$/;"	f	struct:TEventData	typeref:typename:void
updateExitEvent	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    void updateExitEvent(uint8_t meas, float w)$/;"	f	struct:TEventData	typeref:typename:void
updateMap	src/ndt_fuser_hmt_se.cpp	/^bool NDTFuserHMT_SE::updateMap()$/;"	f	class:perception_oru::NDTFuserHMT_SE	typeref:typename:bool
updateOccupancy	oru_minimal/include/ndt_map/ndt_cell.h	/^  void updateOccupancy(float occ_val, float max_occu=255.0)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
updateSampleVariance	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::updateSampleVariance(const Eigen::Matrix3d &cov2,const Eigen::Vector3d &m2, unsign/;"	f	class:perception_oru::NDTCell	typeref:typename:void
updateSimple	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    void updateSimple(uint8_t meas)$/;"	f	struct:TEventData	typeref:typename:void
updateSimple	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    void updateSimple(uint8_t meas, float w)$/;"	f	struct:TEventData	typeref:typename:void
update_cam	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::update_cam()$/;"	f	class:NDTVizGlut	typeref:typename:void
update_gradient_hessian	oru_minimal/src/ndt_matcher_d2d.cpp	/^bool NDTMatcherD2D::update_gradient_hessian($/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
update_gradient_hessian_2d	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^bool NDTMatcherD2D_2D::update_gradient_hessian_2d($/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:bool
update_gradient_hessian_local	oru_minimal/src/ndt_matcher_d2d.cpp	/^bool NDTMatcherD2D::update_gradient_hessian_local($/;"	f	class:perception_oru::NDTMatcherD2D	typeref:typename:bool
update_gradient_hessian_local_2d	oru_minimal/src/ndt_matcher_d2d_2d.cpp	/^bool NDTMatcherD2D_2D::update_gradient_hessian_local_2d($/;"	f	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:bool
update_hessian	oru_minimal/src/ndt_matcher_p2d.cpp	/^void NDTMatcherP2D::update_hessian(Eigen::Matrix<double,6,6> &Hessian,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:void
update_hessian	src/ndt_matcher_p2d_se.cpp	/^void NDTMatcherP2D_SE::update_hessian(Eigen::Matrix<double,6,6> &Hessian,$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:void
update_motion	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void update_motion(int x, int y) {$/;"	f	class:NDTVizGlutFixedCamera	typeref:typename:void
update_motion	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void update_motion(int x, int y) {$/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:void
update_mouse	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void update_mouse(int button, int state, int x, int y) {$/;"	f	class:NDTVizGlutFixedCamera	typeref:typename:void
update_mouse	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  void update_mouse(int button, int state, int x, int y) {$/;"	f	class:NDTVizGlutXYOrbitCamera	typeref:typename:void
update_score_gradient	oru_minimal/src/ndt_matcher_p2d.cpp	/^bool NDTMatcherP2D::update_score_gradient(Eigen::Matrix<double,6,1> &score_gradient,$/;"	f	class:lslgeneric::NDTMatcherP2D	typeref:typename:bool
update_score_gradient	src/ndt_matcher_p2d_se.cpp	/^bool NDTMatcherP2D_SE::update_score_gradient(Eigen::Matrix<double,6,1> &score_gradient,$/;"	f	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:bool
update_set	oru_minimal/include/ndt_map/ndt_map.h	/^  std::set<NDTCell*> update_set;$/;"	m	class:perception_oru::NDTMap	typeref:typename:std::set<NDTCell * >
update_set	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    std::set<NDTCell*> update_set;$/;"	m	class:perception_oru::NDTMapHMT	typeref:typename:std::set<NDTCell * >
useSaved	include/se_ndt/se_ndt.hpp	/^        bool useSaved=false;$/;"	m	class:NDTMatch_SE	typeref:typename:bool
useSimpleDerivatives	include/se_ndt/ndt_matcher_p2d_se.h	/^    bool useSimpleDerivatives;$/;"	m	class:perception_oru::NDTMatcherP2D_SE	typeref:typename:bool
useSimpleDerivatives	oru_minimal/include/ndt_registration/ndt_matcher_p2d.h	/^    bool useSimpleDerivatives;$/;"	m	class:lslgeneric::NDTMatcherP2D	typeref:typename:bool
use_gfeat	src/ros_register.cpp	/^        bool use_gfeat=false;$/;"	m	class:Registration	typeref:typename:bool	file:
value_to_rgb	include/rviz_ndt.h	/^std::array<float,3> value_to_rgb(float i, float max)$/;"	f	typeref:typename:std::array<float,3>
viewer	include/se_ndt/ndt_fuser_hmt_se.h	/^	NDTViz *viewer;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:NDTViz *
viewer	include/se_ndt/se_ndt.hpp	/^        NDTViz *viewer = NULL;$/;"	m	class:NDTMatch_SE	typeref:typename:NDTViz *
visualize	include/se_ndt/ndt_fuser_hmt_se.h	/^	bool visualize,firstRun;$/;"	m	class:perception_oru::NDTFuserHMT_SE	typeref:typename:bool
visualize	src/se_ndt.cpp	/^void NDTMatch_SE::visualize()$/;"	f	class:NDTMatch_SE	typeref:typename:void
visualize_thread	src/se_ndt.cpp	/^void NDTMatch_SE::visualize_thread()$/;"	f	class:NDTMatch_SE	typeref:typename:void
volatile	build/CMakeFiles/3.14.6/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
win	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^static int win;$/;"	v	typeref:typename:int
win3D	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	NDTVizGlut *win3D;$/;"	m	class:NDTViz	typeref:typename:NDTVizGlut *
win_close	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::win_close()$/;"	f	class:NDTVizGlut	typeref:typename:void
win_close_	oru_minimal/src/NDTVizGlut.cc	/^void win_close_() { glut3d_ptr->win_close(); }$/;"	f	typeref:typename:void
win_idle	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::win_idle()$/;"	f	class:NDTVizGlut	typeref:typename:void
win_idle_	oru_minimal/src/NDTVizGlut.cc	/^void win_idle_() { glut3d_ptr->win_idle(); }  $/;"	f	typeref:typename:void
win_key	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::win_key(unsigned char key, int x, int y)$/;"	f	class:NDTVizGlut	typeref:typename:void
win_key_	oru_minimal/src/NDTVizGlut.cc	/^void win_key_(unsigned char key, int x, int y) { glut3d_ptr->win_key(key, x, y); }$/;"	f	typeref:typename:void
win_motion	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::win_motion(int x, int y)$/;"	f	class:NDTVizGlut	typeref:typename:void
win_motion_	oru_minimal/src/NDTVizGlut.cc	/^void win_motion_(int x, int y) { glut3d_ptr->win_motion(x, y); }$/;"	f	typeref:typename:void
win_mouse	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::win_mouse(int button, int state, int x, int y)$/;"	f	class:NDTVizGlut	typeref:typename:void
win_mouse_	oru_minimal/src/NDTVizGlut.cc	/^void win_mouse_(int button, int state, int x, int y) { glut3d_ptr->win_mouse(button, state, x, y/;"	f	typeref:typename:void
win_redraw	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::win_redraw()$/;"	f	class:NDTVizGlut	typeref:typename:void
win_redraw_	oru_minimal/src/NDTVizGlut.cc	/^void win_redraw_() { glut3d_ptr->win_redraw(); }$/;"	f	typeref:typename:void
win_reshape	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::win_reshape(int width, int height)$/;"	f	class:NDTVizGlut	typeref:typename:void
win_reshape_	oru_minimal/src/NDTVizGlut.cc	/^void win_reshape_(int w, int h) { glut3d_ptr->win_reshape (w,h); } $/;"	f	typeref:typename:void
win_run	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::win_run(int *argc, char **argv)$/;"	f	class:NDTVizGlut	typeref:typename:int
withinRange	oru_minimal/include/ndt_map/lazy_grid.h	/^  bool withinRange(size_t i, size_t j, size_t k){$/;"	f	class:perception_oru::CellVector3d	typeref:typename:bool
word	include/se_ndt/file_loader.hpp	/^		string word = "";$/;"	v	typeref:typename:string
writeCellVectorJFF	oru_minimal/src/ndt_map.cpp	/^int NDTMap::writeCellVectorJFF(FILE * jffout)$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
writeG2O_Edge	src/se_ndt.cpp	/^void writeG2O_Edge(Eigen::Affine3d T, int i, int j, Eigen::Matrix<double,7,7> C)$/;"	f	typeref:typename:void
writeG2O_Vertex	src/se_ndt.cpp	/^void writeG2O_Vertex(Eigen::Affine3d T, int i)$/;"	f	typeref:typename:void
writeJFFEventData	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::writeJFFEventData(FILE * jffout, TEventData &evdata)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
writeJFFMatrix	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::writeJFFMatrix(FILE * jffout, Eigen::Matrix3d &mat)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
writeJFFVector	oru_minimal/src/ndt_cell.cpp	/^void NDTCell::writeJFFVector(FILE * jffout, Eigen::Vector3d &vec)$/;"	f	class:perception_oru::NDTCell	typeref:typename:void
writeLazyGridJFF	oru_minimal/src/ndt_map.cpp	/^int NDTMap::writeLazyGridJFF(FILE * jffout)$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
writeOctTreeJFF	oru_minimal/src/ndt_map.cpp	/^int NDTMap::writeOctTreeJFF(FILE * jffout)$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
writeTo	oru_minimal/src/ndt_map_hmt.cpp	/^int NDTMapHMT::writeTo()$/;"	f	class:lslgeneric::NDTMapHMT	typeref:typename:int
writeToJFF	oru_minimal/src/ndt_cell.cpp	/^int NDTCell::writeToJFF(FILE * jffout)$/;"	f	class:perception_oru::NDTCell	typeref:typename:int
writeToJFF	oru_minimal/src/ndt_map.cpp	/^int NDTMap::writeToJFF(const char* filename)$/;"	f	class:perception_oru::NDTMap	typeref:typename:int
writeToStream	oru_minimal/src/CMyEllipsoid.cpp	/^void  CMyEllipsoid::writeToStream(CStream &out,int *version) const$/;"	f	class:CMyEllipsoid	typeref:typename:void
writelock	include/se_ndt/ndt_histogram.h	/^    omp_lock_t writelock;$/;"	m	class:perception_oru::NDTHistogram	typeref:typename:omp_lock_t
xsize_	oru_minimal/include/ndt_map/ndt_cell.h	/^  double xsize_, ysize_, zsize_;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
xtB	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,1,3> TMP1, xtB;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,1,3>
xtB	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,1,3> TMP1, xtB;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,1,3>
xtBH	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,6,6> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,6,6>
xtBH	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,3> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,3>
xtBJ	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,6,1> xtBJ, xtBZBx, Q;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,6,1>
xtBJ	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,1> xtBJ, xtBZBx, Q;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,1>
xtBZBJ	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,6,6> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,6,6>
xtBZBJ	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,3> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,3>
xtBZBZBx	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,6,6> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,6,6>
xtBZBZBx	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,3> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,3>
xtBZBx	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,6,1> xtBJ, xtBZBx, Q;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,6,1>
xtBZBx	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,1> xtBJ, xtBZBx, Q;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,1>
xtBZhBx	oru_minimal/include/ndt_registration/ndt_matcher_d2d.h	/^    Eigen::Matrix<double,6,6> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D	typeref:typename:Eigen::Matrix<double,6,6>
xtBZhBx	oru_minimal/include/ndt_registration/ndt_matcher_d2d_2d.h	/^    Eigen::Matrix<double,3,3> JtBJ, xtBZBJ, xtBH, xtBZBZBx, xtBZhBx;$/;"	m	class:perception_oru::NDTMatcherD2D_2D	typeref:typename:Eigen::Matrix<double,3,3>
xyzBound	oru_minimal/include/ndt_map/lazy_grid.h	/^        void xyzBound(int &x,int &y,int &z)$/;"	f	struct:perception_oru::LazyGrid::Darray	typeref:typename:void
yaw	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  float yaw;$/;"	m	class:NDTVizGlutXYOrbitCamera	typeref:typename:float
ysize_	oru_minimal/include/ndt_map/ndt_cell.h	/^  double xsize_, ysize_, zsize_;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
zsize_	oru_minimal/include/ndt_map/ndt_cell.h	/^  double xsize_, ysize_, zsize_;$/;"	m	class:perception_oru::NDTCell	typeref:typename:double
~CMyEllipsoid	oru_minimal/include/ndt_visualisation/CMyEllipsoid.h	/^			virtual ~CMyEllipsoid() { }$/;"	f	class:mrpt::opengl::CMyEllipsoid
~CellVector	oru_minimal/src/cell_vector.cpp	/^CellVector::~CellVector()$/;"	f	class:perception_oru::CellVector
~LazyGrid	oru_minimal/src/lazy_grid.cpp	/^LazyGrid::~LazyGrid()$/;"	f	class:perception_oru::LazyGrid
~LazyGrid	src/lazy_grid_improved.cpp	/^LazyGrid::~LazyGrid()$/;"	f	class:lslgeneric::LazyGrid
~NDTCell	oru_minimal/include/ndt_map/ndt_cell.h	/^  virtual ~NDTCell()$/;"	f	class:perception_oru::NDTCell
~NDTFuserHMT_SE	include/se_ndt/ndt_fuser_hmt_se.h	/^	~NDTFuserHMT_SE()$/;"	f	class:perception_oru::NDTFuserHMT_SE
~NDTMap	oru_minimal/include/ndt_map/ndt_map.h	/^  virtual ~NDTMap()$/;"	f	class:perception_oru::NDTMap
~NDTMapHMT	oru_minimal/include/ndt_map/ndt_map_hmt.h	/^    virtual ~NDTMapHMT()$/;"	f	class:perception_oru::NDTMapHMT
~NDTMatch_SE	src/se_ndt.cpp	/^NDTMatch_SE::~NDTMatch_SE()$/;"	f	class:NDTMatch_SE
~NDTViz	oru_minimal/include/ndt_visualisation/ndt_viz.h	/^	virtual ~NDTViz () {$/;"	f	class:NDTViz
~NDTVizGlut	oru_minimal/src/NDTVizGlut.cc	/^NDTVizGlut::~NDTVizGlut()$/;"	f	class:NDTVizGlut
~NDTVizGlutEllipsoid	oru_minimal/include/ndt_visualisation/NDTVizGlut.hh	/^  ~NDTVizGlutEllipsoid() { }$/;"	f	class:NDTVizGlutEllipsoid
~SpatialIndex	oru_minimal/include/ndt_map/spatial_index.h	/^    virtual ~SpatialIndex()$/;"	f	class:perception_oru::SpatialIndex
~TEventData	oru_minimal/include/ndt_map/impl/EventCounterData.hpp	/^    ~TEventData()$/;"	f	struct:TEventData
