Implementation of SE-NDT laser odometry, presented in "Integrating deep semantic segmentation into 3D point cloud registration", Robotics and Automation Letters, Oct. 2018

This version uses PointNet++ instead of PointNet, and is integrated with ROS. The model is pretrained for use with HDL64.

Dependencies: Eigen, Tensorflow, ROS, PCL

To use:

git clone --recurse-submodules https://github.com/azaganidis/se_ndt
mkdir se_ndt/build
cd se_ndt/build
cmake ..
make -j4
./ros_register 

On a new terminal:

cd se_ndt/pointnet2
python RosClassify.py

If python complains about not finding shared object files, you have to rebuild the PointNet++ libs, in the folder tf_ops.

Simple usage example of the registration at src/simple_registration.cpp
